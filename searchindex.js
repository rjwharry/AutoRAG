Search.setIndex({"alltitles": {"/v1/run (POST)": [[50, "id2"]], "/v1/stream (POST)": [[50, "id3"]], "/version (GET)": [[50, "id4"]], "0. Retrieval token metric in AutoRAG": [[54, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[53, "understanding-autorag-s-retrieval-gt"]], "1. /v1/run (POST)": [[50, "v1-run-post"]], "1. Add File Name": [[31, "add-file-name"]], "1. Auto-truncate prompt": [[61, "auto-truncate-prompt"]], "1. Bleu": [[52, "bleu"]], "1. Build the Docker Image": [[56, "build-the-docker-image"]], "1. Factoid": [[48, "factoid"]], "1. HTML Parser": [[39, "html-parser"]], "1. Installation": [[112, "installation"]], "1. PDF": [[40, "pdf"]], "1. Parse": [[49, "parse"]], "1. Precision": [[53, "precision"]], "1. Query Expansion": [[100, null]], "1. Reasoning Evolving": [[45, "reasoning-evolving"]], "1. Run as a Code": [[113, "run-as-a-code"]], "1. Sample retrieval gt": [[47, "sample-retrieval-gt"]], "1. Set chunker instance": [[31, "set-chunker-instance"]], "1. Set parser instance": [[42, "set-parser-instance"]], "1. Token": [[32, "token"], [33, "token"]], "1. Token Precision": [[54, "token-precision"]], "1. Unanswerable question filtering": [[46, "unanswerable-question-filtering"]], "1. Use YAML path": [[51, "use-yaml-path"]], "2. /v1/stream (POST)": [[50, "v1-stream-post"]], "2. Accurate token output": [[61, "accurate-token-output"]], "2. CSV": [[40, "csv"]], "2. Character": [[32, "character"]], "2. Concept Completion": [[48, "concept-completion"]], "2. Conditional Evolving": [[45, "conditional-evolving"]], "2. Get retrieval gt contents to generate questions": [[47, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[112, "optimization"]], "2. Passage Dependent Filtering": [[46, "passage-dependent-filtering"]], "2. QA Creation": [[49, "qa-creation"]], "2. Recall": [[53, "recall"]], "2. Retrieval": [[104, null]], "2. Rouge": [[52, "rouge"]], "2. Run as an API server": [[113, "run-as-an-api-server"]], "2. Run the Docker Container": [[56, "run-the-docker-container"]], "2. Sentence": [[33, "sentence"]], "2. Sentence Splitter": [[31, "sentence-splitter"]], "2. Set YAML file": [[31, "set-yaml-file"], [42, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[39, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[54, "token-recall"]], "2. Use a trial path": [[51, "use-a-trial-path"]], "3. /version (GET)": [[50, "version-get"]], "3. Accurate log prob output": [[61, "accurate-log-prob-output"]], "3. Chunking Optimization": [[49, "chunking-optimization"]], "3. Compress Query": [[45, "compress-query"]], "3. F1 Score": [[53, "f1-score"]], "3. Generate queries": [[47, "generate-queries"]], "3. JSON": [[40, "json"]], "3. LlamaIndex": [[112, "llamaindex"]], "3. METEOR": [[52, "meteor"]], "3. Passage Augmenter": [[64, null]], "3. Run as a Web Interface": [[113, "run-as-a-web-interface"]], "3. Sentence": [[32, "sentence"]], "3. Start chunking": [[31, "start-chunking"]], "3. Start parsing": [[42, "start-parsing"]], "3. Token F1": [[54, "token-f1"]], "3. Two-hop Incremental": [[48, "two-hop-incremental"]], "3. Use Runner": [[51, "use-runner"]], "3. Using a Custom Cache Directory with HF_HOME": [[56, "using-a-custom-cache-directory-with-hf-home"]], "3. Window": [[33, "window"]], "4. Check the result": [[31, "check-the-result"], [42, "check-the-result"]], "4. GPU-related Error": [[112, "gpu-related-error"]], "4. Generate answers": [[47, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[53, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[40, "markdown"]], "4. Passage_Reranker": [[86, null]], "4. QA - Corpus mapping": [[49, "qa-corpus-mapping"]], "4. Sem Score": [[52, "sem-score"]], "4. Semantic": [[33, "semantic"]], "5-1. Coherence": [[52, "coherence"]], "5-2. Consistency": [[52, "consistency"]], "5-3. Fluency": [[52, "fluency"]], "5-4. Relevance": [[52, "relevance"]], "5. Debugging and Manual Access": [[56, "debugging-and-manual-access"]], "5. Filtering questions": [[47, "filtering-questions"]], "5. G-Eval": [[52, "g-eval"]], "5. HTML": [[40, "html"]], "5. MAP (Mean Average Precision)": [[53, "map-mean-average-precision"]], "5. Passage Filter": [[70, null]], "5. Simple": [[33, "simple"]], "5. UnicodeDecodeError": [[112, "unicodedecodeerror"]], "6. Bert Score": [[52, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[53, "ndcg-normalized-discounted-cumulative-gain"]], "6. Ollama RequestTimeOut Error": [[112, "ollama-requesttimeout-error"]], "6. Passage_Compressor": [[67, null]], "6. Save the QA data": [[47, "save-the-qa-data"]], "6. Use gpu version": [[56, "use-gpu-version"]], "6. XML": [[40, "xml"]], "7. All files": [[40, "all-files"]], "7. Prompt Maker": [[95, null]], "8. Generator": [[59, null]], "API Endpoint": [[50, "id1"]], "API client usage example": [[50, "api-client-usage-example"]], "API endpoint": [[50, null]], "Add more LLM models": [[57, "add-more-llm-models"]], "Add your embedding models": [[57, "add-your-embedding-models"]], "Additional Notes": [[56, "additional-notes"]], "Answer Generation": [[44, null]], "Any trouble to use Korean tokenizer?": [[101, null]], "Auto-save feature": [[38, null]], "AutoRAG documentation": [[55, null]], "Available Chunk Method": [[32, "available-chunk-method"], [33, "available-chunk-method"]], "Available List": [[63, null]], "Available Parse Method by File Type": [[40, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[31, "available-sentence-splitter"]], "BM25": [[101, null]], "Backend Support": [[105, "backend-support"]], "Basic Concepts": [[34, "basic-concepts"]], "Basic Generation": [[44, "basic-generation"]], "Before Usage": [[76, "before-usage"], [81, "before-usage"], [83, "before-usage"], [92, "before-usage"]], "Build from source": [[56, "build-from-source"]], "Chunk": [[31, null]], "Clova": [[39, null]], "Colab Tutorial": [[113, null]], "Colbert Reranker": [[77, null]], "Concise Generation": [[44, "concise-generation"]], "Configuration": [[109, "configuration"]], "Configure LLM & Embedding models": [[57, null]], "Configure the Embedding model": [[57, "configure-the-embedding-model"]], "Configure the LLM model": [[57, "configure-the-llm-model"]], "Contact": [[110, null]], "Contact us": [[110, "contact-us"]], "Corpus Dataset": [[35, "corpus-dataset"]], "Could not build wheels": [[112, "could-not-build-wheels"]], "Data Creation": [[34, null], [58, "data-creation"]], "Dataset Format": [[35, null]], "Default Prompt": [[99, "default-prompt"]], "Deploy your optimal RAG pipeline": [[113, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[108, null]], "Don\u2019t know Filter": [[46, "don-t-know-filter"]], "Early version of AutoRAG": [[110, "early-version-of-autorag"]], "Endpoints": [[50, "endpoints"]], "Error while running LLM": [[112, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[108, "evaluate-nodes-that-can-t-evaluate"]], "Evaluation data creation tutorial": [[49, null]], "Example": [[48, "example"]], "Example API Documentation": [[50, "example-api-documentation"]], "Example Configuration Using Normalize Mean Strategy": [[109, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[109, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[109, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[111, "example-node-lines"]], "Example YAML": [[31, "example-yaml"], [31, "id1"], [32, "example-yaml"], [33, "example-yaml"], [39, "example-yaml"], [40, "example-yaml"], [40, "id1"], [40, "id2"], [40, "id3"], [40, "id4"], [40, "id5"], [40, "id6"], [41, "example-yaml"], [43, "example-yaml"]], "Example config.yaml": [[60, "example-config-yaml"], [61, "example-config-yaml"], [62, "example-config-yaml"], [65, "example-config-yaml"], [66, "example-config-yaml"], [68, "example-config-yaml"], [69, "example-config-yaml"], [71, "example-config-yaml"], [72, "example-config-yaml"], [73, "example-config-yaml"], [74, "example-config-yaml"], [75, "example-config-yaml"], [76, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [79, "example-config-yaml"], [80, "example-config-yaml"], [81, "example-config-yaml"], [82, "example-config-yaml"], [83, "example-config-yaml"], [84, "example-config-yaml"], [85, "example-config-yaml"], [87, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [91, "example-config-yaml"], [92, "example-config-yaml"], [93, "example-config-yaml"], [94, "example-config-yaml"], [96, "example-config-yaml"], [97, "example-config-yaml"], [98, "example-config-yaml"], [99, "example-config-yaml"], [101, "example-config-yaml"], [102, "example-config-yaml"], [103, "example-config-yaml"], [105, "example-config-yaml"]], "Example config.yaml file": [[59, "example-config-yaml-file"], [64, "example-config-yaml-file"], [67, "example-config-yaml-file"], [70, "example-config-yaml-file"], [86, "example-config-yaml-file"], [95, "example-config-yaml-file"], [100, "example-config-yaml-file"], [104, "example-config-yaml-file"]], "Explanation of concepts": [[111, "explanation-of-concepts"]], "Explanation:": [[56, "explanation"], [56, "id1"]], "Extract pipeline and evaluate test dataset": [[113, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[93, null]], "Facing Import Error": [[112, "facing-import-error"]], "Facing OPENAI API error": [[112, "facing-openai-api-error"]], "Factoid Example": [[48, "factoid-example"]], "Features": [[31, "features"]], "Filtering": [[46, null]], "Find Optimal RAG Pipeline": [[113, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[78, null]], "Flag Embedding Reranker": [[79, null]], "FlashRank Reranker": [[80, null]], "Folder Structure": [[107, null]], "Generate QA set from Corpus data using RAGAS": [[37, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Metrics": [[52, null]], "How optimization works": [[108, null]], "How to Use": [[32, "how-to-use"], [33, "how-to-use"], [40, "how-to-use"]], "Huggingface AutoTokenizer": [[101, "huggingface-autotokenizer"]], "HyDE": [[97, null]], "Hybrid - cc": [[102, null]], "Hybrid - rrf": [[103, null]], "If you have both query and generation_gt:": [[38, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[38, "if-you-only-have-query-data"]], "Index": [[38, "index"], [57, "index"]], "Installation and Setup": [[56, null]], "Installation for Japanese \ud83c\uddef\ud83c\uddf5": [[56, "installation-for-japanese"]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[56, "installation-for-korean"]], "Installation for Local Models \ud83c\udfe0": [[56, "installation-for-local-models"]], "Installation for Parsing \ud83c\udf32": [[56, "installation-for-parsing"]], "Ko-reranker": [[82, null]], "LLM-based Don\u2019t know Filter": [[46, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[32, null]], "Langchain Parse": [[40, null]], "Language Support": [[41, "language-support"]], "Legacy": [[36, null]], "Llama Index Chunk": [[33, null]], "Llama Parse": [[41, null]], "LlamaIndex": [[44, "llamaindex"], [44, "id2"]], "Long Context Reorder": [[94, null]], "Long LLM Lingua": [[66, null]], "Long story short": [[35, null], [35, null], [35, null], [35, null]], "Make Node Line": [[106, "make-node-line"]], "Make YAML file": [[106, "make-yaml-file"]], "Make a Custom Evolving function": [[45, "make-a-custom-evolving-function"]], "Make a custom config YAML file": [[106, null]], "Make corpus data from raw documents": [[38, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[38, "make-qa-data-from-corpus-data"]], "Merger Node": [[110, "merger-node"]], "Migration Guide": [[58, null]], "Mixedbread AI Reranker": [[83, null]], "Module Parameters": [[60, "module-parameters"], [61, "module-parameters"], [62, "module-parameters"], [65, "module-parameters"], [66, "module-parameters"], [68, "module-parameters"], [69, "module-parameters"], [71, "module-parameters"], [72, "module-parameters"], [73, "module-parameters"], [74, "module-parameters"], [75, "module-parameters"], [76, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [79, "module-parameters"], [80, "module-parameters"], [81, "module-parameters"], [82, "module-parameters"], [83, "module-parameters"], [84, "module-parameters"], [85, "module-parameters"], [87, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [91, "module-parameters"], [92, "module-parameters"], [93, "module-parameters"], [94, "module-parameters"], [96, "module-parameters"], [97, "module-parameters"], [98, "module-parameters"], [99, "module-parameters"], [101, "module-parameters"], [102, "module-parameters"], [103, "module-parameters"], [105, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.chunk"], [3, "module-contents"], [4, "module-autorag.data.legacy"], [5, "module-autorag.data.legacy.corpus"], [6, "module-autorag.data.legacy.qacreation"], [7, "module-autorag.data.parse"], [8, "module-autorag.data.qa"], [9, "module-autorag.data.qa.evolve"], [10, "module-autorag.data.qa.filter"], [11, "module-autorag.data.qa.generation_gt"], [12, "module-autorag.data.qa.query"], [13, "module-contents"], [14, "module-autorag.data.utils"], [15, "module-autorag.deploy"], [16, "module-autorag.evaluation"], [17, "module-autorag.evaluation.metric"], [18, "module-autorag.nodes"], [19, "module-autorag.nodes.generator"], [20, "module-autorag.nodes.passageaugmenter"], [21, "module-autorag.nodes.passagecompressor"], [22, "module-autorag.nodes.passagefilter"], [23, "module-autorag.nodes.passagereranker"], [24, "module-contents"], [25, "module-autorag.nodes.promptmaker"], [26, "module-autorag.nodes.queryexpansion"], [27, "module-autorag.nodes.retrieval"], [28, "module-autorag.schema"], [29, "module-autorag.utils"]], "Modules that use Embedding model": [[57, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[57, "modules-that-use-llm-model"]], "MonoT5": [[84, null]], "More optimization strategies": [[108, "more-optimization-strategies"]], "Multi Query Expansion": [[98, null]], "Next Step": [[113, null]], "Node & Module": [[111, "node-module"]], "Node Line": [[111, "node-line"]], "Node Parameters": [[59, "node-parameters"], [64, "node-parameters"], [67, "node-parameters"], [70, "node-parameters"], [86, "node-parameters"], [95, "node-parameters"], [100, "node-parameters"], [103, "node-parameters"], [104, "node-parameters"]], "Node line for Modular RAG": [[110, "node-line-for-modular-rag"]], "Note": [[80, null]], "Note for Windows Users": [[56, "note-for-windows-users"]], "Note: Dataset Format": [[113, null]], "OpenAI": [[44, "openai"], [44, "id1"]], "OpenAI LLM": [[61, null]], "OpenVINO Reranker": [[85, null]], "Output Columns": [[31, "output-columns"], [42, "output-columns"]], "Overview": [[31, "overview"], [38, "overview"], [42, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [59, "overview"], [104, "overview"], [109, "overview"]], "Overview:": [[67, "overview"], [86, "overview"], [95, "overview"], [100, "overview"]], "Parameters": [[43, "parameters"]], "Parse": [[42, null]], "Pass the best result to the next node": [[108, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[71, null]], "Point": [[39, "point"]], "Policy Node": [[110, "policy-node"]], "Prepare Evaluation Dataset": [[113, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[65, null]], "Project": [[107, "project"]], "Provided Query Evolving Functions": [[45, "provided-query-evolving-functions"]], "Purpose": [[59, null], [67, null], [104, null]], "Python Sample Code": [[50, "python-sample-code"]], "QA Dataset": [[35, "qa-dataset"]], "QA creation": [[47, null]], "Query Decompose": [[99, null]], "Query Evolving": [[45, null]], "Query Generation": [[48, null]], "Question types": [[48, "question-types"]], "RAGAS evaluation data generation": [[37, null]], "RAGAS question types": [[37, "ragas-question-types"]], "RankGPT": [[87, null]], "Recency Filter": [[72, null]], "Refine": [[68, null]], "Retrieval Metrics": [[53, null]], "Retrieval Token Metrics": [[54, null]], "Road to Modular RAG": [[110, null]], "Rule-based Don\u2019t know Filter": [[46, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[113, "run-autorag-optimization"]], "Run AutoRAG with \ud83d\udc33 Docker": [[56, "run-autorag-with-docker"]], "Run Chunk Pipeline": [[31, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[113, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[42, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[51, "run-with-autorag-runner"]], "Run with CLI": [[51, "run-with-cli"]], "Running API server": [[50, "running-api-server"]], "Running the Web Interface": [[51, "running-the-web-interface"]], "Sample Structure Index": [[107, "sample-structure-index"]], "Samples": [[35, "samples"]], "Sentence Transformer Reranker": [[88, null]], "Setup OPENAI API KEY": [[56, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[73, null]], "Similarity Threshold Cutoff": [[74, null]], "Specify modules": [[106, "specify-modules"]], "Specify nodes": [[106, "specify-nodes"]], "Start creating your own evaluation data": [[38, null]], "Strategy": [[95, "strategy"], [100, "strategy"], [109, null], [111, "strategy"]], "Strategy Parameter": [[109, "strategy-parameter"]], "Strategy Parameters": [[59, "strategy-parameters"], [67, "strategy-parameters"], [86, "strategy-parameters"], [104, "strategy-parameters"]], "Strategy Parameters:": [[95, "strategy-parameters"], [100, "strategy-parameters"]], "Structure": [[111, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [8, "subpackages"], [16, "subpackages"], [18, "subpackages"], [23, "subpackages"]], "Summarize": [[111, null], [111, null], [111, null]], "Supported Chunk Modules": [[31, "supported-chunk-modules"]], "Supported Model Names": [[83, "supported-model-names"], [84, "supported-model-names"], [92, "supported-model-names"]], "Supported Modules": [[59, "supported-modules"], [67, "supported-modules"], [86, "supported-modules"], [95, "supported-modules"], [100, "supported-modules"], [104, "supported-modules"]], "Supported Parse Modules": [[42, "supported-parse-modules"]], "Supporting Embedding models": [[57, "supporting-embedding-models"]], "Supporting LLM models": [[57, "supporting-llm-models"]], "Swapping modules in Node": [[108, "swapping-modules-in-node"]], "TART": [[89, null]], "Table Detection": [[39, "table-detection"], [43, "table-detection"]], "Table Extraction": [[41, "table-extraction"]], "Table Hybrid Parse": [[43, null]], "Table Parse Available Modules": [[43, "table-parse-available-modules"]], "The length or row is different from the original data": [[112, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[75, null]], "Time Reranker": [[90, null]], "Tree Summarize": [[69, null]], "Trouble with installation?": [[56, null]], "TroubleShooting": [[112, null]], "Tutorial": [[113, null]], "UPR": [[91, null]], "Usage": [[48, "usage"], [48, "id1"], [48, "id2"]], "Use custom models": [[37, "use-custom-models"]], "Use custom prompt": [[38, "use-custom-prompt"]], "Use environment variable in the YAML file": [[106, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[62, "use-in-multi-gpu"]], "Use multiple prompts": [[38, "use-multiple-prompts"]], "Use vllm": [[57, "use-vllm"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[32, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[33, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Parse Method that is not in the Available Parse Method": [[40, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[31, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[113, "validate-your-system"]], "Vectordb": [[105, null]], "Version: 1.0.0": [[50, "version-1-0-0"]], "Want to know more about Modular RAG?": [[110, null]], "Want to specify project folder?": [[31, null], [42, null], [51, null], [113, null], [113, null], [113, null]], "Web Interface": [[51, null]], "Web Interface example": [[51, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[113, null]], "What is Node Line?": [[110, null]], "What is difference between Passage Filter and Passage Reranker?": [[70, null]], "What is pass_compressor?": [[67, null]], "What is pass_passage_augmenter?": [[64, null]], "What is pass_passage_filter?": [[70, null]], "What is pass_query_expansion?": [[100, null]], "What is pass_reranker?": [[86, null]], "What is passage?": [[38, null]], "What is tuple in the yaml file?": [[106, null]], "When you have existing qa data": [[38, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[51, null]], "Why use openai_llm module?": [[61, "why-use-openai-llm-module"]], "Why use python command?": [[113, null]], "Why use vllm module?": [[62, "why-use-vllm-module"]], "Window Replacement": [[96, null]], "Write custom config yaml file": [[113, null]], "[Node Line] summary.csv": [[107, "node-line-summary-csv"]], "[Node] summary.csv": [[107, "node-summary-csv"]], "[trial] summary.csv": [[107, "trial-summary-csv"]], "autorag": [[30, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.chunk package": [[2, null]], "autorag.data.chunk.base module": [[2, "module-autorag.data.chunk.base"]], "autorag.data.chunk.langchain_chunk module": [[2, "module-autorag.data.chunk.langchain_chunk"]], "autorag.data.chunk.llama_index_chunk module": [[2, "module-autorag.data.chunk.llama_index_chunk"]], "autorag.data.chunk.run module": [[2, "module-autorag.data.chunk.run"]], "autorag.data.corpus package": [[3, null]], "autorag.data.corpus.langchain module": [[3, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[3, "autorag-data-corpus-llama-index-module"]], "autorag.data.legacy package": [[4, null]], "autorag.data.legacy.corpus package": [[5, null]], "autorag.data.legacy.corpus.langchain module": [[5, "module-autorag.data.legacy.corpus.langchain"]], "autorag.data.legacy.corpus.llama_index module": [[5, "module-autorag.data.legacy.corpus.llama_index"]], "autorag.data.legacy.qacreation package": [[6, null]], "autorag.data.legacy.qacreation.base module": [[6, "module-autorag.data.legacy.qacreation.base"]], "autorag.data.legacy.qacreation.llama_index module": [[6, "module-autorag.data.legacy.qacreation.llama_index"]], "autorag.data.legacy.qacreation.ragas module": [[6, "module-autorag.data.legacy.qacreation.ragas"]], "autorag.data.legacy.qacreation.simple module": [[6, "module-autorag.data.legacy.qacreation.simple"]], "autorag.data.parse package": [[7, null]], "autorag.data.parse.base module": [[7, "module-autorag.data.parse.base"]], "autorag.data.parse.clova module": [[7, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[7, "module-autorag.data.parse.langchain_parse"]], "autorag.data.parse.llamaparse module": [[7, "module-autorag.data.parse.llamaparse"]], "autorag.data.parse.run module": [[7, "module-autorag.data.parse.run"]], "autorag.data.parse.table_hybrid_parse module": [[7, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qa package": [[8, null]], "autorag.data.qa.evolve package": [[9, null]], "autorag.data.qa.evolve.llama_index_query_evolve module": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve"]], "autorag.data.qa.evolve.openai_query_evolve module": [[9, "module-autorag.data.qa.evolve.openai_query_evolve"]], "autorag.data.qa.evolve.prompt module": [[9, "module-autorag.data.qa.evolve.prompt"]], "autorag.data.qa.extract_evidence module": [[8, "module-autorag.data.qa.extract_evidence"]], "autorag.data.qa.filter package": [[10, null]], "autorag.data.qa.filter.dontknow module": [[10, "module-autorag.data.qa.filter.dontknow"]], "autorag.data.qa.filter.passage_dependency module": [[10, "module-autorag.data.qa.filter.passage_dependency"]], "autorag.data.qa.filter.prompt module": [[10, "module-autorag.data.qa.filter.prompt"]], "autorag.data.qa.generation_gt package": [[11, null]], "autorag.data.qa.generation_gt.base module": [[11, "module-autorag.data.qa.generation_gt.base"]], "autorag.data.qa.generation_gt.llama_index_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt"]], "autorag.data.qa.generation_gt.openai_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt"]], "autorag.data.qa.generation_gt.prompt module": [[11, "module-autorag.data.qa.generation_gt.prompt"]], "autorag.data.qa.query package": [[12, null]], "autorag.data.qa.query.llama_gen_query module": [[12, "module-autorag.data.qa.query.llama_gen_query"]], "autorag.data.qa.query.openai_gen_query module": [[12, "module-autorag.data.qa.query.openai_gen_query"]], "autorag.data.qa.query.prompt module": [[12, "module-autorag.data.qa.query.prompt"]], "autorag.data.qa.sample module": [[8, "module-autorag.data.qa.sample"]], "autorag.data.qa.schema module": [[8, "module-autorag.data.qa.schema"]], "autorag.data.qacreation package": [[13, null]], "autorag.data.qacreation.base module": [[13, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[13, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[13, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[13, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[14, null]], "autorag.data.utils.util module": [[14, "module-autorag.data.utils.util"]], "autorag.deploy package": [[15, null]], "autorag.deploy.api module": [[15, "module-autorag.deploy.api"]], "autorag.deploy.base module": [[15, "module-autorag.deploy.base"]], "autorag.deploy.gradio module": [[15, "module-autorag.deploy.gradio"]], "autorag.evaluation package": [[16, null]], "autorag.evaluation.generation module": [[16, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[17, null]], "autorag.evaluation.metric.deepeval_prompt module": [[17, "module-autorag.evaluation.metric.deepeval_prompt"]], "autorag.evaluation.metric.generation module": [[17, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[17, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[17, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[17, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[16, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[16, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[16, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[18, null]], "autorag.nodes.generator package": [[19, null]], "autorag.nodes.generator.base module": [[19, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[19, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[19, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[19, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[19, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[20, null]], "autorag.nodes.passageaugmenter.base module": [[20, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[20, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[20, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[21, null]], "autorag.nodes.passagecompressor.base module": [[21, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[21, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[21, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[21, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[21, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[21, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[22, null]], "autorag.nodes.passagefilter.base module": [[22, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[22, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[22, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[22, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[22, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[22, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[22, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[22, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[23, null]], "autorag.nodes.passagereranker.base module": [[23, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[23, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[23, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[23, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[23, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.flashrank module": [[23, "module-autorag.nodes.passagereranker.flashrank"]], "autorag.nodes.passagereranker.jina module": [[23, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[23, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.mixedbreadai module": [[23, "module-autorag.nodes.passagereranker.mixedbreadai"]], "autorag.nodes.passagereranker.monot5 module": [[23, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.openvino module": [[23, "module-autorag.nodes.passagereranker.openvino"]], "autorag.nodes.passagereranker.pass_reranker module": [[23, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[23, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[23, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[23, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[24, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[24, "autorag-nodes-passagereranker-tart-modeling-enc-t5-module"]], "autorag.nodes.passagereranker.tart.tart module": [[24, "autorag-nodes-passagereranker-tart-tart-module"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[24, "autorag-nodes-passagereranker-tart-tokenization-enc-t5-module"]], "autorag.nodes.passagereranker.time_reranker module": [[23, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[23, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.voyageai module": [[23, "module-autorag.nodes.passagereranker.voyageai"]], "autorag.nodes.promptmaker package": [[25, null]], "autorag.nodes.promptmaker.base module": [[25, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[25, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[25, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[25, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[25, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[26, null]], "autorag.nodes.queryexpansion.base module": [[26, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[26, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[26, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[26, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[26, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[26, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[27, null]], "autorag.nodes.retrieval.base module": [[27, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[27, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[27, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[27, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[27, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[27, "module-autorag.nodes.retrieval.vectordb"]], "autorag.nodes.util module": [[18, "module-autorag.nodes.util"]], "autorag.parser module": [[0, "module-autorag.parser"]], "autorag.schema package": [[28, null]], "autorag.schema.base module": [[28, "module-autorag.schema.base"]], "autorag.schema.metricinput module": [[28, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[28, "module-autorag.schema.module"]], "autorag.schema.node module": [[28, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[29, null]], "autorag.utils.preprocess module": [[29, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[29, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[76, null]], "config.yaml": [[107, "config-yaml"]], "contents": [[35, "contents"]], "curl Commands": [[50, "curl-commands"]], "data": [[107, "data"]], "doc_id": [[35, "doc-id"]], "generation_gt": [[35, "generation-gt"]], "jina_reranker": [[81, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[101, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[101, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[101, "ko-okt-for-korean"]], "llama_index LLM": [[60, null]], "metadata": [[35, "metadata"]], "path (Optional, but recommended)": [[35, "path-optional-but-recommended"]], "porter_stemmer": [[101, "porter-stemmer"]], "pre_retrieve_node_line": [[107, "pre-retrieve-node-line"]], "qid": [[35, "qid"]], "query": [[35, "query"]], "query_expansion": [[107, "query-expansion"]], "resources": [[107, "resources"]], "retrieval_gt": [[35, "retrieval-gt"]], "retrieve_node_line": [[107, "retrieve-node-line"]], "sem_score": [[59, null]], "space": [[101, "space"]], "start_end_idx (Optional but recommended)": [[35, "start-end-idx-optional-but-recommended"]], "sudachipy (For Japanese \ud83c\uddef\ud83c\uddf5)": [[101, "sudachipy-for-japanese"]], "trial": [[107, "trial"]], "trial.json": [[107, "trial-json"]], "v0.3 migration guide": [[58, "v0-3-migration-guide"]], "vllm": [[62, null]], "voyageai_reranker": [[92, null]], "\u2705Apply Basic Example": [[53, "apply-basic-example"], [53, "id2"], [53, "id4"], [53, "id6"], [53, "id8"], [53, "id10"], [54, "apply-basic-example"], [54, "id2"], [54, "id4"]], "\u2705Basic Example": [[53, "basic-example"], [54, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[52, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[40, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[113, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[102, "hybrid-additional-explanation"], [103, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[55, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[55, "ecosystem"]], "\ud83d\udccc API Needed": [[40, "api-needed"]], "\ud83d\udccc Definition": [[52, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[42, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[52, "definition"], [52, "id1"], [52, "id2"], [52, "id3"], [52, "id5"], [53, "definition"], [53, "id1"], [53, "id3"], [53, "id5"], [53, "id7"], [53, "id9"], [54, "definition"], [54, "id1"], [54, "id3"]], "\ud83d\udd0e Definition": [[59, "definition"], [64, "definition"], [67, "definition"], [70, "definition"], [86, "definition"], [95, "definition"], [100, "definition"], [104, "definition"]], "\ud83d\udd22 Parameters": [[59, "parameters"], [67, "parameters"], [86, "parameters"], [95, "parameters"], [100, "parameters"], [104, "parameters"]], "\ud83d\udde3\ufe0f Talk with Founders": [[55, "talk-with-founders"]], "\ud83d\ude80 Road to Modular RAG": [[110, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[110, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[55, "why-autorag"]], "\ud83e\udd38 Benefits": [[64, "benefits"], [67, "benefits"], [70, "benefits"], [86, "benefits"], [100, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[55, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.legacy", "api_spec/autorag.data.legacy.corpus", "api_spec/autorag.data.legacy.qacreation", "api_spec/autorag.data.parse", "api_spec/autorag.data.qa", "api_spec/autorag.data.qa.evolve", "api_spec/autorag.data.qa.filter", "api_spec/autorag.data.qa.generation_gt", "api_spec/autorag.data.qa.query", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.deploy", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/modules", "data_creation/chunk/chunk", "data_creation/chunk/langchain_chunk", "data_creation/chunk/llama_index_chunk", "data_creation/data_creation", "data_creation/data_format", "data_creation/legacy/legacy", "data_creation/legacy/ragas", "data_creation/legacy/tutorial", "data_creation/parse/clova", "data_creation/parse/langchain_parse", "data_creation/parse/llama_parse", "data_creation/parse/parse", "data_creation/parse/table_hybrid_parse", "data_creation/qa_creation/answer_gen", "data_creation/qa_creation/evolve", "data_creation/qa_creation/filter", "data_creation/qa_creation/qa_creation", "data_creation/qa_creation/query_gen", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/flashrank_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/mixedbreadai_reranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/openvino_reranker", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/passage_reranker/voyageai_reranker", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/strategies", "roadmap/modular_rag", "structure", "troubleshooting", "tutorial"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.legacy.rst", "api_spec/autorag.data.legacy.corpus.rst", "api_spec/autorag.data.legacy.qacreation.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qa.rst", "api_spec/autorag.data.qa.evolve.rst", "api_spec/autorag.data.qa.filter.rst", "api_spec/autorag.data.qa.generation_gt.rst", "api_spec/autorag.data.qa.query.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.deploy.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/modules.rst", "data_creation/chunk/chunk.md", "data_creation/chunk/langchain_chunk.md", "data_creation/chunk/llama_index_chunk.md", "data_creation/data_creation.md", "data_creation/data_format.md", "data_creation/legacy/legacy.md", "data_creation/legacy/ragas.md", "data_creation/legacy/tutorial.md", "data_creation/parse/clova.md", "data_creation/parse/langchain_parse.md", "data_creation/parse/llama_parse.md", "data_creation/parse/parse.md", "data_creation/parse/table_hybrid_parse.md", "data_creation/qa_creation/answer_gen.md", "data_creation/qa_creation/evolve.md", "data_creation/qa_creation/filter.md", "data_creation/qa_creation/qa_creation.md", "data_creation/qa_creation/query_gen.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/flashrank_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/mixedbreadai_reranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/openvino_reranker.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/passage_reranker/voyageai_reranker.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"acomplete() (autorag.autoragbedrock method)": [[0, "autorag.AutoRAGBedrock.acomplete", false]], "add_essential_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_file_name() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.add_file_name", false]], "add_gen_gt() (in module autorag.data.qa.generation_gt.base)": [[11, "autorag.data.qa.generation_gt.base.add_gen_gt", false]], "additional_kwargs (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.additional_kwargs", false]], "answer (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.answer", false]], "answer (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.answer", false]], "apirunner (class in autorag.deploy.api)": [[15, "autorag.deploy.api.ApiRunner", false]], "apply_recursive() (in module autorag.utils.util)": [[29, "autorag.utils.util.apply_recursive", false]], "astream() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.astream", false]], "astream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.astream", false]], "astream() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.astream", false]], "astream() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.astream", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_qa_gen_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.async_qa_gen_llama_index", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.chunk": [[2, "module-autorag.data.chunk", false]], "autorag.data.chunk.base": [[2, "module-autorag.data.chunk.base", false]], "autorag.data.chunk.langchain_chunk": [[2, "module-autorag.data.chunk.langchain_chunk", false]], "autorag.data.chunk.llama_index_chunk": [[2, "module-autorag.data.chunk.llama_index_chunk", false]], "autorag.data.chunk.run": [[2, "module-autorag.data.chunk.run", false]], "autorag.data.legacy": [[4, "module-autorag.data.legacy", false]], "autorag.data.legacy.corpus": [[5, "module-autorag.data.legacy.corpus", false]], "autorag.data.legacy.corpus.langchain": [[5, "module-autorag.data.legacy.corpus.langchain", false]], "autorag.data.legacy.corpus.llama_index": [[5, "module-autorag.data.legacy.corpus.llama_index", false]], "autorag.data.legacy.qacreation": [[6, "module-autorag.data.legacy.qacreation", false]], "autorag.data.legacy.qacreation.base": [[6, "module-autorag.data.legacy.qacreation.base", false]], "autorag.data.legacy.qacreation.llama_index": [[6, "module-autorag.data.legacy.qacreation.llama_index", false]], "autorag.data.legacy.qacreation.ragas": [[6, "module-autorag.data.legacy.qacreation.ragas", false]], "autorag.data.legacy.qacreation.simple": [[6, "module-autorag.data.legacy.qacreation.simple", false]], "autorag.data.parse": [[7, "module-autorag.data.parse", false]], "autorag.data.parse.base": [[7, "module-autorag.data.parse.base", false]], "autorag.data.parse.langchain_parse": [[7, "module-autorag.data.parse.langchain_parse", false]], "autorag.data.parse.llamaparse": [[7, "module-autorag.data.parse.llamaparse", false]], "autorag.data.parse.run": [[7, "module-autorag.data.parse.run", false]], "autorag.data.qa": [[8, "module-autorag.data.qa", false]], "autorag.data.qa.evolve": [[9, "module-autorag.data.qa.evolve", false]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false]], "autorag.data.qa.evolve.openai_query_evolve": [[9, "module-autorag.data.qa.evolve.openai_query_evolve", false]], "autorag.data.qa.evolve.prompt": [[9, "module-autorag.data.qa.evolve.prompt", false]], "autorag.data.qa.extract_evidence": [[8, "module-autorag.data.qa.extract_evidence", false]], "autorag.data.qa.filter": [[10, "module-autorag.data.qa.filter", false]], "autorag.data.qa.filter.dontknow": [[10, "module-autorag.data.qa.filter.dontknow", false]], "autorag.data.qa.filter.passage_dependency": [[10, "module-autorag.data.qa.filter.passage_dependency", false]], "autorag.data.qa.filter.prompt": [[10, "module-autorag.data.qa.filter.prompt", false]], "autorag.data.qa.generation_gt": [[11, "module-autorag.data.qa.generation_gt", false]], "autorag.data.qa.generation_gt.base": [[11, "module-autorag.data.qa.generation_gt.base", false]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false]], "autorag.data.qa.generation_gt.prompt": [[11, "module-autorag.data.qa.generation_gt.prompt", false]], "autorag.data.qa.query": [[12, "module-autorag.data.qa.query", false]], "autorag.data.qa.query.llama_gen_query": [[12, "module-autorag.data.qa.query.llama_gen_query", false]], "autorag.data.qa.query.openai_gen_query": [[12, "module-autorag.data.qa.query.openai_gen_query", false]], "autorag.data.qa.query.prompt": [[12, "module-autorag.data.qa.query.prompt", false]], "autorag.data.qa.sample": [[8, "module-autorag.data.qa.sample", false]], "autorag.data.qa.schema": [[8, "module-autorag.data.qa.schema", false]], "autorag.data.utils": [[14, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[14, "module-autorag.data.utils.util", false]], "autorag.deploy": [[15, "module-autorag.deploy", false]], "autorag.deploy.api": [[15, "module-autorag.deploy.api", false]], "autorag.deploy.base": [[15, "module-autorag.deploy.base", false]], "autorag.deploy.gradio": [[15, "module-autorag.deploy.gradio", false]], "autorag.evaluation": [[16, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[16, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[17, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.deepeval_prompt": [[17, "module-autorag.evaluation.metric.deepeval_prompt", false]], "autorag.evaluation.metric.generation": [[17, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[17, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[17, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[17, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[16, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[16, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[16, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[18, "module-autorag.nodes", false]], "autorag.nodes.generator": [[19, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[19, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[19, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[19, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[19, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[19, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[20, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[20, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[20, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[20, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[21, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[21, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[21, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[21, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[21, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[21, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[21, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[22, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[22, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[22, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[22, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[22, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[22, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[22, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[22, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[22, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[23, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[23, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[23, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[23, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[23, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[23, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.flashrank": [[23, "module-autorag.nodes.passagereranker.flashrank", false]], "autorag.nodes.passagereranker.jina": [[23, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[23, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.mixedbreadai": [[23, "module-autorag.nodes.passagereranker.mixedbreadai", false]], "autorag.nodes.passagereranker.monot5": [[23, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.openvino": [[23, "module-autorag.nodes.passagereranker.openvino", false]], "autorag.nodes.passagereranker.pass_reranker": [[23, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[23, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[23, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[23, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.time_reranker": [[23, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[23, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.passagereranker.voyageai": [[23, "module-autorag.nodes.passagereranker.voyageai", false]], "autorag.nodes.promptmaker": [[25, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[25, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[25, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[25, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[25, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[25, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[26, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[26, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[26, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[26, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[26, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[26, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[26, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[27, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[27, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[27, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[27, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[27, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[27, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[27, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.nodes.util": [[18, "module-autorag.nodes.util", false]], "autorag.parser": [[0, "module-autorag.parser", false]], "autorag.schema": [[28, "module-autorag.schema", false]], "autorag.schema.base": [[28, "module-autorag.schema.base", false]], "autorag.schema.metricinput": [[28, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[28, "module-autorag.schema.module", false]], "autorag.schema.node": [[28, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[29, "module-autorag.utils", false]], "autorag.utils.preprocess": [[29, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[29, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "autoragbedrock (class in autorag)": [[0, "autorag.AutoRAGBedrock", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "aws_access_key_id (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.aws_access_key_id", false]], "aws_secret_access_key (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.aws_secret_access_key", false]], "aws_session_token (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.aws_session_token", false]], "basegenerator (class in autorag.nodes.generator.base)": [[19, "autorag.nodes.generator.base.BaseGenerator", false]], "basemodule (class in autorag.schema.base)": [[28, "autorag.schema.base.BaseModule", false]], "basepassageaugmenter (class in autorag.nodes.passageaugmenter.base)": [[20, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagefilter (class in autorag.nodes.passagefilter.base)": [[22, "autorag.nodes.passagefilter.base.BasePassageFilter", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[23, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[25, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[26, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "baserunner (class in autorag.deploy.base)": [[15, "autorag.deploy.base.BaseRunner", false]], "batch_apply() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_filter", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.bleu", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "botocore_config (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.botocore_config", false]], "botocore_session (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.botocore_session", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[16, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[16, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passageaugmenter.base.basepassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[21, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagefilter.base.basepassagefilter method)": [[22, "autorag.nodes.passagefilter.base.BasePassageFilter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[23, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[25, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[26, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[27, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "cast_to_run() (autorag.schema.base.basemodule method)": [[28, "autorag.schema.base.BaseModule.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[26, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chunk() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.chunk", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "chunker_node() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.chunker_node", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[23, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[23, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compress_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.compress_ragas", false]], "compress_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.compress_ragas", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[23, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.concept_completion_query_gen", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.concept_completion_query_gen", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.conditional_evolve_ragas", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.conditional_evolve_ragas", false]], "content (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.content", false]], "context_size (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.context_size", false]], "convert_datetime_string() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "deepeval_faithfulness() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.deepeval_faithfulness", false]], "dict_to_markdown() (in module autorag.utils.util)": [[29, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[29, "autorag.utils.util.dict_to_markdown_table", false]], "distribute_list_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.distribute_list_by_ratio", false]], "doc_id (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.doc_id", false]], "dontknow_filter_llama_index() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_llama_index", false]], "dontknow_filter_openai() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_openai", false]], "dontknow_filter_rule_based() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_rule_based", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embed_dim (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.embed_dim", false]], "embedding_query_content() (in module autorag.utils.util)": [[29, "autorag.utils.util.embedding_query_content", false]], "empty_cuda_cache() (in module autorag.utils.util)": [[29, "autorag.utils.util.empty_cuda_cache", false]], "end_idx (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.end_idx", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[16, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[19, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[26, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[21, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[16, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[16, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "evolved_query (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.evolved_query", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[29, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_node_strategy", false]], "extract_retrieve_passage() (autorag.deploy.api.apirunner method)": [[15, "autorag.deploy.api.ApiRunner.extract_retrieve_passage", false]], "extract_values() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "factoid_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.factoid_query_gen", false]], "factoid_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.factoid_query_gen", false]], "faithfulnesstemplate (class in autorag.evaluation.metric.deepeval_prompt)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate", false]], "fetch_contents() (in module autorag.utils.util)": [[29, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[29, "autorag.utils.util.fetch_one_content", false]], "file_page (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.file_page", false]], "filepath (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.filepath", false]], "filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[29, "autorag.utils.util.filter_dict_keys", false]], "find_key_values() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[23, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[23, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[23, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flashrank_run_model() (in module autorag.nodes.passagereranker.flashrank)": [[23, "autorag.nodes.passagereranker.flashrank.flashrank_run_model", false]], "flashrankreranker (class in autorag.nodes.passagereranker.flashrank)": [[23, "autorag.nodes.passagereranker.flashrank.FlashRankReranker", false]], "flatmap() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[29, "autorag.utils.util.flatten_apply", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[28, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[28, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[28, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "from_trial_folder() (autorag.deploy.base.baserunner class method)": [[15, "autorag.deploy.base.BaseRunner.from_trial_folder", false]], "from_yaml() (autorag.deploy.base.baserunner class method)": [[15, "autorag.deploy.base.BaseRunner.from_yaml", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[25, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.g_eval", false]], "generate_answers() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_answers", false]], "generate_basic_answer() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_basic_answer", false]], "generate_claims() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_claims", false]], "generate_qa_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index", false]], "generate_qa_llama_index_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index_by_ratio", false]], "generate_qa_ragas() (in module autorag.data.legacy.qacreation.ragas)": [[6, "autorag.data.legacy.qacreation.ragas.generate_qa_ragas", false]], "generate_qa_row() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_qa_row", false]], "generate_simple_qa_dataset() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_simple_qa_dataset", false]], "generate_truths() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_truths", false]], "generate_verdicts() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_verdicts", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[19, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[29, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_event_loop() (in module autorag.utils.util)": [[29, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[28, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[26, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_start_end_idx", false]], "get_structured_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_structured_result", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "gradiorunner (class in autorag.deploy.gradio)": [[15, "autorag.deploy.gradio.GradioRunner", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[26, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_dont_know (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.is_dont_know", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[28, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "is_passage_dependent (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.is_passage_dependent", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[23, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[23, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_chunk() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk", false]], "langchain_chunk_pure() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk_pure", false]], "langchain_documents_to_parquet() (in module autorag.data.legacy.corpus.langchain)": [[5, "autorag.data.legacy.corpus.langchain.langchain_documents_to_parquet", false]], "langchain_parse() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse", false]], "langchain_parse_pure() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.qa.schema.qa property)": [[8, "autorag.data.qa.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.qa.schema.corpus property)": [[8, "autorag.data.qa.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_chunk() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk", false]], "llama_index_chunk_pure() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk_pure", false]], "llama_index_generate_base() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.llama_index_generate_base", false]], "llama_index_generate_base() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.llama_index_generate_base", false]], "llama_parse() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse", false]], "llama_parse_pure() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse_pure", false]], "llama_text_node_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_text_node_to_parquet", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llm (autorag.nodes.passagecompressor.refine.refine attribute)": [[21, "autorag.nodes.passagecompressor.refine.Refine.llm", false]], "llm (autorag.nodes.passagecompressor.tree_summarize.treesummarize attribute)": [[21, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize.llm", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[21, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_chroma_collection() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.load_chroma_collection", false]], "load_summary_file() (in module autorag.utils.util)": [[29, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.load_yaml", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[25, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[21, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[29, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[29, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.util)": [[18, "autorag.nodes.util.make_generator_callable_param", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_generator_instance() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.make_generator_instance", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_metadata_list() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.make_metadata_list", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_qa_with_existing_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_qa_with_existing_qa", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[26, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_retrieval_gt_contents() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.make_retrieval_gt_contents", false]], "make_single_content_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_single_content_qa", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "map() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.map", false]], "map() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.map", false]], "map() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.map", false]], "max_retries (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.max_retries", false]], "max_tokens (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.max_tokens", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.meteor", false]], "metricinput (class in autorag.schema.metricinput)": [[28, "autorag.schema.metricinput.MetricInput", false]], "mixedbreadai_rerank_pure() (in module autorag.nodes.passagereranker.mixedbreadai)": [[23, "autorag.nodes.passagereranker.mixedbreadai.mixedbreadai_rerank_pure", false]], "mixedbreadaireranker (class in autorag.nodes.passagereranker.mixedbreadai)": [[23, "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model", false]], "model_computed_fields (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_config", false]], "model_config (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_config", false]], "model_config (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_config", false]], "model_config (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_config", false]], "model_config (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_config", false]], "model_config (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_config", false]], "model_config (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_config", false]], "model_config (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_config", false]], "model_config (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_fields", false]], "model_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_fields", false]], "model_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_fields", false]], "model_fields (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_fields", false]], "model_fields (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_fields", false]], "model_fields (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_fields", false]], "model_fields (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "model_post_init() (autorag.autoragbedrock method)": [[0, "autorag.AutoRAGBedrock.model_post_init", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.parser", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [2, "module-autorag.data.chunk", false], [2, "module-autorag.data.chunk.base", false], [2, "module-autorag.data.chunk.langchain_chunk", false], [2, "module-autorag.data.chunk.llama_index_chunk", false], [2, "module-autorag.data.chunk.run", false], [4, "module-autorag.data.legacy", false], [5, "module-autorag.data.legacy.corpus", false], [5, "module-autorag.data.legacy.corpus.langchain", false], [5, "module-autorag.data.legacy.corpus.llama_index", false], [6, "module-autorag.data.legacy.qacreation", false], [6, "module-autorag.data.legacy.qacreation.base", false], [6, "module-autorag.data.legacy.qacreation.llama_index", false], [6, "module-autorag.data.legacy.qacreation.ragas", false], [6, "module-autorag.data.legacy.qacreation.simple", false], [7, "module-autorag.data.parse", false], [7, "module-autorag.data.parse.base", false], [7, "module-autorag.data.parse.langchain_parse", false], [7, "module-autorag.data.parse.llamaparse", false], [7, "module-autorag.data.parse.run", false], [8, "module-autorag.data.qa", false], [8, "module-autorag.data.qa.extract_evidence", false], [8, "module-autorag.data.qa.sample", false], [8, "module-autorag.data.qa.schema", false], [9, "module-autorag.data.qa.evolve", false], [9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false], [9, "module-autorag.data.qa.evolve.openai_query_evolve", false], [9, "module-autorag.data.qa.evolve.prompt", false], [10, "module-autorag.data.qa.filter", false], [10, "module-autorag.data.qa.filter.dontknow", false], [10, "module-autorag.data.qa.filter.passage_dependency", false], [10, "module-autorag.data.qa.filter.prompt", false], [11, "module-autorag.data.qa.generation_gt", false], [11, "module-autorag.data.qa.generation_gt.base", false], [11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.prompt", false], [12, "module-autorag.data.qa.query", false], [12, "module-autorag.data.qa.query.llama_gen_query", false], [12, "module-autorag.data.qa.query.openai_gen_query", false], [12, "module-autorag.data.qa.query.prompt", false], [14, "module-autorag.data.utils", false], [14, "module-autorag.data.utils.util", false], [15, "module-autorag.deploy", false], [15, "module-autorag.deploy.api", false], [15, "module-autorag.deploy.base", false], [15, "module-autorag.deploy.gradio", false], [16, "module-autorag.evaluation", false], [16, "module-autorag.evaluation.generation", false], [16, "module-autorag.evaluation.retrieval", false], [16, "module-autorag.evaluation.retrieval_contents", false], [16, "module-autorag.evaluation.util", false], [17, "module-autorag.evaluation.metric", false], [17, "module-autorag.evaluation.metric.deepeval_prompt", false], [17, "module-autorag.evaluation.metric.generation", false], [17, "module-autorag.evaluation.metric.retrieval", false], [17, "module-autorag.evaluation.metric.retrieval_contents", false], [17, "module-autorag.evaluation.metric.util", false], [18, "module-autorag.nodes", false], [18, "module-autorag.nodes.util", false], [19, "module-autorag.nodes.generator", false], [19, "module-autorag.nodes.generator.base", false], [19, "module-autorag.nodes.generator.llama_index_llm", false], [19, "module-autorag.nodes.generator.openai_llm", false], [19, "module-autorag.nodes.generator.run", false], [19, "module-autorag.nodes.generator.vllm", false], [20, "module-autorag.nodes.passageaugmenter", false], [20, "module-autorag.nodes.passageaugmenter.base", false], [20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [20, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [20, "module-autorag.nodes.passageaugmenter.run", false], [21, "module-autorag.nodes.passagecompressor", false], [21, "module-autorag.nodes.passagecompressor.base", false], [21, "module-autorag.nodes.passagecompressor.longllmlingua", false], [21, "module-autorag.nodes.passagecompressor.pass_compressor", false], [21, "module-autorag.nodes.passagecompressor.refine", false], [21, "module-autorag.nodes.passagecompressor.run", false], [21, "module-autorag.nodes.passagecompressor.tree_summarize", false], [22, "module-autorag.nodes.passagefilter", false], [22, "module-autorag.nodes.passagefilter.base", false], [22, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [22, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [22, "module-autorag.nodes.passagefilter.recency", false], [22, "module-autorag.nodes.passagefilter.run", false], [22, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [22, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [22, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [23, "module-autorag.nodes.passagereranker", false], [23, "module-autorag.nodes.passagereranker.base", false], [23, "module-autorag.nodes.passagereranker.cohere", false], [23, "module-autorag.nodes.passagereranker.colbert", false], [23, "module-autorag.nodes.passagereranker.flag_embedding", false], [23, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [23, "module-autorag.nodes.passagereranker.flashrank", false], [23, "module-autorag.nodes.passagereranker.jina", false], [23, "module-autorag.nodes.passagereranker.koreranker", false], [23, "module-autorag.nodes.passagereranker.mixedbreadai", false], [23, "module-autorag.nodes.passagereranker.monot5", false], [23, "module-autorag.nodes.passagereranker.openvino", false], [23, "module-autorag.nodes.passagereranker.pass_reranker", false], [23, "module-autorag.nodes.passagereranker.rankgpt", false], [23, "module-autorag.nodes.passagereranker.run", false], [23, "module-autorag.nodes.passagereranker.sentence_transformer", false], [23, "module-autorag.nodes.passagereranker.time_reranker", false], [23, "module-autorag.nodes.passagereranker.upr", false], [23, "module-autorag.nodes.passagereranker.voyageai", false], [25, "module-autorag.nodes.promptmaker", false], [25, "module-autorag.nodes.promptmaker.base", false], [25, "module-autorag.nodes.promptmaker.fstring", false], [25, "module-autorag.nodes.promptmaker.long_context_reorder", false], [25, "module-autorag.nodes.promptmaker.run", false], [25, "module-autorag.nodes.promptmaker.window_replacement", false], [26, "module-autorag.nodes.queryexpansion", false], [26, "module-autorag.nodes.queryexpansion.base", false], [26, "module-autorag.nodes.queryexpansion.hyde", false], [26, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [26, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [26, "module-autorag.nodes.queryexpansion.query_decompose", false], [26, "module-autorag.nodes.queryexpansion.run", false], [27, "module-autorag.nodes.retrieval", false], [27, "module-autorag.nodes.retrieval.base", false], [27, "module-autorag.nodes.retrieval.bm25", false], [27, "module-autorag.nodes.retrieval.hybrid_cc", false], [27, "module-autorag.nodes.retrieval.hybrid_rrf", false], [27, "module-autorag.nodes.retrieval.run", false], [27, "module-autorag.nodes.retrieval.vectordb", false], [28, "module-autorag.schema", false], [28, "module-autorag.schema.base", false], [28, "module-autorag.schema.metricinput", false], [28, "module-autorag.schema.module", false], [28, "module-autorag.schema.node", false], [29, "module-autorag.utils", false], [29, "module-autorag.utils.preprocess", false], [29, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[28, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[28, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[23, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[23, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[28, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[29, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[29, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "one_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.one_hop_question", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[29, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "openvino_run_model() (in module autorag.nodes.passagereranker.openvino)": [[23, "autorag.nodes.passagereranker.openvino.openvino_run_model", false]], "openvinoreranker (class in autorag.nodes.passagereranker.openvino)": [[23, "autorag.nodes.passagereranker.openvino.OpenVINOReranker", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "parse_all_files() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.parse_all_files", false]], "parse_output() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.parse_output", false]], "parser (class in autorag.parser)": [[0, "autorag.parser.Parser", false]], "parser_node() (in module autorag.data.parse.base)": [[7, "autorag.data.parse.base.parser_node", false]], "passage_dependency_filter_llama_index() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_llama_index", false]], "passage_dependency_filter_openai() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_openai", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[21, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[20, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[22, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[26, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[23, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[22, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pop_params() (in module autorag.utils.util)": [[29, "autorag.utils.util.pop_params", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[20, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "prevnextpassageaugmenter (class in autorag.nodes.passageaugmenter.prev_next_augmenter)": [[20, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter", false]], "process_batch() (in module autorag.utils.util)": [[29, "autorag.utils.util.process_batch", false]], "profile_name (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.profile_name", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passageaugmenter.prev_next_augmenter.prevnextpassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[21, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[21, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[22, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[22, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[22, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_percentile_cutoff.similaritypercentilecutoff method)": [[22, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_threshold_cutoff.similaritythresholdcutoff method)": [[22, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.threshold_cutoff.thresholdcutoff method)": [[22, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[23, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[23, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[23, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[23, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flashrank.flashrankreranker method)": [[23, "autorag.nodes.passagereranker.flashrank.FlashRankReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[23, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[23, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.mixedbreadai.mixedbreadaireranker method)": [[23, "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[23, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.openvino.openvinoreranker method)": [[23, "autorag.nodes.passagereranker.openvino.OpenVINOReranker.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[23, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[23, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[23, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[23, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[23, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.passagereranker.voyageai.voyageaireranker method)": [[23, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[25, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[25, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[25, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[26, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[26, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[26, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[27, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[27, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.nodes.retrieval.vectordb.vectordb method)": [[27, "autorag.nodes.retrieval.vectordb.VectorDB.pure", false]], "pure() (autorag.schema.base.basemodule method)": [[28, "autorag.schema.base.BaseModule.pure", false]], "qa (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.QA", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.query", false]], "query (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.query", false]], "query_evolve_openai_base() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.query_evolve_openai_base", false]], "query_gen_openai_base() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.query_gen_openai_base", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[26, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "queryrequest (class in autorag.deploy.api)": [[15, "autorag.deploy.api.QueryRequest", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.range_single_hop", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[23, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "raw (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Raw", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.reasoning_evolve_ragas", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.reasoning_evolve_ragas", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[22, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[21, "autorag.nodes.passagecompressor.refine.Refine", false]], "region_name (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.region_name", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response", false]], "response (class in autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.Response", false]], "response (class in autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.Response", false]], "response (class in autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response", false]], "response (class in autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.Response", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.result", false]], "result_column (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[29, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "retrieved_passage (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.retrieved_passage", false]], "retrievedpassage (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RetrievedPassage", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.base.runner method)": [[15, "autorag.deploy.base.Runner.run", false]], "run() (autorag.deploy.gradio.gradiorunner method)": [[15, "autorag.deploy.gradio.GradioRunner.run", false]], "run() (autorag.schema.node.node method)": [[28, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.api.apirunner method)": [[15, "autorag.deploy.api.ApiRunner.run_api_server", false]], "run_chunker() (in module autorag.data.chunk.run)": [[2, "autorag.data.chunk.run.run_chunker", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[27, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[27, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_evaluator() (autorag.schema.base.basemodule class method)": [[28, "autorag.schema.base.BaseModule.run_evaluator", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[19, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_parser() (in module autorag.data.parse.run)": [[7, "autorag.data.parse.run.run_parser", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[20, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[21, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[22, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[23, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[26, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "run_web() (autorag.deploy.gradio.gradiorunner method)": [[15, "autorag.deploy.gradio.GradioRunner.run_web", false]], "runner (class in autorag.deploy.base)": [[15, "autorag.deploy.base.Runner", false]], "runresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RunResponse", false]], "sample() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[29, "autorag.utils.util.save_parquet_safe", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[29, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[23, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[23, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similaritypercentilecutoff (class in autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[22, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff", false]], "similaritythresholdcutoff (class in autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[22, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (autorag.nodes.passageaugmenter.base.basepassageaugmenter static method)": [[20, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.sort_by_scores", false]], "sort_by_scores() (in module autorag.utils.util)": [[29, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[29, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_idx (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.start_idx", false]], "start_parsing() (autorag.parser.parser method)": [[0, "autorag.parser.Parser.start_parsing", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.strategy", false]], "stream() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.stream", false]], "stream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.stream", false]], "stream() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.stream", false]], "stream() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.stream", false]], "structured_output() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.structured_output", false]], "structured_output() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.structured_output", false]], "summary_df_to_yaml() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.summary_df_to_yaml", false]], "temperature (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.temperature", false]], "thresholdcutoff (class in autorag.nodes.passagefilter.threshold_cutoff)": [[22, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff", false]], "timeout (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.timeout", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[23, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ja_sudachipy() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ja_sudachipy", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[21, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[19, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "two_hop_incremental() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.two_hop_incremental", false]], "two_hop_incremental() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.two_hop_incremental", false]], "two_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.two_hop_question", false]], "twohopincrementalresponse (class in autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse", false]], "update_corpus() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.update_corpus", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[23, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[23, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_llama_index_prompt() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.validate_llama_index_prompt", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb (class in autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.VectorDB", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "version (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.version", false]], "versionresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.VersionResponse", false]], "vllm (class in autorag.nodes.generator.vllm)": [[19, "autorag.nodes.generator.vllm.Vllm", false]], "voyageai_rerank_pure() (in module autorag.nodes.passagereranker.voyageai)": [[23, "autorag.nodes.passagereranker.voyageai.voyageai_rerank_pure", false]], "voyageaireranker (class in autorag.nodes.passagereranker.voyageai)": [[23, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[25, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "AutoRAGBedrock"], [0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [15, 0, 0, "-", "deploy"], [16, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [18, 0, 0, "-", "nodes"], [0, 0, 0, "-", "parser"], [0, 4, 1, "", "random"], [28, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [29, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [0, 0, 0, "-", "web"]], "autorag.AutoRAGBedrock": [[0, 2, 1, "", "acomplete"], [0, 3, 1, "", "additional_kwargs"], [0, 3, 1, "", "aws_access_key_id"], [0, 3, 1, "", "aws_secret_access_key"], [0, 3, 1, "", "aws_session_token"], [0, 3, 1, "", "botocore_config"], [0, 3, 1, "", "botocore_session"], [0, 3, 1, "", "context_size"], [0, 3, 1, "", "max_retries"], [0, 3, 1, "", "max_tokens"], [0, 3, 1, "", "model"], [0, 3, 1, "", "model_computed_fields"], [0, 3, 1, "", "model_config"], [0, 3, 1, "", "model_fields"], [0, 2, 1, "", "model_post_init"], [0, 3, 1, "", "profile_name"], [0, 3, 1, "", "region_name"], [0, 3, 1, "", "temperature"], [0, 3, 1, "", "timeout"]], "autorag.MockEmbeddingRandom": [[0, 3, 1, "", "embed_dim"], [0, 3, 1, "", "model_computed_fields"], [0, 3, 1, "", "model_config"], [0, 3, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 2, 1, "", "from_parquet"], [0, 2, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[2, 0, 0, "-", "chunk"], [4, 0, 0, "-", "legacy"], [7, 0, 0, "-", "parse"], [8, 0, 0, "-", "qa"], [1, 4, 1, "", "split_by_sentence_kiwi"], [14, 0, 0, "-", "utils"]], "autorag.data.chunk": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "langchain_chunk"], [2, 0, 0, "-", "llama_index_chunk"], [2, 0, 0, "-", "run"]], "autorag.data.chunk.base": [[2, 4, 1, "", "add_file_name"], [2, 4, 1, "", "chunker_node"], [2, 4, 1, "", "make_metadata_list"]], "autorag.data.chunk.langchain_chunk": [[2, 4, 1, "", "langchain_chunk"], [2, 4, 1, "", "langchain_chunk_pure"]], "autorag.data.chunk.llama_index_chunk": [[2, 4, 1, "", "llama_index_chunk"], [2, 4, 1, "", "llama_index_chunk_pure"]], "autorag.data.chunk.run": [[2, 4, 1, "", "run_chunker"]], "autorag.data.legacy": [[5, 0, 0, "-", "corpus"], [6, 0, 0, "-", "qacreation"]], "autorag.data.legacy.corpus": [[5, 0, 0, "-", "langchain"], [5, 0, 0, "-", "llama_index"]], "autorag.data.legacy.corpus.langchain": [[5, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.legacy.corpus.llama_index": [[5, 4, 1, "", "llama_documents_to_parquet"], [5, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.legacy.qacreation": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "llama_index"], [6, 0, 0, "-", "ragas"], [6, 0, 0, "-", "simple"]], "autorag.data.legacy.qacreation.base": [[6, 4, 1, "", "make_qa_with_existing_qa"], [6, 4, 1, "", "make_single_content_qa"]], "autorag.data.legacy.qacreation.llama_index": [[6, 4, 1, "", "async_qa_gen_llama_index"], [6, 4, 1, "", "distribute_list_by_ratio"], [6, 4, 1, "", "generate_answers"], [6, 4, 1, "", "generate_basic_answer"], [6, 4, 1, "", "generate_qa_llama_index"], [6, 4, 1, "", "generate_qa_llama_index_by_ratio"], [6, 4, 1, "", "parse_output"], [6, 4, 1, "", "validate_llama_index_prompt"]], "autorag.data.legacy.qacreation.ragas": [[6, 4, 1, "", "generate_qa_ragas"]], "autorag.data.legacy.qacreation.simple": [[6, 4, 1, "", "generate_qa_row"], [6, 4, 1, "", "generate_simple_qa_dataset"]], "autorag.data.parse": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_parse"], [7, 0, 0, "-", "llamaparse"], [7, 0, 0, "-", "run"]], "autorag.data.parse.base": [[7, 4, 1, "", "parser_node"]], "autorag.data.parse.langchain_parse": [[7, 4, 1, "", "langchain_parse"], [7, 4, 1, "", "langchain_parse_pure"], [7, 4, 1, "", "parse_all_files"]], "autorag.data.parse.llamaparse": [[7, 4, 1, "", "llama_parse"], [7, 4, 1, "", "llama_parse_pure"]], "autorag.data.parse.run": [[7, 4, 1, "", "run_parser"]], "autorag.data.qa": [[9, 0, 0, "-", "evolve"], [8, 0, 0, "-", "extract_evidence"], [10, 0, 0, "-", "filter"], [11, 0, 0, "-", "generation_gt"], [12, 0, 0, "-", "query"], [8, 0, 0, "-", "sample"], [8, 0, 0, "-", "schema"]], "autorag.data.qa.evolve": [[9, 0, 0, "-", "llama_index_query_evolve"], [9, 0, 0, "-", "openai_query_evolve"], [9, 0, 0, "-", "prompt"]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "llama_index_generate_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve": [[9, 1, 1, "", "Response"], [9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "query_evolve_openai_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve.Response": [[9, 3, 1, "", "evolved_query"], [9, 3, 1, "", "model_computed_fields"], [9, 3, 1, "", "model_config"], [9, 3, 1, "", "model_fields"]], "autorag.data.qa.filter": [[10, 0, 0, "-", "dontknow"], [10, 0, 0, "-", "passage_dependency"], [10, 0, 0, "-", "prompt"]], "autorag.data.qa.filter.dontknow": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "dontknow_filter_llama_index"], [10, 4, 1, "", "dontknow_filter_openai"], [10, 4, 1, "", "dontknow_filter_rule_based"]], "autorag.data.qa.filter.dontknow.Response": [[10, 3, 1, "", "is_dont_know"], [10, 3, 1, "", "model_computed_fields"], [10, 3, 1, "", "model_config"], [10, 3, 1, "", "model_fields"]], "autorag.data.qa.filter.passage_dependency": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "passage_dependency_filter_llama_index"], [10, 4, 1, "", "passage_dependency_filter_openai"]], "autorag.data.qa.filter.passage_dependency.Response": [[10, 3, 1, "", "is_passage_dependent"], [10, 3, 1, "", "model_computed_fields"], [10, 3, 1, "", "model_config"], [10, 3, 1, "", "model_fields"]], "autorag.data.qa.generation_gt": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "llama_index_gen_gt"], [11, 0, 0, "-", "openai_gen_gt"], [11, 0, 0, "-", "prompt"]], "autorag.data.qa.generation_gt.base": [[11, 4, 1, "", "add_gen_gt"]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, 1, 1, "", "Response"], [11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.qa.generation_gt.openai_gen_gt.Response": [[11, 3, 1, "", "answer"], [11, 3, 1, "", "model_computed_fields"], [11, 3, 1, "", "model_config"], [11, 3, 1, "", "model_fields"]], "autorag.data.qa.query": [[12, 0, 0, "-", "llama_gen_query"], [12, 0, 0, "-", "openai_gen_query"], [12, 0, 0, "-", "prompt"]], "autorag.data.qa.query.llama_gen_query": [[12, 4, 1, "", "concept_completion_query_gen"], [12, 4, 1, "", "factoid_query_gen"], [12, 4, 1, "", "llama_index_generate_base"], [12, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query": [[12, 1, 1, "", "Response"], [12, 1, 1, "", "TwoHopIncrementalResponse"], [12, 4, 1, "", "concept_completion_query_gen"], [12, 4, 1, "", "factoid_query_gen"], [12, 4, 1, "", "query_gen_openai_base"], [12, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query.Response": [[12, 3, 1, "", "model_computed_fields"], [12, 3, 1, "", "model_config"], [12, 3, 1, "", "model_fields"], [12, 3, 1, "", "query"]], "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse": [[12, 3, 1, "", "answer"], [12, 3, 1, "", "model_computed_fields"], [12, 3, 1, "", "model_config"], [12, 3, 1, "", "model_fields"], [12, 3, 1, "", "one_hop_question"], [12, 3, 1, "", "two_hop_question"]], "autorag.data.qa.sample": [[8, 4, 1, "", "random_single_hop"], [8, 4, 1, "", "range_single_hop"]], "autorag.data.qa.schema": [[8, 1, 1, "", "Corpus"], [8, 1, 1, "", "QA"], [8, 1, 1, "", "Raw"]], "autorag.data.qa.schema.Corpus": [[8, 2, 1, "", "batch_apply"], [8, 5, 1, "", "linked_raw"], [8, 2, 1, "", "map"], [8, 2, 1, "", "sample"], [8, 2, 1, "", "to_parquet"]], "autorag.data.qa.schema.QA": [[8, 2, 1, "", "batch_apply"], [8, 2, 1, "", "batch_filter"], [8, 2, 1, "", "filter"], [8, 5, 1, "", "linked_corpus"], [8, 2, 1, "", "make_retrieval_gt_contents"], [8, 2, 1, "", "map"], [8, 2, 1, "", "to_parquet"], [8, 2, 1, "", "update_corpus"]], "autorag.data.qa.schema.Raw": [[8, 2, 1, "", "batch_apply"], [8, 2, 1, "", "chunk"], [8, 2, 1, "", "flatmap"], [8, 2, 1, "", "map"]], "autorag.data.utils": [[14, 0, 0, "-", "util"]], "autorag.data.utils.util": [[14, 4, 1, "", "add_essential_metadata"], [14, 4, 1, "", "add_essential_metadata_llama_text_node"], [14, 4, 1, "", "corpus_df_to_langchain_documents"], [14, 4, 1, "", "get_file_metadata"], [14, 4, 1, "", "get_param_combinations"], [14, 4, 1, "", "get_start_end_idx"], [14, 4, 1, "", "load_yaml"]], "autorag.deploy": [[15, 0, 0, "-", "api"], [15, 0, 0, "-", "base"], [15, 0, 0, "-", "gradio"]], "autorag.deploy.api": [[15, 1, 1, "", "ApiRunner"], [15, 1, 1, "", "QueryRequest"], [15, 1, 1, "", "RetrievedPassage"], [15, 1, 1, "", "RunResponse"], [15, 1, 1, "", "VersionResponse"]], "autorag.deploy.api.ApiRunner": [[15, 2, 1, "", "extract_retrieve_passage"], [15, 2, 1, "", "run_api_server"]], "autorag.deploy.api.QueryRequest": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "query"], [15, 3, 1, "", "result_column"]], "autorag.deploy.api.RetrievedPassage": [[15, 3, 1, "", "content"], [15, 3, 1, "", "doc_id"], [15, 3, 1, "", "end_idx"], [15, 3, 1, "", "file_page"], [15, 3, 1, "", "filepath"], [15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "start_idx"]], "autorag.deploy.api.RunResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "result"], [15, 3, 1, "", "retrieved_passage"]], "autorag.deploy.api.VersionResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "version"]], "autorag.deploy.base": [[15, 1, 1, "", "BaseRunner"], [15, 1, 1, "", "Runner"], [15, 4, 1, "", "extract_best_config"], [15, 4, 1, "", "extract_node_line_names"], [15, 4, 1, "", "extract_node_strategy"], [15, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.base.BaseRunner": [[15, 2, 1, "", "from_trial_folder"], [15, 2, 1, "", "from_yaml"]], "autorag.deploy.base.Runner": [[15, 2, 1, "", "run"]], "autorag.deploy.gradio": [[15, 1, 1, "", "GradioRunner"]], "autorag.deploy.gradio.GradioRunner": [[15, 2, 1, "", "run"], [15, 2, 1, "", "run_web"]], "autorag.evaluation": [[16, 0, 0, "-", "generation"], [17, 0, 0, "-", "metric"], [16, 0, 0, "-", "retrieval"], [16, 0, 0, "-", "retrieval_contents"], [16, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[16, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[17, 0, 0, "-", "deepeval_prompt"], [17, 0, 0, "-", "generation"], [17, 0, 0, "-", "retrieval"], [17, 0, 0, "-", "retrieval_contents"], [17, 0, 0, "-", "util"]], "autorag.evaluation.metric.deepeval_prompt": [[17, 1, 1, "", "FaithfulnessTemplate"]], "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate": [[17, 2, 1, "", "generate_claims"], [17, 2, 1, "", "generate_truths"], [17, 2, 1, "", "generate_verdicts"]], "autorag.evaluation.metric.generation": [[17, 4, 1, "", "async_g_eval"], [17, 4, 1, "", "bert_score"], [17, 4, 1, "", "bleu"], [17, 4, 1, "", "deepeval_faithfulness"], [17, 4, 1, "", "g_eval"], [17, 4, 1, "", "huggingface_evaluate"], [17, 4, 1, "", "make_generator_instance"], [17, 4, 1, "", "meteor"], [17, 4, 1, "", "rouge"], [17, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[17, 4, 1, "", "retrieval_f1"], [17, 4, 1, "", "retrieval_map"], [17, 4, 1, "", "retrieval_mrr"], [17, 4, 1, "", "retrieval_ndcg"], [17, 4, 1, "", "retrieval_precision"], [17, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[17, 4, 1, "", "retrieval_token_f1"], [17, 4, 1, "", "retrieval_token_precision"], [17, 4, 1, "", "retrieval_token_recall"], [17, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[17, 4, 1, "", "autorag_metric"], [17, 4, 1, "", "autorag_metric_loop"], [17, 4, 1, "", "calculate_cosine_similarity"]], "autorag.evaluation.retrieval": [[16, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[16, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[16, 4, 1, "", "cast_embedding_model"], [16, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 2, 1, "", "restart_trial"], [0, 2, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[19, 0, 0, "-", "generator"], [20, 0, 0, "-", "passageaugmenter"], [21, 0, 0, "-", "passagecompressor"], [22, 0, 0, "-", "passagefilter"], [23, 0, 0, "-", "passagereranker"], [25, 0, 0, "-", "promptmaker"], [26, 0, 0, "-", "queryexpansion"], [27, 0, 0, "-", "retrieval"], [18, 0, 0, "-", "util"]], "autorag.nodes.generator": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "llama_index_llm"], [19, 0, 0, "-", "openai_llm"], [19, 0, 0, "-", "run"], [19, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[19, 1, 1, "", "BaseGenerator"], [19, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "cast_to_run"], [19, 2, 1, "", "stream"], [19, 2, 1, "", "structured_output"]], "autorag.nodes.generator.llama_index_llm": [[19, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"]], "autorag.nodes.generator.openai_llm": [[19, 1, 1, "", "OpenAILLM"], [19, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "get_result"], [19, 2, 1, "", "get_result_o1"], [19, 2, 1, "", "get_structured_result"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"], [19, 2, 1, "", "structured_output"]], "autorag.nodes.generator.run": [[19, 4, 1, "", "evaluate_generator_node"], [19, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[19, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"]], "autorag.nodes.passageaugmenter": [[20, 0, 0, "-", "base"], [20, 0, 0, "-", "pass_passage_augmenter"], [20, 0, 0, "-", "prev_next_augmenter"], [20, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[20, 1, 1, "", "BasePassageAugmenter"]], "autorag.nodes.passageaugmenter.base.BasePassageAugmenter": [[20, 2, 1, "", "cast_to_run"], [20, 2, 1, "", "sort_by_scores"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[20, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[20, 2, 1, "", "pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[20, 1, 1, "", "PrevNextPassageAugmenter"], [20, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter": [[20, 2, 1, "", "pure"]], "autorag.nodes.passageaugmenter.run": [[20, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "longllmlingua"], [21, 0, 0, "-", "pass_compressor"], [21, 0, 0, "-", "refine"], [21, 0, 0, "-", "run"], [21, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[21, 1, 1, "", "BasePassageCompressor"], [21, 1, 1, "", "LlamaIndexCompressor"], [21, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[21, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[21, 3, 1, "", "param_list"], [21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[21, 1, 1, "", "LongLLMLingua"], [21, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[21, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[21, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.refine.Refine": [[21, 3, 1, "", "llm"]], "autorag.nodes.passagecompressor.run": [[21, 4, 1, "", "evaluate_passage_compressor_node"], [21, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[21, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize": [[21, 3, 1, "", "llm"]], "autorag.nodes.passagefilter": [[22, 0, 0, "-", "base"], [22, 0, 0, "-", "pass_passage_filter"], [22, 0, 0, "-", "percentile_cutoff"], [22, 0, 0, "-", "recency"], [22, 0, 0, "-", "run"], [22, 0, 0, "-", "similarity_percentile_cutoff"], [22, 0, 0, "-", "similarity_threshold_cutoff"], [22, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[22, 1, 1, "", "BasePassageFilter"]], "autorag.nodes.passagefilter.base.BasePassageFilter": [[22, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagefilter.pass_passage_filter": [[22, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[22, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[22, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.run": [[22, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[22, 1, 1, "", "SimilarityPercentileCutoff"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[22, 1, 1, "", "SimilarityThresholdCutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[22, 1, 1, "", "ThresholdCutoff"]], "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagereranker": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "cohere"], [23, 0, 0, "-", "colbert"], [23, 0, 0, "-", "flag_embedding"], [23, 0, 0, "-", "flag_embedding_llm"], [23, 0, 0, "-", "flashrank"], [23, 0, 0, "-", "jina"], [23, 0, 0, "-", "koreranker"], [23, 0, 0, "-", "mixedbreadai"], [23, 0, 0, "-", "monot5"], [23, 0, 0, "-", "openvino"], [23, 0, 0, "-", "pass_reranker"], [23, 0, 0, "-", "rankgpt"], [23, 0, 0, "-", "run"], [23, 0, 0, "-", "sentence_transformer"], [23, 0, 0, "-", "time_reranker"], [23, 0, 0, "-", "upr"], [23, 0, 0, "-", "voyageai"]], "autorag.nodes.passagereranker.base": [[23, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[23, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[23, 1, 1, "", "CohereReranker"], [23, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[23, 1, 1, "", "ColbertReranker"], [23, 4, 1, "", "get_colbert_embedding_batch"], [23, 4, 1, "", "get_colbert_score"], [23, 4, 1, "", "slice_tensor"], [23, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[23, 1, 1, "", "FlagEmbeddingReranker"], [23, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[23, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flashrank": [[23, 1, 1, "", "FlashRankReranker"], [23, 4, 1, "", "flashrank_run_model"]], "autorag.nodes.passagereranker.flashrank.FlashRankReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[23, 1, 1, "", "JinaReranker"], [23, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[23, 1, 1, "", "KoReranker"], [23, 4, 1, "", "exp_normalize"], [23, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.mixedbreadai": [[23, 1, 1, "", "MixedbreadAIReranker"], [23, 4, 1, "", "mixedbreadai_rerank_pure"]], "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[23, 1, 1, "", "MonoT5"], [23, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.openvino": [[23, 1, 1, "", "OpenVINOReranker"], [23, 4, 1, "", "openvino_run_model"]], "autorag.nodes.passagereranker.openvino.OpenVINOReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[23, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[23, 1, 1, "", "AsyncRankGPTRerank"], [23, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[23, 2, 1, "", "async_postprocess_nodes"], [23, 2, 1, "", "async_run_llm"], [23, 3, 1, "", "llm"], [23, 3, 1, "", "model_computed_fields"], [23, 3, 1, "", "model_config"], [23, 3, 1, "", "model_fields"], [23, 3, 1, "", "rankgpt_rerank_prompt"], [23, 3, 1, "", "top_n"], [23, 3, 1, "", "verbose"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.run": [[23, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[23, 1, 1, "", "SentenceTransformerReranker"], [23, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.time_reranker": [[23, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[23, 1, 1, "", "UPRScorer"], [23, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[23, 2, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.voyageai": [[23, 1, 1, "", "VoyageAIReranker"], [23, 4, 1, "", "voyageai_rerank_pure"]], "autorag.nodes.passagereranker.voyageai.VoyageAIReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.promptmaker": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "fstring"], [25, 0, 0, "-", "long_context_reorder"], [25, 0, 0, "-", "run"], [25, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[25, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[25, 2, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[25, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[25, 2, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[25, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[25, 2, 1, "", "pure"]], "autorag.nodes.promptmaker.run": [[25, 4, 1, "", "evaluate_generator_result"], [25, 4, 1, "", "evaluate_one_prompt_maker_node"], [25, 4, 1, "", "make_generator_callable_params"], [25, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[25, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[25, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "hyde"], [26, 0, 0, "-", "multi_query_expansion"], [26, 0, 0, "-", "pass_query_expansion"], [26, 0, 0, "-", "query_decompose"], [26, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[26, 1, 1, "", "BaseQueryExpansion"], [26, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[26, 2, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[26, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[26, 1, 1, "", "MultiQueryExpansion"], [26, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[26, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[26, 1, 1, "", "QueryDecompose"], [26, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.run": [[26, 4, 1, "", "evaluate_one_query_expansion_node"], [26, 4, 1, "", "make_retrieval_callable_params"], [26, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[27, 0, 0, "-", "base"], [27, 0, 0, "-", "bm25"], [27, 0, 0, "-", "hybrid_cc"], [27, 0, 0, "-", "hybrid_rrf"], [27, 0, 0, "-", "run"], [27, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[27, 1, 1, "", "BaseRetrieval"], [27, 1, 1, "", "HybridRetrieval"], [27, 4, 1, "", "cast_queries"], [27, 4, 1, "", "evenly_distribute_passages"], [27, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[27, 2, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[27, 2, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[27, 1, 1, "", "BM25"], [27, 4, 1, "", "bm25_ingest"], [27, 4, 1, "", "bm25_pure"], [27, 4, 1, "", "get_bm25_scores"], [27, 4, 1, "", "load_bm25_corpus"], [27, 4, 1, "", "select_bm25_tokenizer"], [27, 4, 1, "", "tokenize"], [27, 4, 1, "", "tokenize_ja_sudachipy"], [27, 4, 1, "", "tokenize_ko_kiwi"], [27, 4, 1, "", "tokenize_ko_kkma"], [27, 4, 1, "", "tokenize_ko_okt"], [27, 4, 1, "", "tokenize_porter_stemmer"], [27, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[27, 2, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[27, 1, 1, "", "HybridCC"], [27, 4, 1, "", "fuse_per_query"], [27, 4, 1, "", "hybrid_cc"], [27, 4, 1, "", "normalize_dbsf"], [27, 4, 1, "", "normalize_mm"], [27, 4, 1, "", "normalize_tmm"], [27, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[27, 2, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[27, 1, 1, "", "HybridRRF"], [27, 4, 1, "", "hybrid_rrf"], [27, 4, 1, "", "rrf_calculate"], [27, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[27, 2, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.run": [[27, 4, 1, "", "edit_summary_df_params"], [27, 4, 1, "", "evaluate_retrieval_node"], [27, 4, 1, "", "find_unique_elems"], [27, 4, 1, "", "get_hybrid_execution_times"], [27, 4, 1, "", "get_ids_and_scores"], [27, 4, 1, "", "get_scores_by_ids"], [27, 4, 1, "", "optimize_hybrid"], [27, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[27, 1, 1, "", "VectorDB"], [27, 4, 1, "", "get_id_scores"], [27, 4, 1, "", "load_chroma_collection"], [27, 4, 1, "", "run_query_embedding_batch"], [27, 4, 1, "", "vectordb_ingest"], [27, 4, 1, "", "vectordb_pure"]], "autorag.nodes.retrieval.vectordb.VectorDB": [[27, 2, 1, "", "pure"]], "autorag.nodes.util": [[18, 4, 1, "", "make_generator_callable_param"]], "autorag.parser": [[0, 1, 1, "", "Parser"]], "autorag.parser.Parser": [[0, 2, 1, "", "start_parsing"]], "autorag.schema": [[28, 0, 0, "-", "base"], [28, 0, 0, "-", "metricinput"], [28, 0, 0, "-", "module"], [28, 0, 0, "-", "node"]], "autorag.schema.base": [[28, 1, 1, "", "BaseModule"]], "autorag.schema.base.BaseModule": [[28, 2, 1, "", "cast_to_run"], [28, 2, 1, "", "pure"], [28, 2, 1, "", "run_evaluator"]], "autorag.schema.metricinput": [[28, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[28, 2, 1, "", "from_dataframe"], [28, 3, 1, "", "generated_log_probs"], [28, 3, 1, "", "generated_texts"], [28, 3, 1, "", "generation_gt"], [28, 2, 1, "", "is_fields_notnone"], [28, 3, 1, "", "prompt"], [28, 3, 1, "", "queries"], [28, 3, 1, "", "query"], [28, 3, 1, "", "retrieval_gt"], [28, 3, 1, "", "retrieval_gt_contents"], [28, 3, 1, "", "retrieved_contents"], [28, 3, 1, "", "retrieved_ids"]], "autorag.schema.module": [[28, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[28, 2, 1, "", "from_dict"], [28, 3, 1, "", "module"], [28, 3, 1, "", "module_param"], [28, 3, 1, "", "module_type"]], "autorag.schema.node": [[28, 1, 1, "", "Node"], [28, 4, 1, "", "extract_values"], [28, 4, 1, "", "extract_values_from_nodes"], [28, 4, 1, "", "extract_values_from_nodes_strategy"], [28, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_param_combinations"], [28, 3, 1, "", "modules"], [28, 3, 1, "", "node_params"], [28, 3, 1, "", "node_type"], [28, 2, 1, "", "run"], [28, 3, 1, "", "run_node"], [28, 3, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[29, 0, 0, "-", "preprocess"], [29, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[29, 4, 1, "", "cast_corpus_dataset"], [29, 4, 1, "", "cast_qa_dataset"], [29, 4, 1, "", "validate_corpus_dataset"], [29, 4, 1, "", "validate_qa_dataset"], [29, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[29, 4, 1, "", "apply_recursive"], [29, 4, 1, "", "convert_datetime_string"], [29, 4, 1, "", "convert_env_in_dict"], [29, 4, 1, "", "convert_inputs_to_list"], [29, 4, 1, "", "convert_string_to_tuple_in_dict"], [29, 4, 1, "", "dict_to_markdown"], [29, 4, 1, "", "dict_to_markdown_table"], [29, 4, 1, "", "embedding_query_content"], [29, 4, 1, "", "empty_cuda_cache"], [29, 4, 1, "", "explode"], [29, 4, 1, "", "fetch_contents"], [29, 4, 1, "", "fetch_one_content"], [29, 4, 1, "", "filter_dict_keys"], [29, 4, 1, "", "find_key_values"], [29, 4, 1, "", "find_node_summary_files"], [29, 4, 1, "", "find_trial_dir"], [29, 4, 1, "", "flatten_apply"], [29, 4, 1, "", "get_best_row"], [29, 4, 1, "", "get_event_loop"], [29, 4, 1, "", "load_summary_file"], [29, 4, 1, "", "make_batch"], [29, 4, 1, "", "make_combinations"], [29, 4, 1, "", "normalize_string"], [29, 4, 1, "", "normalize_unicode"], [29, 4, 1, "", "openai_truncate_by_token"], [29, 4, 1, "", "pop_params"], [29, 4, 1, "", "process_batch"], [29, 4, 1, "", "reconstruct_list"], [29, 4, 1, "", "replace_value_in_dict"], [29, 4, 1, "", "result_to_dataframe"], [29, 4, 1, "", "save_parquet_safe"], [29, 4, 1, "", "select_top_k"], [29, 4, 1, "", "sort_by_scores"], [29, 4, 1, "", "split_dataframe"], [29, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 2, 1, "", "validate"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 38, 45, 50, 52, 54, 55, 56, 57, 59, 60, 61, 67, 69, 71, 73, 74, 75, 91, 93, 94, 95, 96, 97, 98, 99, 104, 108, 109, 110, 113], "0": [0, 6, 15, 17, 23, 27, 31, 36, 37, 38, 42, 46, 51, 52, 57, 59, 60, 61, 62, 70, 71, 73, 74, 75, 76, 77, 87, 100, 102, 104, 107, 108, 109, 112, 113], "002": 57, "01": 72, "0125": 17, "04": 61, "06": [9, 10, 11, 12, 17, 48], "07": [10, 11, 48], "08": [9, 10, 11, 12, 17, 48], "09": 61, "1": [0, 6, 17, 27, 29, 35, 38, 55, 59, 60, 62, 65, 70, 99, 102, 104, 107, 108], "10": [0, 57, 59, 67, 86, 95, 100, 103, 104, 106, 109, 110], "100": 112, "1000": 95, "100k": 84, "101": 102, "1024": [31, 33, 49], "10k": [23, 84], "10x": 62, "11": [56, 112], "1106": [59, 60, 95, 98, 99, 108, 112], "12": 80, "125m": 62, "128": [17, 27, 29, 38, 47, 49], "13a": 17, "13b": 84, "15min": 55, "16": [17, 19, 60, 62, 68, 69, 81, 87], "16k": [59, 60, 61, 67, 68, 69, 87, 95, 98, 99, 108, 112], "17": 56, "18": [10, 11, 48], "1d": 35, "2": [6, 17, 21, 23, 26, 35, 38, 55, 57, 58, 62, 66, 80, 88, 92, 99, 100, 101, 102, 109], "200": 50, "2015": 72, "2022": 48, "2024": [9, 10, 11, 12, 17, 48, 61], "2048": 0, "24": [31, 33, 49], "25": 37, "2d": [27, 35], "3": [6, 17, 25, 27, 36, 37, 38, 41, 57, 59, 60, 67, 68, 69, 87, 95, 98, 99, 102, 106, 108, 110], "300": [21, 66], "32": [6, 8, 38, 78, 79, 80, 85, 88], "3b": [23, 84], "4": [6, 17, 37, 54, 59, 61, 87, 99, 102, 103, 104], "4000": 59, "42": [0, 6, 8], "4o": [9, 10, 11, 12, 17, 46, 48], "5": [0, 6, 17, 23, 25, 37, 38, 49, 54, 57, 59, 60, 61, 64, 67, 68, 69, 86, 87, 95, 98, 99, 102, 106, 108, 109], "50": [26, 37, 38], "51": 104, "512": [0, 31, 33, 38, 49, 61, 62, 88], "514": 52, "6": [38, 54, 59, 71, 73, 99, 102], "60": [0, 27, 103], "64": [29, 38, 56, 59, 73, 74, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 97, 100, 105], "666": 54, "7": 102, "7039180890341347": 53, "72": 51, "7680": [15, 51], "7690": 0, "777": 54, "797979": 54, "7b": [21, 57, 62, 66, 101], "8": [2, 7, 17, 50, 54, 56, 81, 87, 102], "80": [103, 104], "8000": [15, 27, 50, 113], "822": 54, "85": [70, 74, 75], "9": [17, 38], "A": [0, 2, 7, 9, 10, 11, 12, 15, 17, 23, 27, 29, 31, 35, 38, 42, 48, 52, 59, 90, 94, 100, 108, 110, 111], "And": [10, 15, 19, 27, 29, 38, 45, 47, 55, 56, 61, 62, 95, 101, 106, 108, 110, 113], "As": [6, 25, 35, 50, 51, 53, 57, 64, 105, 106], "At": [46, 47, 57, 76, 81, 83, 92, 106, 108, 110], "Be": 56, "But": [35, 38, 45, 46, 47, 55, 106, 108, 110], "By": [52, 60, 67, 68, 69, 100, 102, 111], "For": [10, 27, 31, 32, 35, 38, 42, 48, 49, 53, 56, 57, 58, 61, 62, 108, 109, 110, 112, 113], "If": [0, 5, 6, 8, 15, 17, 25, 26, 27, 29, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 46, 48, 49, 51, 53, 55, 56, 62, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 85, 88, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113], "In": [21, 22, 23, 26, 31, 34, 35, 42, 47, 48, 53, 55, 61, 70, 106, 107, 108, 110, 112], "It": [0, 6, 8, 10, 11, 15, 17, 19, 21, 22, 23, 25, 27, 28, 29, 31, 35, 38, 39, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 57, 59, 60, 61, 65, 69, 70, 72, 76, 80, 81, 85, 86, 89, 90, 91, 92, 94, 95, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113], "Its": [17, 27, 29, 35, 62, 64, 67, 70, 86, 100], "No": 108, "Not": [8, 20, 90, 100], "Of": 55, "On": [35, 70], "Or": [17, 35, 56, 76, 81, 83, 92, 113], "TO": 56, "That": [55, 110], "The": [0, 2, 6, 7, 8, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "Then": [35, 48, 49, 56, 57, 108], "There": [27, 35, 38, 45, 55, 56, 58, 61, 70, 90, 100, 102, 107, 110, 113], "These": [35, 45, 59, 60, 67, 68, 69, 86, 97, 98, 99, 104, 111, 113], "To": [27, 34, 35, 38, 43, 47, 50, 56, 57, 61, 108, 109, 110, 113], "Will": 27, "With": [25, 35, 49, 61, 110, 113], "__fields__": [0, 9, 10, 11, 12, 15, 23], "__main__": 50, "__name__": 50, "_metadata": 2, "abil": 89, "abl": 100, "about": [0, 9, 10, 11, 12, 15, 23, 31, 32, 33, 35, 37, 40, 41, 42, 45, 48, 49, 60, 62, 68, 69, 73, 74, 93, 94, 95, 96, 101, 105, 106, 107, 108, 111, 113], "abov": [53, 57, 106, 107, 110, 113], "absolut": [6, 53], "abstract": [19, 28], "abstracteventloop": 29, "accept": 53, "access": [0, 15, 37, 51, 86], "accomplish": 43, "accord": [10, 31, 42], "accumul": 67, "accur": [34, 38, 107], "accuraci": [17, 91, 100, 104], "achat": 45, "achiev": [47, 52, 108, 111], "acomplet": [0, 30], "across": [68, 95, 100, 104, 109, 111], "act": 111, "action": [106, 110], "actual": [29, 35, 50, 53, 103], "ad": [11, 38, 111, 112], "ada": 57, "add": [2, 6, 17, 38, 43, 56, 59, 64, 65, 73, 74, 80, 105, 108, 110, 113], "add_essential_metadata": [1, 14], "add_essential_metadata_llama_text_nod": [1, 14], "add_file_nam": [1, 2, 31, 32, 33, 49], "add_gen_gt": [8, 11], "addit": [0, 6, 7, 17, 21, 57, 60, 64, 65, 66, 68, 69, 95, 97, 98, 99, 112, 113], "addition": 94, "additional_kwarg": [0, 30], "address": [67, 111], "adjust": [38, 112], "advanc": [37, 110], "advanced rag": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110], "advantag": 61, "advent": [38, 49], "aespa": [35, 48], "aespa1": 35, "aespa2": 35, "aespa3": 35, "affect": [20, 35, 108, 111], "afraid": 38, "after": [5, 29, 31, 34, 38, 45, 46, 47, 48, 49, 51, 55, 56, 65, 86, 106, 108, 110, 113], "ag": 99, "again": [49, 110, 113], "ai": [7, 23, 81, 85, 86], "aim": [38, 102, 104, 111], "album": 48, "algorithm": [101, 102, 103], "all": [0, 6, 17, 26, 29, 31, 35, 38, 42, 43, 45, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 70, 72, 74, 75, 80, 95, 99, 100, 104, 106, 107, 109, 110, 111, 112, 113], "alloc": 99, "allow": [56, 59, 60, 64, 65, 68, 69, 84, 97, 98, 99, 102, 111], "almost": 46, "alon": [95, 100, 110], "along": 52, "alpha": [17, 108], "alreadi": [0, 6, 15, 27, 49, 50, 108], "also": [28, 31, 35, 37, 38, 52, 53, 55, 61, 62, 76, 102, 110], "altern": 56, "alwai": [32, 33, 38, 40, 51, 108], "among": [0, 19, 21, 22, 23, 25, 26, 27, 103, 108], "amount": 67, "an": [0, 6, 17, 27, 31, 34, 35, 38, 40, 42, 45, 51, 52, 53, 55, 56, 57, 67, 80, 85, 86, 96, 97, 98, 105, 106, 107, 108, 110, 112], "analysi": 67, "ani": [0, 2, 6, 8, 10, 16, 28, 29, 35, 45, 53, 55, 56, 62, 64, 66, 67, 70, 86, 95, 100, 104, 110, 111, 112], "annot": [0, 9, 10, 11, 12, 15, 23], "anoth": [48, 87, 111, 113], "answer": [6, 8, 10, 11, 12, 15, 26, 34, 35, 38, 45, 46, 48, 52, 53, 54, 61, 66, 70, 89, 93, 94, 95, 96, 110], "answer_creation_func": [6, 38], "answer_gt": 54, "anywher": 51, "ap": [17, 53], "api": [0, 7, 27, 30, 61, 76, 81, 83, 92, 105, 106], "api_bas": [57, 112], "api_kei": [23, 57, 61, 76, 81, 83, 92, 106, 112], "apirunn": [0, 15, 50, 113], "app": [15, 56], "appear": 112, "appli": [29, 50, 59, 86, 95, 100, 104, 111, 113], "applic": [50, 67, 90, 100], "apply_recurs": [0, 29], "approach": [67, 102], "apt": 112, "ar": [10, 17, 26, 27, 29, 31, 35, 38, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 90, 95, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113], "arbitrari": [59, 64, 67, 70, 86, 95, 100], "arbitrary_types_allow": [0, 23], "arg": [0, 6, 7, 14, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28], "argument": [0, 6, 7, 15, 17, 21, 29, 60, 68, 69, 97, 98, 99], "aris": 94, "arm": 85, "arrai": [23, 50], "arrang": 111, "articl": 29, "asap": 110, "ask": [10, 35, 48, 52, 55, 110], "aspect": 111, "assess": [52, 86], "assign": 17, "associ": [29, 67], "ast": 106, "astream": [18, 19], "async": [0, 2, 6, 7, 9, 10, 11, 12, 17, 19, 23, 27, 29, 45], "async_g_ev": [16, 17], "async_postprocess_nod": [18, 23], "async_qa_gen_llama_index": [4, 6], "async_run_llm": [18, 23], "asynccli": 23, "asynchron": [6, 29], "asyncio": 29, "asyncmixedbreadai": 23, "asyncopenai": [9, 10, 11, 12, 44, 46, 48, 95], "asyncrankgptrerank": [18, 23], "atom": 99, "attempt": 107, "attribut": 0, "augment": [20, 111], "augmented_cont": 20, "augmented_id": 20, "augmented_scor": 20, "auto": [6, 55, 56, 102], "auto rag": 55, "autom": 98, "automat": [28, 29, 35, 38, 55, 59, 64, 67, 70, 85, 86, 95, 100, 105, 108, 113], "automl": 55, "autorag": [31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112], "autorag config": 106, "autorag doc": 55, "autorag fold": 107, "autorag instal": 56, "autorag multi gpu": 62, "autorag system": 111, "autorag tutori": 113, "autorag yaml": 106, "autorag_hq": 55, "autorag_metr": [16, 17], "autorag_metric_loop": [16, 17], "autoragbedrock": [0, 30], "autoraghq": 56, "autotoken": 95, "avail": [0, 38, 80, 96, 112], "averag": [0, 17, 54, 59, 95, 100, 104], "averaged_perceptron_tagger_eng": 56, "avoid": 0, "avoid_empty_result": [0, 30], "aw": 0, "awai": 113, "await": [0, 8, 45], "awar": 17, "aws_access_key_id": [0, 30], "aws_secret_access_kei": [0, 30], "aws_session_token": [0, 30], "b": [17, 108], "baai": [23, 57, 78, 79, 85], "back": 17, "backbon": 52, "backward": 65, "bad": [46, 47, 110], "badminton": 99, "band": 48, "base": [0, 1, 4, 8, 9, 10, 12, 17, 18, 30, 31, 38, 45, 50, 52, 57, 60, 66, 68, 69, 75, 78, 80, 81, 82, 83, 84, 86, 87, 89, 91, 93, 96, 102, 103, 104, 109, 110, 111], "base_url": 50, "basechatmodel": 6, "baseembed": [17, 27], "basegener": [18, 19], "basellm": [9, 10, 11, 12, 45], "basemodel": [9, 10, 11, 12, 15], "basemodul": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "baseoutputpars": 0, "basepassageaugment": [18, 20], "basepassagecompressor": [18, 21], "basepassagefilt": [18, 22], "basepassagererank": [18, 23], "basepromptmak": [18, 25], "baseprompttempl": [0, 23], "basequeryexpans": [18, 26], "baseretriev": [18, 27], "baserunn": [0, 15], "bash": 56, "basi": [42, 54, 111], "basic": [6, 11, 47], "batch": [0, 2, 6, 7, 17, 19, 21, 23, 29, 38, 56, 59, 60, 61, 68, 69, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 105, 112], "batch_appli": [1, 8, 44, 45, 47, 48, 49], "batch_filt": [1, 8, 10, 46], "batch_siz": [8, 17, 23, 27, 29], "becaus": [10, 25, 27, 31, 34, 35, 42, 43, 45, 46, 47, 48, 62, 64, 67, 70, 86, 91, 100, 105, 110, 112, 113], "becom": [38, 49, 106], "bedrock": [0, 57], "been": [109, 113], "befor": [27, 31, 48, 49, 57, 65, 67, 106, 110, 112, 113], "behavior": [35, 60, 68, 69, 91, 97, 98, 99, 111], "being": [60, 68, 69], "belong": 107, "below": [8, 15, 31, 44, 46, 47, 49, 50, 51, 53, 56, 59, 71, 72, 73, 74, 75, 110, 112, 113], "benz": 99, "bert_scor": [16, 17, 59], "best": [0, 19, 21, 22, 23, 25, 26, 27, 29, 49, 55, 94, 102, 107, 109, 110, 113], "best_": 107, "best_0": 107, "best_column_nam": 29, "beta": [17, 58], "better": [45, 47, 64, 67, 70, 71, 75, 86, 100, 108, 113], "between": [17, 23, 43, 52, 53, 59, 64, 101, 102, 109], "bfloat16": 91, "bge": [23, 57, 78, 79, 85], "bigram": 17, "bilingu": 52, "bin": 56, "bird": 99, "bit": 45, "bleu": [16, 17, 59, 95, 106, 109, 110, 112], "blob": 17, "blue": 110, "bm": 57, "bm25": [0, 18, 26, 100, 104, 106, 107, 110], "bm25_api": 27, "bm25_corpu": 27, "bm25_ingest": [18, 27], "bm25_path": 27, "bm25_pure": [18, 27], "bm25_token": [27, 101], "bm25okapi": [27, 101], "bobb": 55, "bodi": [15, 50], "bool": [0, 5, 6, 8, 10, 15, 17, 20, 23, 28, 29], "boolean": [6, 91], "boost": [61, 85], "both": [0, 50, 53, 65, 112], "botocor": 0, "botocore_config": [0, 30], "botocore_sess": [0, 30], "bottom": 69, "bowl": 48, "branch": 110, "break": [43, 50, 54], "brew": 112, "brief": 48, "broader": 111, "browser": 15, "bshtml": 40, "buffer": 50, "bui": 54, "build": [35, 49, 107, 108, 110], "built": 56, "bulb": 48, "c": [56, 112], "cach": 6, "cache_batch": [6, 38], "calcul": [17, 53, 64, 67, 73, 74, 91, 102, 103, 109], "calculate_cosine_similar": [16, 17], "call": [0, 45, 57, 60, 61, 68, 69, 91, 101, 102], "callabl": [0, 1, 2, 6, 7, 8, 14, 27, 28, 29, 31], "callback_manag": [0, 23], "callbackmanag": [0, 23], "can": [5, 6, 7, 8, 10, 15, 17, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113], "cannot": [56, 95, 100], "capit": 48, "case": [26, 35, 38, 49, 53, 55, 108, 110, 112], "cast": [19, 20, 21, 22, 23, 25, 26, 27, 28], "cast_corpus_dataset": [0, 29], "cast_embedding_model": [0, 16], "cast_metr": [0, 16], "cast_qa_dataset": [0, 29], "cast_queri": [18, 27], "cast_to_run": [0, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], "castorini": [23, 84], "caus": [76, 81, 108, 112, 113], "cc": [27, 104], "cd": 56, "certain": [29, 45], "certainli": 50, "cg": 53, "chain": [52, 108], "chang": [10, 29, 38, 47, 57, 76, 81, 92, 101, 110, 111, 112], "channel": [55, 112, 113], "charact": 42, "chat": [0, 6, 61, 112], "chat_box": [0, 30], "chat_prompt": 21, "chatinterfac": 15, "chatmessag": [0, 9, 12, 23, 45], "chatmodel": 37, "chatopenai": 37, "chatrespons": [23, 45], "check": [0, 17, 28, 34, 35, 47, 49, 55, 56, 57, 59, 62, 63, 78, 79, 101, 106, 107, 110, 112, 113], "check_expanded_queri": [18, 26], "child": 99, "choic": [101, 108], "choos": [10, 17, 23, 26, 35, 87, 101, 105, 108, 109], "chroma": [27, 107], "chromadb": [6, 27, 38, 105], "chunk": [0, 1, 5, 8, 27, 34, 35, 38, 47, 50, 68, 96, 110], "chunk_config": 31, "chunk_method": [31, 33, 47, 49], "chunk_modul": [32, 33], "chunk_overlap": [31, 33, 38, 47, 49], "chunk_project_dir": 49, "chunk_siz": [29, 31, 33, 38, 47, 49, 50], "chunk_text": 2, "chunked_cont": [2, 31], "chunked_str": 31, "chunker": [2, 30, 42, 49], "chunker_nod": [1, 2], "ci": 56, "circl": 110, "ciudad": 48, "cl": 29, "claim": 17, "clarifi": 38, "class": [0, 8, 9, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 35, 37, 57, 85, 87, 89, 105], "classif": 47, "classifi": [46, 53], "classmethod": [0, 15, 27, 28], "classvar": [0, 9, 10, 11, 12, 15, 23], "clear": 44, "cli": [30, 113], "client": [0, 9, 10, 11, 12, 23, 27, 38, 44, 46, 48], "clone": 56, "close": 91, "cloud": 7, "clova": [0, 1, 42, 43], "co": [55, 57], "code": [6, 8, 11, 17, 31, 32, 33, 39, 40, 49, 56, 57, 106], "coher": [0, 17, 18, 59, 76, 81], "cohere_api_kei": 76, "cohere_cli": 23, "cohere_rerank": 86, "cohere_rerank_pur": [18, 23], "coherererank": [18, 23], "cointegr": 57, "colber": 77, "colbert": [0, 18, 81, 86], "colbert_rerank": 77, "colbertrerank": [18, 23], "colbertv2": [23, 77], "collect": [6, 27, 29, 35, 38, 106, 110, 111], "collection_nam": [27, 107], "column": [0, 6, 8, 15, 19, 20, 21, 22, 23, 25, 26, 27, 29, 35, 38, 45, 48, 50, 113], "column_nam": 29, "com": [6, 17, 50, 55, 56, 110], "combin": [26, 27, 28, 29, 43, 95, 102, 103, 106, 108, 111], "come": [35, 48, 53, 55, 97, 98, 99, 108, 110], "comedi": 99, "command": [51, 56, 112], "commit": 112, "common": [17, 27, 45, 56, 85, 99, 109, 111, 112, 113], "compani": 55, "compar": [54, 59, 109], "comparison": 54, "compat": [8, 62], "compatibilti": 62, "complet": [0, 31, 42, 61], "completion_to_prompt": 0, "completionrespons": 0, "completiontoprompttyp": 0, "complex": [39, 45, 110], "complic": 45, "compon": 111, "compress": [21, 54, 66, 67, 70, 110], "compress_raga": [8, 9, 45], "compressor": [21, 54, 66, 67, 68, 69], "comput": [0, 9, 10, 11, 12, 15, 17, 18, 23, 67, 85], "computedfieldinfo": [0, 9, 10, 11, 12, 15, 23], "concept": 52, "concept_completion_query_gen": [8, 12, 48], "concis": [11, 47], "conclud": 91, "conclus": 94, "condit": [35, 37], "conditional_evolve_raga": [8, 9, 45], "config": [0, 9, 10, 11, 12, 15, 23, 56, 57, 109, 110, 112], "config_dict": 15, "configdict": [0, 9, 10, 11, 12, 15, 23], "configur": [0, 9, 10, 11, 12, 15, 23, 55, 56, 59, 60, 67, 68, 69, 86, 91, 95, 100, 104, 108, 111, 113], "conflict": 52, "conform": [0, 9, 10, 11, 12, 15, 23], "confus": 70, "connect": [0, 52, 105], "consid": [6, 53, 56, 62, 100], "consist": [17, 59], "constraint": [44, 56], "consum": 55, "contain": [2, 6, 7, 8, 17, 19, 21, 22, 23, 25, 27, 28, 29, 35, 38, 42, 43, 45, 53, 93, 94, 96, 99, 107, 108, 111, 112, 113], "content": [30, 31, 38, 40, 45, 50, 67, 71, 72, 73, 74, 75, 86, 95, 104, 105], "content_embed": 23, "content_s": [6, 38], "contents_list": 29, "context": [0, 23, 44, 46, 52, 53, 66, 91, 92, 95, 111], "context_s": [0, 30], "contextu": 52, "contradict": 52, "contributor": 56, "control": [17, 62], "conveni": [38, 51], "convert": [0, 15, 28, 29, 38, 39, 41, 106], "convert_datetime_str": [0, 29], "convert_env_in_dict": [0, 29], "convert_inputs_to_list": [0, 29], "convert_string_to_tuple_in_dict": [0, 29], "convex": [27, 102], "cool": 110, "core": [33, 38, 45, 52, 57], "coroutin": 29, "corpu": [1, 4, 6, 8, 27, 34, 46, 47, 48, 52, 56, 58, 64, 72, 90, 96, 104, 107, 113], "corpus_data": [6, 27, 29], "corpus_data_path": [0, 56, 113], "corpus_data_row": 6, "corpus_df": [6, 8, 14, 20, 29, 37, 38], "corpus_df_to_langchain_docu": [1, 14], "corpus_path": 27, "corpus_save_path": 8, "corpus_test": 113, "correct": [0, 53], "correl": 52, "correspond": [0, 9, 10, 11, 12, 15, 23, 28], "cosin": [17, 52, 64], "cost": [17, 43, 67, 113], "cot": 52, "could": [19, 21, 22, 23, 25, 27], "couldn": 51, "count": [17, 66, 101], "cours": 55, "cover": [31, 34, 38, 42, 45, 47, 48, 49], "cpp": 80, "cpu": [17, 85], "creat": [0, 5, 6, 7, 8, 12, 15, 28, 29, 31, 34, 35, 36, 39, 42, 47, 49, 51, 55, 93, 96, 102, 107, 110], "creation": [6, 8, 48, 55, 113], "criterion": 111, "critic": 6, "critic_llm": [6, 37], "cross": [23, 80, 88], "crucial": [31, 34, 35, 42, 47, 67, 86, 94, 111], "csv": [31, 42, 108, 113], "cucumb": 99, "cuda": [56, 77, 78, 79, 80, 85, 88], "cudnn": 56, "cue": 91, "cumul": 62, "current": [15, 29, 31, 42, 50, 54, 80, 111, 113], "curs": 45, "custom": [0, 51, 60, 68, 69, 73, 74, 87, 91, 97, 98, 99, 105, 109, 111, 112], "cutoff": 70, "cycl": 110, "czech": 31, "d": [6, 26, 29, 35, 50], "dag": 110, "dai": 110, "danish": 31, "dashboard": 30, "data": [0, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 44, 45, 46, 48, 50, 52, 55, 56, 59, 67, 86, 94, 100, 105, 111, 113], "data_path": 7, "data_path_glob": [0, 7], "data_path_list": 7, "databas": 105, "dataformat": 31, "datafram": [0, 2, 5, 6, 8, 11, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 45], "dataset": [6, 8, 10, 29, 31, 34, 38, 46, 48, 53, 55, 56, 102, 107, 112], "date": [48, 72], "datetim": [35, 42, 72, 90], "db": [6, 110], "db_path": 27, "dbsf": [27, 102, 104], "dcg": 53, "dd": 72, "de": 48, "deal": 67, "debug": 35, "decid": [62, 110, 111], "decis": 111, "decod": 50, "decompos": [26, 100], "decomposit": 99, "decor": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "decreas": [46, 61, 77, 78, 79, 80, 85, 88], "deep": 85, "deepev": 17, "deepeval_faith": [16, 17], "deepeval_prompt": [0, 16], "def": [31, 45, 50], "default": [0, 2, 5, 6, 7, 11, 15, 17, 21, 23, 25, 26, 27, 29, 31, 35, 38, 50, 56, 57, 60, 61, 65, 66, 68, 69, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 95, 97, 98, 101, 102, 103, 106, 109, 111], "default_config": 113, "default_factori": [0, 23], "defaulttoken": 17, "defin": [0, 9, 10, 11, 12, 15, 23, 56, 64, 84, 86, 104, 105, 109], "delet": [29, 70], "deliv": 110, "demo": 55, "dens": [27, 97, 101, 105], "depend": [10, 31, 56, 101, 107, 113], "deploi": [0, 30, 50, 51, 55, 85], "deploy": [55, 102], "deportiva": 48, "deprec": [27, 36], "describ": 50, "descript": [0, 23, 47, 50, 59, 64, 86, 104], "design": [6, 38, 52, 59, 89, 94, 102, 103], "detail": [39, 45, 48, 49, 52, 59, 62, 82, 87, 95, 96, 100, 111, 113], "detect": 102, "determin": [59, 107, 109], "develop": [17, 62, 108, 111], "devic": [23, 85], "df": [15, 29, 46, 47, 49, 112], "diagram": [108, 110], "dict": [0, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 43, 45], "dict_": 29, "dict_column": 29, "dict_to_markdown": [0, 29], "dict_to_markdown_t": [0, 29], "dictionari": [0, 6, 9, 10, 11, 12, 15, 16, 23, 27, 29, 31, 35, 37, 38, 59, 84], "did": 0, "didn": 37, "differ": [6, 10, 29, 31, 35, 38, 45, 47, 49, 52, 57, 59, 84, 98, 100, 101, 103, 107, 111], "difficulti": [45, 112], "dimens": [26, 29], "dir": [50, 113], "direct": [45, 90, 100], "directli": [8, 37, 48, 52, 53, 67, 76, 81, 83, 92, 106, 108, 112], "directori": [0, 5, 6, 15, 19, 21, 22, 23, 25, 26, 27, 31, 40, 42, 49, 50, 51, 113], "directoryload": 38, "discord": [55, 110, 112, 113], "discrimin": 46, "displai": 35, "distinct": 67, "distinguish": [43, 102], "distribut": [6, 37, 38], "distribute_list_by_ratio": [4, 6], "divid": [39, 53, 101], "dl": 84, "do": [5, 6, 8, 26, 35, 43, 45, 53, 54, 55, 56, 106, 107, 110, 113], "doc": [6, 35, 36, 53, 56, 57, 62, 109], "doc_id": [0, 2, 15, 27, 29, 31, 50], "dockerfil": 56, "document": [2, 5, 6, 7, 8, 14, 23, 27, 31, 34, 35, 39, 40, 41, 42, 43, 48, 56, 59, 67, 86, 92, 95, 96, 100, 101, 104, 106, 108, 109, 110, 111, 113], "document_load": [7, 38, 40], "doe": [15, 27, 44, 52, 56, 59, 60, 61, 62, 67, 70, 86, 95, 106, 108], "doesn": [6, 53, 99, 110, 112], "domain": 101, "don": [10, 25, 29, 35, 38, 42, 47, 53, 55, 95, 102, 110, 112, 113], "done": 113, "dontknow": [1, 8, 46, 47, 49], "dontknow_filter_llama_index": [8, 10, 46], "dontknow_filter_openai": [8, 10, 46], "dontknow_filter_rule_bas": [8, 10, 46, 47, 49], "dotenv": [56, 112], "doubl": 35, "down": [50, 53], "download": [35, 56, 113], "drive": 99, "drop": [10, 46, 47, 49, 94, 112], "due": [56, 80], "duplic": [28, 35, 106], "dure": [100, 112], "dutch": 31, "dynam": [56, 111], "dynamically_find_funct": [0, 30], "e": [56, 60, 68, 69], "each": [0, 6, 8, 26, 27, 28, 29, 35, 37, 38, 50, 52, 73, 74, 99, 102, 103, 106, 107, 108, 109, 110, 111], "earli": 35, "easier": 106, "easili": [31, 42, 48, 105, 110, 113], "echo": 112, "edit": 56, "edit_summary_df_param": [18, 27], "editor": 106, "effect": [12, 43, 45, 59, 86, 103, 104, 111, 113], "effective_ord": 17, "effici": 67, "effort": 111, "either": 53, "elem": 29, "element": [27, 28, 29], "els": 50, "emb": [27, 105, 110], "embed": [0, 6, 17, 27, 38, 52, 55, 56, 59, 64, 73, 74, 86, 101, 105, 107, 113], "embed_batch_s": 0, "embed_dim": [0, 30], "embedding model": 57, "embedding_batch": [27, 105], "embedding_model": [6, 17, 20, 26, 27, 29, 37, 38, 57, 59, 64, 73, 74, 100, 104, 105, 106], "embedding_query_cont": [0, 29], "emploi": 99, "empti": [0, 27, 35, 106], "empty_cuda_cach": [0, 29], "en": [9, 10, 11, 12, 17, 23, 31, 41, 46, 47, 48, 49, 57, 59, 81, 84], "en_qa": 46, "en_qa_df": 46, "encod": [19, 23, 80, 88], "encount": 112, "end": [29, 35, 50, 91], "end_idx": [0, 2, 15, 50], "endpoint": [0, 113], "engin": 112, "enginearg": 62, "english": [2, 31, 33, 49, 76, 101], "enhanc": [86, 91, 109, 111], "enough": [35, 70], "ensur": [50, 56, 59, 67, 86, 95, 100, 104], "entri": 67, "entrypoint": 56, "enumer": 50, "env": [56, 61], "environ": [7, 29, 40, 51, 56, 62, 76, 81, 83, 92, 112, 113], "equal": [6, 53], "equival": 50, "error": [0, 11, 61, 76, 81, 87, 99, 105], "essenc": 48, "essenti": [71, 72, 73, 74, 75, 95, 102, 103, 108, 111, 112], "estonian": 31, "etc": [35, 38, 106], "eval": 17, "evalu": [10, 15, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 34, 35, 36, 42, 46, 52, 55, 56, 59, 67, 86, 95, 100, 102, 104, 106, 107, 109, 111], "evaluate_gener": [0, 16], "evaluate_generator_nod": [18, 19], "evaluate_generator_result": [18, 25], "evaluate_one_prompt_maker_nod": [18, 25], "evaluate_one_query_expansion_nod": [18, 26], "evaluate_passage_compressor_nod": [18, 21], "evaluate_retriev": [0, 16], "evaluate_retrieval_cont": [0, 16], "evaluate_retrieval_nod": [18, 27], "even": [0, 46, 94, 102], "evenly_distribute_passag": [18, 27], "event": [29, 48, 50], "ever": 110, "everi": [19, 61, 111], "evolut": [6, 37], "evolv": [1, 8, 47, 48], "evolve_to_rud": 45, "evolved_queri": [8, 9], "exact": [46, 52], "exactli": 53, "exampl": [0, 6, 10, 35, 38, 42, 45, 47, 49, 52, 57, 58, 106, 108, 110, 112, 113], "example_node_line_1": 109, "example_node_line_2": 109, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [59, 61, 67, 86, 95, 99], "exceed": [95, 100, 104], "except": 54, "exclud": [0, 23], "exclus": 105, "execut": [0, 27, 29, 49, 56, 57, 100, 113], "exist": [5, 6, 27, 28, 35, 80, 107], "exist_gen_gt": [6, 38], "existing_qa": 38, "existing_qa_df": 38, "existing_query_df": 6, "exp": 17, "exp_norm": [18, 23], "expand": [100, 108], "expanded_queri": 26, "expanded_query_list": 26, "expans": [25, 26, 27, 35, 67, 97, 99, 110], "expect": [35, 91], "expens": [17, 43, 46], "experi": [55, 107, 110, 112, 113], "experiment": 59, "expir": 51, "explain": [107, 109, 110], "explan": 48, "explicit": 52, "explod": [0, 29], "explode_valu": 29, "explor": [56, 102, 103], "export": [56, 76, 81, 83, 92, 112], "extens": [5, 6, 42, 106], "extent": 52, "extra": [7, 17, 29, 101], "extract": [15, 28, 40, 72, 90, 101, 102], "extract_best_config": [0, 15, 113], "extract_evid": [0, 1], "extract_node_line_nam": [0, 15], "extract_node_strategi": [0, 15], "extract_retrieve_passag": [0, 15], "extract_valu": [0, 28], "extract_values_from_nod": [0, 28], "extract_values_from_nodes_strategi": [0, 28], "f": [45, 50, 95], "f1": [17, 67], "face": [55, 56, 85], "facebook": 62, "facilit": 59, "fact": 110, "factoid": 47, "factoid_query_gen": [8, 12, 47, 48, 49, 58], "factori": 0, "factual": 48, "faith": 17, "faithfulnesstempl": [16, 17], "fall": 17, "fallback": 17, "fals": [0, 5, 6, 10, 15, 17, 23, 29, 71, 75, 78, 79, 87, 91], "familiar": 110, "fashion": 69, "fast": [46, 62, 76, 80, 81, 92], "faster": [62, 67], "fate": 110, "favorit": 106, "featur": [2, 35, 39, 52, 56, 59, 110, 113], "fee": 105, "feedback": [108, 110], "feel": [45, 55, 110, 113], "fetch": [64, 65, 104], "fetch_cont": [0, 29], "fetch_one_cont": [0, 29], "few": [99, 110, 113], "field": [0, 9, 10, 11, 12, 15, 17, 23, 53, 72, 90], "fieldinfo": [0, 9, 10, 11, 12, 15, 23], "fields_to_check": [17, 28], "file": [0, 5, 6, 7, 8, 14, 15, 17, 29, 35, 38, 49, 50, 51, 52, 55, 56, 57, 62, 76, 81, 83, 87, 92, 102, 107, 108, 109, 110, 111, 112], "file_dir": [5, 6], "file_nam": [2, 31], "file_name_languag": 2, "file_pag": [0, 15, 50], "file_path": 14, "filenam": [5, 6, 27], "filepath": [0, 5, 6, 15, 29, 49, 50], "filesystem": [14, 56], "fill": [29, 35, 52], "filter": [0, 1, 8, 22, 49, 61, 64, 71, 73, 74, 75], "filter_by_threshold": [0, 30], "filter_dict_kei": [0, 29], "filtered_qa": 46, "final": [0, 31, 42, 43, 66, 103, 108, 110], "find": [10, 29, 32, 33, 38, 39, 40, 41, 46, 48, 49, 52, 53, 55, 57, 66, 89, 95, 102, 103, 104, 107, 108, 111], "find_key_valu": [0, 29], "find_node_dir": [0, 30], "find_node_summary_fil": [0, 29], "find_trial_dir": [0, 29], "find_unique_elem": [18, 27], "fine": 96, "finnish": 31, "first": [8, 15, 17, 27, 29, 31, 38, 42, 45, 47, 48, 49, 50, 53, 54, 55, 56, 62, 76, 81, 83, 86, 92, 105, 106, 107, 108, 110], "fit": [52, 111], "five": 35, "fix": [52, 112], "fixed_min_valu": 27, "flag": 86, "flag_embed": [0, 18], "flag_embedding_llm": [0, 18], "flag_embedding_llm_rerank": 78, "flag_embedding_rerank": 79, "flag_embedding_run_model": [18, 23], "flagembed": [56, 78, 79], "flagembeddingllm": 79, "flagembeddingllmrerank": [18, 23], "flagembeddingrerank": [18, 23], "flashrank": [0, 18, 86], "flashrank rerank": 80, "flashrank_rerank": 80, "flashrank_run_model": [18, 23], "flashrankrerank": [18, 23], "flask": [15, 50, 55], "flat_list": 29, "flatmap": [1, 8], "flatten": 29, "flatten_appli": [0, 29], "flexibl": [84, 102, 111], "float": [0, 17, 23, 27, 28, 62], "floor": 17, "flow": 52, "fluenci": [17, 59], "fn": 8, "focu": [67, 113], "focus": 111, "folder": [15, 56, 110], "follow": [6, 27, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 49, 50, 51, 53, 56, 57, 72, 91, 102, 107, 110, 112], "forget": 113, "form": [2, 6, 31, 34, 38, 39, 49, 52], "format": [0, 29, 31, 38, 39, 42, 50, 53, 72, 91, 107], "forward": 65, "found": [38, 48, 52, 60, 68, 69, 73, 74, 82, 87, 105, 113], "four": 54, "fp16": [78, 79], "fragment": 17, "framework": [37, 52, 110], "franc": 48, "free": [55, 110, 113], "french": 31, "frequent": 57, "friendli": 51, "from": [0, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 64, 67, 72, 76, 80, 81, 83, 86, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113], "from_datafram": [0, 28], "from_dict": [0, 28], "from_parquet": [0, 30, 31, 49], "from_trial_fold": [0, 15, 50, 51, 113], "from_yaml": [0, 15, 50, 51, 113], "fstring": [0, 18, 93, 95, 96, 110], "full": [35, 56, 62, 107, 111], "fulli": 56, "func": [0, 2, 6, 7, 19, 29], "function": [0, 5, 6, 8, 10, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 38, 39, 42, 47, 48, 89, 111, 113], "fundament": 104, "further": [27, 53, 60, 68, 69, 97, 98, 99], "fuse": [27, 102], "fuse_per_queri": [18, 27], "fusion": [27, 103], "futur": [35, 61, 108, 110, 111], "g": [17, 60, 68, 69], "g_eval": [16, 17, 52, 59], "gamma": 17, "gcc": 112, "gemma": [23, 78], "gener": [0, 6, 8, 11, 15, 18, 25, 29, 30, 34, 35, 36, 38, 45, 46, 50, 57, 60, 61, 62, 67, 91, 95, 97, 98, 99, 100, 108, 110, 111, 112], "generate_answ": [4, 6, 38], "generate_basic_answ": [4, 6], "generate_claim": [16, 17], "generate_qa_llama_index": [4, 6, 38, 58], "generate_qa_llama_index_by_ratio": [4, 6, 38], "generate_qa_raga": [4, 6, 37], "generate_qa_row": [4, 6], "generate_row_funct": 6, "generate_simple_qa_dataset": [4, 6], "generate_truth": [16, 17], "generate_verdict": [16, 17], "generate_with_langchain_doc": 6, "generated_log_prob": [0, 28], "generated_text": [0, 15, 17, 28, 50], "generation_gt": [0, 1, 6, 8, 10, 17, 28, 44, 46, 47, 49], "generator_class": 25, "generator_dict": 18, "generator_llm": [6, 37], "generator_model": 57, "generator_modul": [25, 95], "generator_module_typ": [17, 97, 98, 99], "generator_nod": [18, 19], "generator_param": 25, "german": 31, "get": [0, 7, 14, 20, 29, 37, 38, 45, 46, 48, 49, 52, 56, 60, 61, 70, 76, 80, 81, 83, 92, 105, 106, 108, 110, 112, 113], "get_best_row": [0, 29], "get_bm25_pkl_nam": [18, 27], "get_bm25_scor": [18, 27], "get_colbert_embedding_batch": [18, 23], "get_colbert_scor": [18, 23], "get_default_llm": 23, "get_event_loop": [0, 29], "get_file_metadata": [1, 14], "get_hybrid_execution_tim": [18, 27], "get_id_scor": [18, 27], "get_ids_and_scor": [18, 27], "get_metric_valu": [0, 30], "get_multi_query_expans": [18, 26], "get_nodes_from_docu": 38, "get_or_create_collect": 38, "get_param_combin": [0, 1, 14, 28], "get_query_decompos": [18, 26], "get_result": [18, 19], "get_result_o1": [18, 19], "get_runn": [0, 30], "get_scores_by_id": [18, 27], "get_start_end_idx": [1, 14], "get_structured_result": [18, 19], "get_support_modul": [0, 30], "get_support_nod": [0, 30], "get_vers": 50, "gg": [55, 110], "girl": [35, 99], "gist": 52, "git": 56, "github": [17, 35, 55, 56, 110, 112, 113], "give": [0, 45, 53], "given": [0, 5, 6, 15, 17, 27, 29, 38, 44, 46, 66, 83, 84, 87, 89, 97, 98, 108], "glob": [38, 42], "go": [35, 53, 55, 101, 109, 113], "goal": [100, 108], "goe": [58, 110], "gone": 61, "good": [10, 35, 38, 46, 47, 49, 52, 110, 113], "got": 61, "gpt": [9, 10, 11, 12, 17, 25, 37, 38, 46, 48, 52, 59, 60, 61, 67, 68, 69, 87, 95, 98, 99, 108, 112], "gpt-3.5": 61, "gpt-4": 61, "gpt2": [59, 61, 95, 101], "gpu": [85, 113], "gr": 15, "gradio": [0, 30, 113], "gradiorunn": [0, 15, 113], "grain": 96, "gram": [17, 52], "gratitud": 80, "great": [34, 38, 46, 55, 101, 108], "greatest": 46, "greek": 31, "ground": [6, 17, 35, 44, 46, 52, 53, 59, 108], "ground_truth": 17, "group": [35, 48], "gt": [0, 17, 35, 44, 52, 53, 54, 108], "guarante": [70, 108], "guess": 45, "guid": [34, 38, 49, 55, 59, 67, 86, 95, 100, 101, 104, 110, 111, 113], "guidanc": 6, "h": 50, "ha": [6, 8, 11, 12, 35, 38, 46, 48, 49, 52, 54, 67, 109, 110, 113], "had": 113, "halftim": 48, "hallucin": [2, 31, 110], "hamlet": 99, "hand": [35, 70], "handi": 14, "handle_except": [0, 30], "happen": 110, "hard": [38, 45, 55, 108, 110], "hardwar": 85, "harmon": [52, 53, 54], "have": [0, 6, 8, 10, 27, 29, 31, 34, 35, 39, 41, 44, 45, 46, 47, 48, 49, 50, 56, 57, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 85, 88, 90, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113], "haven": 50, "head": 29, "help": [35, 67, 85, 96, 102], "here": [6, 31, 32, 33, 34, 35, 37, 40, 41, 42, 45, 49, 50, 52, 55, 56, 57, 61, 62, 63, 66, 73, 74, 78, 79, 82, 92, 101, 105, 106, 107, 108, 110, 112, 113], "hf": [21, 66], "hh": 72, "high": [17, 86], "higher": [52, 53, 62, 67, 81, 111], "highest": 10, "highli": [45, 49, 52, 101, 113], "hit": 53, "home": 48, "homepag": 55, "hood": 108, "hop": [6, 8, 12, 38, 47, 99], "hope": 107, "hopefulli": 53, "host": [15, 50, 56, 113], "hour": 51, "how": [6, 31, 34, 38, 42, 44, 47, 48, 49, 50, 53, 60, 68, 69, 73, 74, 91, 99, 101, 105, 106, 107, 109, 110, 113], "howev": [38, 49, 53, 102, 108, 110], "html": [6, 33], "htmlnodepars": 33, "http": [6, 7, 15, 17, 50, 55, 56, 57, 110], "hug": [56, 85], "huggingfac": [17, 26, 35, 55, 56, 57, 62, 95, 113], "huggingface_all_mpnet_base_v2": 57, "huggingface_baai_bge_smal": 57, "huggingface_bge_m3": 57, "huggingface_cointegrated_rubert_tiny2": 57, "huggingface_evalu": [16, 17], "huggingfaceembed": 57, "huggingfacellm": [57, 60, 68, 69], "human": 52, "hybrid": [27, 42, 104, 106], "hybrid cc": 102, "hybrid rrf": 103, "hybrid_cc": [0, 18, 100, 102, 104], "hybrid_module_func": 27, "hybrid_module_param": 27, "hybrid_rrf": [0, 18, 100, 103, 104, 106], "hybridcc": [18, 27], "hybridretriev": [18, 27], "hybridrrf": [18, 27], "hyde": [0, 18, 57, 100], "hydrogen": 99, "hyperparamet": [27, 106], "hypothet": 97, "i": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 107, 111, 113], "id": [0, 20, 23, 27, 29, 31, 35, 47, 50, 75, 80, 85, 104], "id_": 29, "id_column_nam": 29, "idcg": 53, "ideal": 53, "ident": 48, "identifi": [35, 86, 104], "idf": [52, 101], "idx_rang": 8, "ignor": 27, "imag": [35, 107, 113], "imagin": 35, "imdb": 99, "immedi": 100, "impact": [53, 67, 95, 100, 105], "implement": 110, "import": [31, 32, 33, 35, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 70, 99, 101, 103, 110, 113], "importerror": 112, "imposs": [46, 110], "improv": [17, 67, 86, 91, 100], "inc": [55, 56, 110], "includ": [6, 12, 17, 19, 35, 52, 53, 57, 60, 68, 69, 85, 95, 100, 102, 109, 111], "incorrect": [53, 72], "increas": [45, 53, 81, 100, 111, 112], "increment": [12, 50], "index": [0, 2, 5, 6, 10, 27, 29, 31, 35, 46, 50, 60, 61, 96, 112], "index_valu": 29, "indic": [17, 29, 35, 53], "individu": 111, "infer": [80, 85], "influenc": 53, "info": 56, "inform": [27, 31, 32, 33, 35, 40, 41, 42, 45, 48, 52, 53, 57, 60, 68, 69, 72, 73, 74, 86, 90, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113], "ingest": [6, 27, 105], "ini": 56, "initi": [0, 15, 17, 26, 47, 49, 57, 62, 86, 91, 112], "initial_corpu": [47, 49], "initial_corpus_df": 49, "initial_qa": [47, 49], "initial_qa_df": 49, "initial_raw": [47, 49], "initial_raw_df": 49, "input": [0, 6, 11, 12, 20, 23, 26, 27, 29, 35, 37, 38, 51, 60, 61, 67, 88, 92, 93, 94, 96, 98, 102, 103, 108, 110], "input_list": 6, "input_metr": 27, "input_str": 23, "input_tensor": 23, "input_text": 23, "inquir": 48, "insert": 35, "insid": [0, 56, 112, 113], "inspect": 56, "inspir": [65, 71, 72, 73, 74, 75, 97], "instal": [50, 55, 57, 101, 113], "instanc": [2, 7, 8, 10, 17, 21, 27, 28, 29, 35, 45, 48, 49, 57, 60], "instead": [0, 48, 58, 113], "instruct": [21, 35, 56, 57, 62, 66, 89, 91, 101], "int": [0, 2, 6, 7, 8, 14, 15, 17, 19, 20, 21, 23, 27, 29, 35], "integ": 50, "integr": [57, 84, 111], "intel": 85, "intend": 111, "interact": [15, 51], "interchang": 111, "interest": 110, "interfac": [15, 57], "intermedi": 23, "internet": 105, "interv": 0, "introduc": [45, 52, 58, 109], "invent": 48, "invokemodel": 0, "involv": [86, 104], "ir": [23, 77], "irrelev": 70, "is_async": 6, "is_best": 29, "is_dont_know": [8, 10], "is_fields_notnon": [0, 28], "is_passage_depend": [8, 10], "issu": [55, 59, 80, 110, 112, 113], "italian": 31, "item": [17, 29, 53, 74, 75], "iter": [0, 8], "iter_cont": 50, "its": [6, 11, 15, 21, 25, 27, 28, 29, 35, 38, 50, 51, 89, 95, 100, 105, 108, 109, 110], "itself": [57, 102, 108], "ja": [10, 17, 31, 46, 48, 56, 101], "japanes": 31, "java_hom": 56, "jdk": 56, "jean": [35, 48], "jeffrei": 55, "jina": [0, 18, 81], "jina_rerank": 86, "jina_reranker_pur": [18, 23], "jinaai": 81, "jinaai_api_kei": 81, "jinarerank": [18, 23], "job": 108, "jq_schema": 40, "json": [15, 39, 41, 50, 113], "json_schema": 0, "json_to_html_t": 39, "judgment": 52, "just": [8, 11, 15, 27, 35, 38, 44, 46, 61, 101, 110, 113], "k": [17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 35, 57, 64, 86, 104], "keep": [0, 29, 49, 61, 72, 74, 75, 106, 113], "kei": [0, 7, 15, 16, 17, 28, 29, 31, 32, 33, 35, 38, 40, 57, 61, 76, 81, 83, 92, 105, 106, 112, 113], "key_column_nam": 29, "keyword": [0, 6, 7, 21, 52, 57, 60, 68, 69, 97, 98, 99], "kf1_polici": 110, "kim": 55, "kind": [35, 110, 112], "kiwi": [31, 49, 101], "kiwi_result": 31, "kiwipiepi": 31, "kkma": 101, "know": [10, 35, 45, 47, 55, 95, 106, 107, 108, 111, 113], "knowledg": 35, "known": [38, 53], "ko": [10, 17, 31, 46, 48, 56, 86], "ko-rerank": 82, "konlpi": [32, 56, 101], "korea": [55, 56, 110], "korean": [2, 17, 31, 32, 57, 82], "korerank": [0, 18, 82], "koreranker_run_model": [18, 23], "kosimcs": 57, "kwarg": [0, 6, 7, 8, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 60, 68, 69, 97, 98, 99], "l": [23, 80, 88], "label": [53, 97], "lama_index": 38, "lambda": [0, 31, 46, 47, 49], "lang": [9, 10, 11, 12, 17, 46, 47, 48, 49, 59], "langchain": [1, 2, 4, 6, 7, 31, 37, 38, 42, 98, 110], "langchain_chunk": [0, 1, 32], "langchain_chunk_pur": [1, 2], "langchain_commun": [38, 40], "langchain_docu": 5, "langchain_document_to_parquet": 38, "langchain_documents_to_parquet": [4, 5, 38, 58], "langchain_openai": 37, "langchain_pars": [0, 1, 40, 42, 43, 49], "langchain_parse_pur": [1, 7], "langchain_text_splitt": 38, "languag": [2, 6, 10, 11, 17, 31, 46, 48, 52, 56, 59, 60, 67, 68, 69, 76, 85, 91, 101, 111], "laredo": 48, "larg": [23, 52, 57, 59, 60, 67, 68, 69, 76, 79, 81, 83, 84, 85, 96, 111], "last": 42, "last_modified_datetim": [31, 35, 42, 72, 90], "lastli": [105, 106], "later": [53, 72, 113], "latest": [62, 72, 90], "launch": [15, 51, 113], "lazyinit": [0, 30, 31, 57], "le": 0, "lead": 67, "learn": [37, 55, 73, 74, 85, 105, 106, 108, 110, 113], "least": [6, 53, 74, 75, 108, 112], "legaci": [0, 1, 34, 37, 38, 58], "legal": 99, "length": [0, 21, 23, 27, 29, 53, 54, 59, 61, 71, 73, 88, 92, 95], "lengthen": 94, "less": [38, 53, 64, 67], "let": [53, 54, 108, 110, 113], "level": [17, 29, 52, 64, 67, 86, 104, 111], "lexcial": 102, "lexic": [27, 102], "lexical_id": 27, "lexical_scor": 27, "lexical_summari": 27, "lexical_summary_df": 27, "lexical_theoretical_min_valu": [27, 102], "li": 89, "libmag": 56, "librari": [50, 56, 58, 62, 80, 113], "licens": 99, "life": 35, "light": 48, "like": [6, 15, 17, 26, 27, 29, 31, 35, 42, 44, 47, 49, 53, 56, 60, 61, 67, 68, 69, 91, 95, 101, 102, 103, 106, 108, 110, 112, 113], "likelihood": 91, "limit": [23, 61, 77, 78, 79, 80, 81, 85, 87, 88, 92, 110, 111, 112], "line": [0, 15, 19, 21, 22, 23, 25, 26, 27, 50, 56, 59, 64, 67, 70, 86, 95, 100], "linear": 110, "lingua": 67, "link": [8, 15, 51, 52], "linked_corpu": [1, 8], "linked_raw": [1, 8], "linkedin": 55, "linux": 112, "list": [0, 1, 2, 5, 6, 7, 9, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 37, 38, 50, 53, 60, 68, 69, 78, 79, 80, 89, 99, 102, 106], "list1": 27, "list2": 27, "lite": [80, 92], "liter": 53, "literal_ev": 106, "littl": [26, 38, 45, 49, 110], "ll": [50, 51, 53, 100, 112], "llama": [2, 5, 6, 10, 21, 31, 38, 42, 46, 60, 61, 66, 80], "llama3": [46, 112], "llama_cloud_api_kei": 7, "llama_docu": 5, "llama_document_to_parquet": 38, "llama_documents_to_parquet": [4, 5], "llama_gen_queri": [1, 8, 47, 48, 49, 58], "llama_index": [1, 4, 33, 38, 44, 45, 46, 47, 48, 49, 57, 59, 68, 69, 96, 112], "llama_index_chunk": [0, 1, 31, 33, 47, 49], "llama_index_chunk_pur": [1, 2], "llama_index_gen_gt": [1, 8, 44, 47, 49], "llama_index_generate_bas": [8, 9, 12], "llama_index_llm": [0, 17, 18, 25, 57, 59, 60, 61, 62, 87, 95, 97, 98, 99, 108, 110, 112], "llama_index_query_evolv": [1, 8, 45], "llama_pars": [1, 7, 41, 42, 43], "llama_parse_pur": [1, 7], "llama_text_node_to_parquet": [4, 5, 38], "llamaindex": [7, 38, 45, 46, 48, 57, 60, 62, 65, 72, 73, 74, 87, 110], "llamaindexcompressor": [18, 21], "llamaindexllm": [18, 19], "llamapars": [0, 1], "llm": [0, 6, 9, 10, 11, 12, 17, 18, 19, 21, 23, 34, 35, 38, 39, 44, 45, 47, 48, 49, 52, 55, 56, 59, 62, 67, 68, 69, 70, 80, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 108, 110, 113], "llm evalu": 59, "llm infer": 62, "llm metric": [52, 109, 112], "llm_lingua": [21, 66], "llm_name": 21, "llmlingua": 66, "llmlingua_pur": [18, 21], "load": [0, 5, 15, 29, 35, 38, 50, 56], "load_bm25_corpu": [18, 27], "load_chroma_collect": [18, 27], "load_data": 38, "load_dotenv": 56, "load_summary_fil": [0, 29], "load_yaml": [1, 14], "loader": [38, 40, 42], "local": [38, 55, 57, 87, 105, 113], "local model": 57, "local_model": 6, "locat": [56, 110], "log": [56, 60], "log2": 53, "log_cli": 56, "log_cli_level": 56, "logarithm": 53, "logarithmic": 53, "logic": 52, "logprob": 61, "long": [67, 95, 107, 110], "long context reord": 94, "long_context_reord": [0, 18, 94], "longcontextreord": [18, 25], "longer": [6, 58], "longest": 17, "longllmlingua": [0, 18, 66], "look": [26, 27, 31, 35, 42, 47, 49, 53, 54, 101, 102, 103, 106, 110], "loop": [29, 111], "lost in the middl": 94, "lot": [35, 46, 108, 113], "low": 10, "lower": [29, 46, 53, 67, 71, 75, 105, 112], "lowercas": [32, 33, 40], "m": [23, 56, 80, 88], "m3": 57, "mac": [56, 112], "made": [45, 46, 54, 110, 113], "magic": 110, "mai": [53, 111, 112], "main": [34, 110], "major": 57, "make": [0, 6, 8, 27, 29, 34, 35, 37, 48, 49, 55, 56, 60, 62, 67, 68, 69, 93, 94, 95, 96, 108, 110, 113], "make_basic_gen_gt": [8, 11, 44, 47, 49], "make_batch": [0, 29], "make_combin": [0, 29], "make_concise_gen_gt": [8, 11, 44, 47, 49], "make_gen_gt_llama_index": [8, 11], "make_gen_gt_openai": [8, 11], "make_generator_callable_param": [0, 18, 25], "make_generator_inst": [16, 17], "make_llm": [18, 21], "make_metadata_list": [1, 2], "make_node_lin": [0, 30], "make_qa_with_existing_qa": [4, 6, 38], "make_retrieval_callable_param": [18, 26], "make_retrieval_gt_cont": [1, 8, 47, 49], "make_single_content_qa": [4, 6, 38, 58], "make_trial_summary_md": [0, 30], "maker": [19, 25, 93, 96, 108, 110], "malayalam": 31, "malfunct": 113, "manag": [56, 106], "mani": [45, 53, 60, 62, 68, 69, 99, 108], "manual": 113, "map": [0, 1, 8, 9, 10, 11, 12, 15, 17, 23, 31, 46, 47], "marco": [23, 80, 88], "margin": 52, "markdown": [29, 41, 43, 50], "marker": [55, 56, 110], "markov": 108, "master": 17, "match": [17, 35, 52], "matter": 110, "max": [10, 27, 61, 102], "max_length": 88, "max_ngram_ord": 17, "max_retri": [0, 6, 30], "max_token": [0, 30, 57, 60, 61, 62, 68, 69, 97, 98, 99, 100], "max_token_s": 19, "maximum": [0, 6, 17, 62, 88], "md": 38, "me": [93, 94, 95, 96, 108, 110], "mean": [0, 6, 10, 17, 21, 22, 23, 27, 29, 35, 38, 44, 45, 52, 54, 62, 70, 101, 102, 107, 108, 111, 112], "measur": [0, 52, 54, 95, 100, 104], "measure_spe": [0, 30], "mechan": 111, "med": 84, "meet": 52, "meger": 110, "member": [35, 48], "memori": [77, 78, 79, 80, 85, 88, 112], "mention": [50, 51], "merced": 99, "merg": [43, 69, 110, 111], "messag": [0, 9, 12, 23, 40, 45], "messagerol": 45, "messages_to_prompt": 0, "messagestoprompttyp": 0, "metad": 14, "metadata": [0, 2, 9, 10, 11, 12, 14, 15, 23, 31, 72, 90], "metadata_list": 2, "meteor": [16, 17, 59, 95, 106, 109, 110, 112], "method": [0, 2, 5, 6, 7, 15, 17, 27, 28, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 52, 56, 59, 95, 96, 100, 101, 102, 104, 106, 108, 109, 112], "metric": [0, 16, 19, 21, 25, 26, 27, 28, 35, 59, 64, 67, 70, 86, 95, 100, 104, 106, 107, 109, 110, 111, 112], "metric_input": [16, 17, 19, 21, 25, 26, 27], "metric_nam": [52, 59], "metricinput": [0, 16, 17, 19, 21, 25, 26, 27, 30], "mexican": 48, "might": [17, 37, 56, 61, 108, 113], "min": [27, 102], "mind": [106, 113], "mini": [10, 11, 46, 48], "minilm": [23, 80, 88], "minimum": [27, 99, 102, 113], "mip": 105, "miss": 112, "mistak": [46, 112, 113], "mistral": [57, 62, 101], "mistralai": [57, 62, 101], "mix": 111, "mixedbread": [23, 86], "mixedbread rerank": 83, "mixedbreadai": [0, 18, 83], "mixedbreadai_rerank": 83, "mixedbreadai_rerank_pur": [18, 23], "mixedbreadairerank": [18, 23], "mjpost": 17, "mm": [27, 72, 102, 104], "mmarco": 84, "mock": [0, 57], "mockembed": 0, "mockembeddingrandom": [0, 30], "mockllm": 57, "modal": 35, "mode": [0, 20, 64, 65], "model": [0, 6, 9, 10, 11, 12, 15, 17, 23, 25, 27, 30, 35, 38, 43, 46, 47, 48, 51, 52, 53, 55, 59, 60, 61, 62, 64, 67, 68, 69, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 87, 88, 89, 91, 94, 95, 97, 98, 99, 101, 105, 107, 108, 110, 111, 112, 113], "model_computed_field": [0, 8, 9, 10, 11, 12, 15, 18, 23, 30], "model_config": [0, 8, 9, 10, 11, 12, 15, 18, 23, 30], "model_field": [0, 8, 9, 10, 11, 12, 15, 18, 23, 30], "model_nam": [0, 9, 10, 11, 12, 21, 23, 29, 57, 66, 77, 78, 79, 83, 84, 88], "model_post_init": [0, 30], "modelid": 0, "modeling_enc_t5": [18, 23], "modest": 53, "modifi": [35, 42, 113], "modul": [30, 32, 33, 39, 40, 41, 49, 55, 63, 64, 70, 107, 109, 110, 112, 113], "modular": [107, 111], "modular rag": 110, "module_dict": 28, "module_nam": [0, 8], "module_param": [0, 2, 7, 8, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "module_summary_df": 27, "module_typ": [0, 26, 28, 31, 32, 33, 39, 40, 41, 42, 43, 49, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112], "module_type_exist": [0, 28], "monot5": [0, 18, 56, 86], "monot5_run_model": [18, 23], "more": [6, 12, 27, 32, 33, 35, 37, 40, 41, 45, 47, 48, 49, 52, 53, 59, 62, 67, 82, 86, 87, 95, 96, 99, 100, 101, 107, 109, 111, 113], "most": [6, 38, 49, 53, 57, 59, 86, 96, 101, 104, 105, 106, 108, 113], "mount": 56, "mpnet": [17, 57], "mrr": 17, "msmarco": [23, 84], "mt5": 84, "much": [45, 46, 110, 112], "multi": [8, 12, 35, 48, 99, 100], "multi query expans": 98, "multi_context": [6, 37], "multi_query_expans": [0, 18, 57, 98], "multilingu": [76, 101], "multipl": [8, 25, 26, 27, 42, 98, 99, 102, 103, 106, 107, 108, 110, 111], "multiqueryexpans": [18, 26], "multiqueryretriev": 98, "multitask": 57, "must": [0, 5, 6, 8, 15, 20, 21, 22, 23, 25, 27, 29, 32, 33, 35, 38, 48, 49, 53, 56, 57, 62, 64, 72, 84, 90, 93, 94, 96, 99, 102, 106, 110, 111, 112, 113], "mxbai": [23, 83], "mxbai_api_kei": 83, "n": [8, 17, 23, 31, 39, 47, 49, 52, 56, 61, 90, 93, 94, 95, 96, 100, 110], "n_thread": 17, "naiv": [45, 110], "name": [0, 8, 9, 10, 11, 12, 15, 16, 17, 23, 26, 27, 29, 48, 50, 59, 61, 62, 64, 66, 67, 70, 73, 74, 86, 87, 95, 100, 101, 102, 103, 107, 113], "natur": [47, 52, 85], "naver": 39, "ndarrai": 29, "necessari": [38, 56, 100], "need": [0, 2, 6, 31, 34, 35, 37, 38, 43, 45, 49, 50, 51, 53, 56, 67, 76, 81, 83, 92, 95, 99, 101, 105, 106, 107, 110, 112, 113], "nest": 29, "nest_asyncio": [50, 113], "nested_list": 29, "never": 55, "new": [0, 8, 9, 34, 35, 45, 48, 49, 51, 56, 57, 62, 106, 109, 110, 113], "new_corpu": 8, "new_corpus_df": 49, "new_gen_gt": 11, "new_qa": 49, "newjeans1": 35, "newjeans2": 35, "newlin": 17, "next": [54, 64, 76, 81, 83, 92, 95, 110], "next_id": 35, "nlg": 52, "nltk": 56, "node": [0, 5, 15, 30, 35, 38, 54, 57, 60, 63, 97, 98, 99, 102, 109], "node_dict": 28, "node_dir": [0, 27], "node_lin": [30, 64, 67, 70, 86, 95, 100, 106, 107, 109, 110], "node_line_1": [57, 106, 110], "node_line_2": [106, 110], "node_line_3": 106, "node_line_dict": 0, "node_line_dir": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "node_line_nam": [57, 59, 64, 67, 70, 86, 95, 100, 104, 106, 107, 109, 110], "node_nam": 0, "node_param": [0, 28], "node_pars": [33, 38], "node_summary_df": 0, "node_typ": [0, 15, 28, 57, 59, 64, 67, 70, 86, 95, 100, 104, 106, 109, 110, 112], "node_view": [0, 30], "nodepars": 2, "nodewithscor": 23, "non": 43, "none": [0, 2, 5, 6, 8, 15, 17, 18, 23, 28, 29, 50, 59, 67, 95], "nonetyp": [0, 15], "normal": [27, 79, 102], "normalize_dbsf": [18, 27], "normalize_mean": 109, "normalize_method": [27, 102, 104], "normalize_mm": [18, 27], "normalize_str": [0, 29], "normalize_tmm": [18, 27], "normalize_unicod": [0, 29], "normalize_z": [18, 27], "norwegian": 31, "notabl": 94, "note": 64, "nousresearch": [21, 66], "now": [35, 37, 38, 47, 49, 62, 105, 106, 108, 109, 110, 112, 113], "np": 29, "ntabl": 39, "nuevo": 48, "nullabl": 50, "num_passag": [20, 65], "num_quest": [6, 38], "num_work": 0, "number": [0, 6, 23, 27, 29, 38, 42, 50, 53, 54, 62, 64, 65, 67, 70, 99, 100, 107, 111, 113], "numer": 55, "o": 56, "object": [0, 8, 9, 10, 11, 12, 15, 17, 23, 28, 38, 50, 60, 68, 69, 72, 90, 97, 98, 99], "observ": [51, 94], "obtain": 86, "occur": [35, 61, 106, 110, 112], "ocr": [39, 43], "offer": 102, "offici": [17, 29], "often": [38, 48, 101, 112], "ok": 50, "okai": [35, 45], "okt": 101, "ollama": [46, 57], "onc": [35, 45, 60, 62, 68, 69, 76, 81, 102, 107, 110, 113], "one": [0, 2, 6, 8, 12, 21, 22, 23, 25, 29, 31, 35, 38, 47, 48, 49, 53, 72, 74, 75, 95, 106, 107, 108, 111, 112], "one_hop_quest": [8, 12], "onli": [6, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 42, 47, 48, 54, 56, 60, 68, 69, 72, 95, 96, 107, 108, 110, 113], "oom": [87, 112], "open": [85, 105, 108, 112], "openai": [6, 9, 10, 11, 12, 17, 20, 25, 26, 38, 45, 46, 47, 48, 49, 57, 59, 60, 64, 67, 68, 69, 73, 74, 87, 95, 97, 98, 99, 100, 104, 105, 106, 108, 110], "openai_api_kei": [56, 61, 106, 112], "openai_embed_3_larg": [6, 38, 57], "openai_embed_3_smal": 57, "openai_gen_gt": [1, 8, 44], "openai_gen_queri": [1, 8, 48], "openai_llm": [0, 17, 18, 95], "openai_query_evolv": [1, 8, 45], "openai_truncate_by_token": [0, 29], "openaiembed": [27, 37], "openailik": [57, 112], "openaillm": [18, 19], "openapi": 50, "openvino": [0, 18, 86], "openvino rerank": 85, "openvino_rerank": 85, "openvino_run_model": [18, 23], "openvinorerank": [18, 23, 85], "oper": [35, 67, 104, 111], "oppos": 64, "opt": 62, "optim": [15, 31, 34, 35, 37, 42, 46, 47, 55, 61, 62, 67, 73, 74, 85, 101, 102, 103, 106, 107, 109, 110, 111], "optimize_hybrid": [18, 27], "option": [0, 5, 6, 17, 31, 42, 50, 51, 56, 59, 64, 66, 67, 70, 82, 83, 84, 86, 89, 91, 95, 100, 102, 103, 106, 108, 109, 111, 113], "order": [15, 17, 52, 53], "org": 55, "organ": 107, "orient": 52, "origin": [0, 9, 27, 29, 35, 45, 72, 91], "original_queri": 45, "original_str": 31, "original_text": 14, "other": [15, 17, 27, 29, 35, 45, 52, 53, 56, 60, 67, 68, 69, 70, 85, 87, 97, 98, 99, 102, 106, 107, 108, 110, 113], "otherwis": 42, "our": [27, 31, 35, 38, 39, 42, 55, 56, 63, 71, 75, 97, 98, 99, 108, 110, 112, 113], "out": [35, 49, 53, 55, 56, 57, 59, 62, 70, 71, 72, 73, 74, 75, 106, 107, 110, 112, 113], "outcom": [95, 100], "outperform": 52, "output": [0, 6, 9, 11, 15, 37, 48, 52, 59, 66, 91, 95, 100, 112], "output_cl": 19, "output_filepath": [5, 6, 38], "output_pars": 0, "output_path": [15, 113], "over": [62, 111], "overal": [52, 86, 108], "overfit": 113, "overlap": 54, "overrid": 17, "overwrit": [5, 6], "own": [6, 35, 36, 39, 45, 55, 70, 97, 98, 99, 108, 111, 113], "owner": 80, "p4dyxfmsa": [55, 110], "packag": [30, 56, 57, 58, 112], "page": [7, 31, 35, 39, 42, 43, 47, 50, 56, 87], "paid": 43, "pair": [6, 29, 34, 38, 52], "panda": [28, 29, 37, 38], "paper": [17, 48, 52, 91, 97, 99, 110], "paradigm": [52, 110], "parallel": [27, 62, 80], "param": [0, 2, 10, 17, 25, 26, 62, 107], "param_list": [18, 21], "paramet": [0, 5, 6, 7, 8, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 38, 41, 45, 50, 51, 52, 57, 106, 107, 108, 111, 112, 113], "parent": 15, "parquet": [0, 5, 6, 8, 31, 35, 37, 38, 42, 47, 49, 56, 107, 112, 113], "pars": [0, 1, 2, 8, 31, 32, 33, 34, 35, 39, 106], "parse_all_fil": [1, 7], "parse_config": [31, 42], "parse_inst": 7, "parse_method": [7, 32, 40, 42, 43, 49], "parse_modul": 40, "parse_output": [4, 6], "parse_project_dir": 49, "parsed_data_path": [0, 31], "parsed_result": 2, "parser": [30, 31, 49], "parser_nod": [1, 7], "part": [34, 53, 111], "pass": [0, 6, 25, 37, 60, 68, 69, 97, 98, 99, 110], "pass_compressor": [0, 18], "pass_passage_augment": [0, 18], "pass_passage_filt": [0, 18], "pass_query_expans": [0, 18], "pass_rerank": [0, 18], "pass_valu": 110, "passag": [8, 10, 12, 20, 21, 22, 23, 27, 31, 35, 45, 50, 53, 54, 56, 65, 67, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 97, 101, 102, 103, 105, 110], "passage augment": [64, 65], "passage compressor": [67, 68, 69], "passage compressor metr": 54, "passage filt": [70, 71, 72, 73, 74, 75], "passage_augment": 64, "passage_depend": [1, 8, 46], "passage_dependency_filter_llama_index": [8, 10, 46], "passage_dependency_filter_openai": [8, 10, 46], "passage_filt": 70, "passage_id": 27, "passage_rerank": 110, "passage_str": 6, "passageaugment": [0, 18], "passagecompressor": [0, 18], "passagefilt": [0, 18], "passagererank": [0, 18], "passcompressor": [18, 21], "passpassageaugment": [18, 20], "passpassagefilt": [18, 22], "passqueryexpans": [18, 26], "passrerank": [18, 23], "path": [2, 6, 7, 8, 14, 15, 22, 23, 25, 26, 27, 28, 29, 31, 37, 38, 42, 50, 56, 80, 85, 101, 113], "pattern": 42, "payload": 50, "pd": [0, 5, 6, 23, 28, 29, 37, 38], "pdf": [42, 49], "pdfminer": [40, 42, 49], "pdfplumber": [40, 42, 43, 49], "penalti": 17, "peopl": 45, "per": [38, 42, 54, 74, 75, 109], "percentag": 53, "percentil": 70, "percentile cutoff": 71, "percentile_cutoff": [0, 18, 71], "percentilecutoff": [18, 22], "perfect": [46, 110], "perform": [8, 17, 26, 31, 35, 42, 43, 46, 48, 49, 51, 53, 54, 55, 59, 61, 64, 67, 70, 85, 86, 94, 95, 100, 108, 110], "persistentcli": 38, "perspect": 98, "pertin": 86, "phase": [86, 100], "phrase": 11, "piec": 26, "pip": [50, 55, 56, 101, 112], "pipelin": [15, 34, 47, 49, 50, 51, 55, 56, 80, 102, 107, 108, 110], "pipeline_dict": 113, "pkl": 107, "place": 48, "placehold": [6, 38], "plan": [35, 59, 110], "pleas": [6, 17, 23, 27, 35, 49, 53, 56, 57, 59, 62, 66, 91, 95, 100, 101, 106, 110, 111, 112, 113], "plu": [6, 27, 35, 37, 56, 57, 62, 72, 73, 74, 90, 95, 99, 101, 105, 106], "point": 56, "polish": 31, "pop": [29, 35], "pop_param": [0, 29], "poppler": 56, "popular": [52, 101], "port": [0, 15, 50, 113], "porter": 17, "porter_stemm": 27, "portugues": 31, "posit": [53, 94], "possibl": [108, 110, 112], "post": [15, 110], "post_retrieve_node_lin": [59, 95], "potenti": [17, 67], "power": [46, 76, 81, 92, 110], "ppv": 53, "pre": [45, 46, 56, 110, 113], "pre_retrieve_node_lin": 100, "precis": [17, 52, 67, 97, 104], "pred": [17, 53], "predefin": [59, 67, 86], "predict": [17, 53], "prefix": 91, "prefix_prompt": [23, 91], "preprocess": [0, 30], "present": [52, 56], "pretti": 110, "prev": 64, "prev next augment": 65, "prev_id": 35, "prev_next_augment": [0, 18, 35, 64, 65], "prev_next_augmenter_pur": [18, 20], "prevent": [2, 11, 31, 61, 87, 110], "preview": 17, "previou": [0, 19, 20, 21, 22, 23, 25, 26, 27, 52, 58, 75, 108, 110], "previous_result": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "prevnextpassageaugment": [18, 20], "primari": [64, 70, 86, 89], "primarili": 43, "primit": 38, "print": [0, 23, 50], "prior": [38, 67], "priorit": 86, "privat": 0, "prob": 60, "probabl": [61, 62, 108], "problem": [38, 49, 52, 110, 112], "process": [6, 17, 23, 27, 29, 34, 38, 51, 55, 59, 62, 67, 85, 86, 89, 95, 98, 100, 104, 105, 107, 108, 111, 113], "process_batch": [0, 29], "processed_data": [5, 6], "prod": 56, "produc": 52, "product": [56, 113], "profil": 0, "profile_nam": [0, 30], "programmat": 0, "project": [15, 50, 55, 56], "project_dir": [0, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 42, 50, 51, 56, 113], "project_directori": 113, "prompt": [0, 1, 6, 8, 17, 19, 21, 23, 25, 28, 45, 60, 62, 87, 91, 93, 94, 96, 97, 98, 108, 110], "prompt1": [6, 38], "prompt2": [6, 38], "prompt3": 38, "prompt_mak": [95, 108, 110], "promptmak": [0, 18], "prompts_ratio": [6, 38], "promt": 45, "proper": [6, 61], "properli": [29, 56, 101], "properti": [8, 50], "propos": 110, "protected_namespac": 0, "provid": [38, 39, 50, 51, 52, 60, 68, 69, 84, 91, 113], "pseudo": 61, "pt": 84, "ptt5": 84, "publicli": 15, "punctuat": 29, "punkt_tab": 56, "punktsentencetoken": 31, "pure": [0, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], "purpos": [50, 64, 70, 86, 100, 111], "push": 112, "put": [35, 38, 66, 112], "pwd": 56, "py": 17, "pyarrow": 112, "pydant": [0, 9, 10, 11, 12, 15, 23], "pydantic_model_": 0, "pydantic_program_mod": 0, "pydanticprogrammod": 0, "pymupdf": 40, "pyopenssl": 56, "pypdf": 40, "pypdfdirectori": 40, "pypdfdirectoryload": 40, "pypdfium2": 40, "pypi": 55, "pytest": 56, "python": [0, 29, 32, 35, 38, 56, 80, 93, 106, 112], "python3": 56, "pythoncodetextsplitt": 32, "pytorch": 56, "q": 38, "qa": [0, 1, 6, 25, 26, 27, 31, 34, 44, 45, 46, 48, 56, 58, 107, 113], "qa_cnt": 0, "qa_creation_func": [6, 38], "qa_data": 28, "qa_data_path": [0, 56, 113], "qa_dataset": 6, "qa_df": [8, 29, 37, 38, 44, 46, 48], "qa_save_path": 8, "qa_test": 113, "qa_valid": 56, "qacreat": [1, 4, 37, 38, 58], "qid": [8, 48], "qualiti": [52, 86, 113], "quantit": 111, "quantiz": 112, "queri": [0, 1, 6, 8, 9, 15, 17, 21, 22, 23, 25, 26, 27, 28, 29, 40, 49, 50, 51, 58, 64, 67, 68, 70, 73, 74, 75, 82, 83, 84, 86, 87, 89, 92, 93, 94, 95, 96, 97, 104, 105, 108, 110], "query decompos": 99, "query expans": [97, 98, 99, 100], "query_bundl": 23, "query_decompos": [0, 18, 57, 99, 100], "query_embed": [23, 27], "query_evolve_openai_bas": [8, 9], "query_expans": [15, 26, 95, 100, 108], "query_gen_openai_bas": [8, 12], "query_wrapper_prompt": 0, "querybundl": 23, "querydecompos": [18, 26], "queryexpans": [0, 18], "queryrequest": [0, 15], "question": [6, 8, 10, 12, 23, 26, 34, 35, 38, 44, 45, 52, 55, 66, 89, 91, 93, 94, 95, 96, 99, 110, 113], "question_num": 6, "question_num_per_cont": [6, 38], "quickli": 67, "quit": [52, 59], "r": 56, "rag": [6, 10, 31, 34, 35, 37, 38, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112], "rag api": 50, "rag dataset": [35, 37, 38], "rag deploi": [50, 51], "rag evalu": [35, 37, 38, 52, 53, 54, 59, 109, 112], "rag llm": 57, "rag metr": [52, 53, 54, 109, 112], "rag model": 57, "rag optim": [55, 106, 108, 111], "rag perform": 108, "rag structur": 111, "rag tutori": 113, "rag web": 51, "raga": [1, 4, 36, 45, 53], "rais": 17, "raise_except": 6, "raise_for_statu": 50, "ran": 107, "random": [0, 6, 30, 62], "random_single_hop": [1, 8, 47, 49, 58], "random_st": [0, 6, 8], "randomli": [6, 38, 47], "rang": [47, 102, 103], "range_single_hop": [1, 8, 47], "rank": [17, 27, 80, 101, 103], "rank_zephyr_7b_v1_ful": 80, "rankgpt": [0, 18, 86], "rankgpt_rerank_prompt": [18, 23, 87], "rankgptrerank": 23, "rate": [53, 112], "ratio": [6, 38], "ratio_dict": 38, "raw": [1, 8, 34, 35, 39, 40, 41, 42, 43, 47, 49, 55, 58], "raw_df": [0, 8], "raw_end_idx": 8, "raw_id": 8, "raw_start_idx": 8, "re": [73, 74, 80, 110], "read": [0, 55, 93, 94, 95, 96, 106, 110, 112], "read_parquet": [37, 38], "readi": [38, 56, 108, 113], "real": [35, 38, 51, 61, 110], "realist": 45, "realli": [27, 35, 45, 62, 108, 110], "reason": [6, 37], "reasoning_evolve_raga": [8, 9, 45], "reassess": 86, "recal": [17, 52, 67, 104], "receiv": 51, "recenc": [0, 18, 70], "recency_filt": 72, "recencyfilt": [18, 22], "reciproc": [17, 27, 103, 109], "recogn": 112, "recognit": 85, "recommend": [17, 25, 45, 48, 49, 56, 61, 95, 101, 107, 110, 112, 113], "reconstruct": 29, "reconstruct_list": [0, 29], "record": 107, "recurs": [29, 69], "recursivecharact": 32, "recursivecharactertextsplitt": 38, "reduc": [53, 67], "reduct": 67, "refer": [6, 49, 52, 53, 59, 95, 100, 111, 113], "refin": [0, 18, 67, 86], "reflect": 101, "region": 0, "region_nam": [0, 30], "rel": 17, "relat": [35, 52, 53, 60, 68, 69, 70, 91, 97, 98, 99], "relationship": 14, "releas": [36, 48], "relev": [17, 23, 35, 38, 53, 59, 67, 83, 84, 86, 87, 97, 100, 104], "remain": 111, "remeb": 38, "rememb": [53, 56, 108], "remind": 113, "remov": [27, 28, 29, 38, 46], "reorder": [86, 95], "repeat": 6, "replac": [0, 8, 9, 10, 11, 12, 15, 21, 23, 29, 45, 50, 51, 95], "replace_valu": 29, "replace_value_in_dict": [0, 29], "repo": [35, 55, 101, 113], "repositori": 56, "repres": [105, 108], "request": [0, 15, 50, 110], "request_timeout": 112, "requir": [0, 6, 9, 10, 11, 12, 15, 17, 23, 42, 48, 50, 52, 56, 60, 67, 68, 69, 83, 84, 97, 98, 99, 102, 103, 111], "rerank": [21, 22, 23, 35, 56, 67, 72, 76, 81, 84, 86, 87, 89, 91, 92, 110], "reranker_recal": 110, "reset": [35, 46, 112], "reset_index": [46, 47, 49, 112], "resid": 111, "resolv": 112, "resourc": 108, "respect": 54, "respond": 100, "respons": [0, 8, 9, 10, 11, 12, 15, 45, 50, 51, 67, 68, 100], "rest": 87, "restart_evalu": 113, "restart_tri": [0, 30, 113], "result": [0, 2, 6, 8, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 29, 32, 33, 38, 41, 43, 46, 48, 49, 50, 52, 53, 54, 55, 61, 64, 75, 86, 95, 100, 102, 104, 107, 109, 110, 112], "result_column": [0, 15, 50], "result_df": [19, 21, 25, 27], "result_en_qa": 46, "result_qa": [44, 48], "result_to_datafram": [0, 29], "result_typ": [41, 43], "retreived_cont": [93, 94, 96], "retri": [0, 6, 108], "retriev": [0, 2, 6, 10, 15, 18, 21, 22, 23, 26, 30, 31, 35, 44, 46, 50, 57, 64, 65, 66, 67, 69, 76, 80, 81, 86, 91, 92, 95, 96, 97, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111], "retrieval metr": 53, "retrieval_cont": [0, 30], "retrieval_context": 17, "retrieval_f1": [16, 17, 22, 23, 26, 64, 70, 86, 100, 104], "retrieval_func": 26, "retrieval_gt": [0, 8, 12, 28, 31, 38, 48, 49], "retrieval_gt_cont": [0, 8, 28], "retrieval_map": [16, 17], "retrieval_modul": [26, 100], "retrieval_mrr": [16, 17], "retrieval_ndcg": [16, 17], "retrieval_param": 26, "retrieval_precis": [16, 17, 22, 23, 64, 70, 86, 100, 104, 109], "retrieval_recal": [16, 17, 22, 23, 26, 64, 70, 86, 100, 104, 109, 110], "retrieval_result": 53, "retrieval_token_f1": [16, 17, 67], "retrieval_token_precis": [16, 17, 67], "retrieval_token_recal": [16, 17, 67], "retrieve metr": 53, "retrieve_node_lin": [64, 67, 70, 86, 104], "retrieve_scor": [20, 21, 22, 23, 27], "retrieved_cont": [0, 20, 21, 22, 23, 27, 28, 93, 94, 95, 96, 110], "retrieved_id": [0, 20, 21, 22, 23, 27, 28], "retrieved_passag": [0, 15, 50], "retrievedpassag": [0, 15], "return": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 43, 45, 50, 60, 61, 70, 72, 99, 105, 106], "return_index": 0, "revers": [20, 29, 71, 75], "right": [10, 38, 57, 110, 113], "rl_polici": 110, "rm": 56, "roadmap": [55, 107], "roberta": 57, "robust": 48, "role": 45, "root": 56, "roug": [16, 17, 59, 95, 106, 109, 110, 112], "rouge1": 17, "rouge2": 17, "rouge_typ": 17, "rougel": 17, "rougelsum": 17, "row": [9, 10, 11, 12, 27, 28, 29, 35, 45, 107], "rpm": 81, "rr": [17, 53], "rrf": [27, 102, 104], "rrf_calcul": [18, 27], "rrf_k": [27, 100, 103, 106], "rrf_pure": [18, 27], "rubert": 57, "rude": 45, "run": [0, 1, 8, 15, 18, 28, 30, 47, 55, 67, 71, 72, 73, 74, 75, 106, 107, 108], "run_api": [50, 113], "run_api_serv": [0, 15, 50, 113], "run_chunk": [1, 2], "run_config": 6, "run_evalu": [0, 18, 27, 28], "run_generator_nod": [18, 19], "run_nod": [0, 28], "run_node_lin": [0, 30], "run_pars": [1, 7], "run_passage_augmenter_nod": [18, 20], "run_passage_compressor_nod": [18, 21], "run_passage_filter_nod": [18, 22], "run_passage_reranker_nod": [18, 23], "run_prompt_maker_nod": [18, 25], "run_queri": 50, "run_query_embedding_batch": [18, 27], "run_query_expansion_nod": [18, 26], "run_retrieval_nod": [18, 27], "run_web": [0, 15, 51, 113], "runner": [0, 15, 50, 113], "runrespons": [0, 15], "runtim": 85, "russian": 31, "sacrebleu": 17, "safe": 29, "said": 52, "same": [0, 26, 27, 29, 31, 42, 45, 51, 53, 64, 87, 99, 107, 108, 111, 113], "sampl": [0, 1, 6, 31, 38, 42, 48, 49, 53, 58, 62, 112, 113], "sample_config": [56, 113], "samplingparam": 62, "satisfactori": [38, 49], "satisfi": [23, 92], "save": [5, 6, 8, 10, 15, 19, 31, 35, 39, 41, 42, 106, 113], "save_parquet_saf": [0, 29], "save_path": 8, "scalabl": 38, "scale": [27, 67, 102, 109], "schema": [0, 1, 17, 27, 30, 34, 40, 44, 46, 48, 49, 50, 58], "score": [10, 17, 23, 27, 29, 54, 67, 71, 74, 75, 101, 102, 103, 104], "script": [29, 35], "search": [29, 80, 100, 101, 105], "search_str": 14, "second": [0, 48, 54, 107, 110], "secret": [0, 106], "section": [31, 42, 47, 106, 109, 111, 113], "secur": 112, "see": [31, 34, 42, 49, 53, 54, 57, 92, 106, 107, 108, 110, 112], "seed": 6, "seek": [48, 52], "segment": 52, "select": [0, 6, 8, 19, 21, 22, 23, 25, 26, 27, 38, 46, 48, 49, 101, 107, 108, 109, 110, 111], "select_best": [0, 30], "select_best_averag": [0, 30], "select_best_rr": [0, 30], "select_bm25_token": [18, 27], "select_normalize_mean": [0, 30], "select_top_k": [0, 29], "self": [29, 99], "sem": 17, "sem_scor": [16, 17, 95, 106], "semant": [27, 52, 59, 101, 102], "semantic_id": 27, "semantic_llama_index": [31, 33], "semantic_scor": 27, "semantic_summari": 27, "semantic_summary_df": 27, "semantic_theoretical_min_valu": [27, 102], "semanticdoubl": 31, "semanticdoublemerg": 33, "semscor": 52, "send": [0, 15, 76, 81], "sensit": 53, "sent": 50, "sentenc": [17, 23, 46, 49, 52, 57, 73, 74, 86, 96, 101], "sentence transform": 88, "sentence_splitt": [31, 49], "sentence_splitter_modul": 31, "sentence_transform": [0, 18], "sentence_transformer_rerank": 88, "sentence_transformer_run_model": [18, 23], "sentencetransformerrerank": [18, 23], "sentencetransformerstoken": 32, "sentencewindow": [31, 33, 49], "sequenc": [0, 23, 111], "seri": 29, "serializeasani": 23, "seriou": [112, 113], "serv": [59, 67, 86, 91, 95, 100, 104, 111], "server": [15, 55, 61, 105, 112], "server_nam": [15, 51], "server_port": [15, 51], "session": [0, 23], "set": [2, 6, 7, 8, 10, 15, 25, 27, 29, 38, 39, 40, 41, 55, 56, 57, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 86, 87, 91, 92, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 110, 111, 112], "set_initial_st": [0, 30], "set_page_config": [0, 30], "set_page_head": [0, 30], "setup": 108, "sever": [52, 56, 61, 113], "shape": [17, 29], "share": [15, 51, 113], "shareabl": 15, "shell": 56, "short": [44, 110], "shot": [91, 97, 99], "should": [0, 6, 7, 9, 10, 11, 12, 15, 17, 23, 31, 40, 52, 57, 61, 72, 112], "show": [48, 107, 108, 110], "shown": 49, "side": 61, "sigma": [27, 102], "signal": 91, "significantli": [67, 100, 111], "similar": [17, 52, 59, 64, 70, 71, 75, 101, 102, 103, 105, 108], "similarity percentile cutoff": 73, "similarity_percentile_cutoff": [0, 18, 73], "similarity_threshold_cutoff": [0, 18, 70, 74], "similaritypercentilecutoff": [18, 22], "similaritythresholdcutoff": [18, 22], "simpl": [1, 4, 11, 37, 46, 52, 56, 59, 101, 110], "simple_openai": 56, "simpledirectoryread": 38, "simpler": 45, "simpli": [57, 90, 113], "simul": 111, "sinc": [17, 36, 38, 46, 49, 51, 53, 59, 61, 87, 93, 95, 96], "singl": [0, 6, 7, 8, 15, 29, 35, 38, 47, 55, 99, 106, 107, 110, 111], "single_token_f1": [16, 17], "situat": 102, "six": 54, "size": [0, 2, 6, 7, 17, 49, 61, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 102, 105, 112], "sk": 56, "skip": [21, 22, 23, 25, 95], "skip_valid": 0, "slice_tensor": [18, 23], "slice_tokenizer_result": [18, 23], "slovenian": 31, "slow": 62, "slower": [46, 67], "small": [6, 57], "smaller": 53, "smooth": 17, "smooth_method": 17, "smooth_valu": 17, "so": [0, 11, 15, 21, 27, 31, 35, 38, 39, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 62, 64, 67, 70, 71, 72, 73, 74, 75, 86, 95, 99, 100, 103, 106, 107, 108, 110, 113], "softwar": 105, "solut": [38, 49, 110], "some": [14, 27, 35, 45, 46, 47, 52, 54, 56, 57, 61, 76, 81, 102, 108, 112], "someon": [10, 99], "someth": [38, 93, 94, 95, 96, 112], "sometim": [45, 46, 61, 112], "soon": 110, "sort": [29, 90], "sort_by_scor": [0, 18, 20, 29], "sota": 80, "sound": 53, "sourc": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 35, 85, 102, 103, 105], "spanish": 31, "spars": [27, 101], "spearman": 52, "special": [29, 67], "specif": [17, 29, 42, 44, 45, 48, 50, 59, 67, 83, 84, 89, 101, 111, 113], "specifi": [7, 35, 56, 57, 59, 60, 68, 69, 82, 84, 89, 90, 95, 100, 102, 103, 108, 109, 111], "speech": 85, "speed": [0, 59, 62, 67, 86, 95, 100, 104, 106, 111], "speed_threshold": [59, 64, 67, 70, 86, 95, 100, 104, 106, 109, 111], "spice": 99, "split": [17, 31, 43, 107, 111, 113], "split_by_sentence_kiwi": [0, 1, 31], "split_datafram": [0, 29], "split_docu": 38, "split_into_s": 31, "split_summari": 17, "splitter": [32, 33], "squad": 29, "squar": 99, "src": 56, "ss": 72, "stabl": 48, "stage": [56, 91], "standalon": 62, "standard": [0, 52], "start": [15, 29, 35, 36, 50, 56, 94, 113], "start_chunk": [0, 30, 31, 49], "start_end_idx": 31, "start_idx": [0, 2, 15, 50], "start_pars": [0, 30, 42, 49], "start_trial": [0, 30, 113], "starter": [55, 113], "state": [6, 48, 108], "static": [17, 20], "statist": 53, "status_cod": 50, "stem": [52, 101], "stemmer": [17, 101], "step": [8, 23, 31, 42, 43, 47, 56, 86, 110], "still": [108, 110, 112], "stop": 17, "storag": 39, "store": [8, 31, 105], "str": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 38, 43], "straight": 110, "strateg": 111, "strategi": [15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 35, 64, 70, 106, 110, 112], "strategy_dict": [25, 26], "strategy_nam": [0, 25, 26], "strategyqa": 99, "stream": [18, 19, 61], "stream_queri": 50, "streamlit": 113, "string": [0, 6, 16, 27, 28, 29, 31, 35, 38, 50, 91, 95, 106], "strip": 17, "structur": [6, 9, 11, 27, 48, 50, 106, 110, 113], "structured_output": [18, 19], "studi": [94, 101], "sub": 99, "submodul": [1, 4, 30], "subpackag": 30, "subsequ": 17, "subset": 8, "successfulli": [31, 42, 113], "sudo": 112, "suffix": [17, 91], "suffix_prompt": [23, 91], "suggest": [35, 108, 110, 112], "sum": [6, 53], "summar": [52, 67], "summari": [15, 19, 29, 31, 42, 44, 50, 53, 108, 113], "summary_df": [15, 27, 29], "summary_df_to_yaml": [0, 15], "summary_path": 29, "super": [45, 48, 80], "support": [10, 11, 17, 27, 30, 35, 37, 38, 46, 47, 48, 53, 55, 56, 60, 61, 63, 68, 69, 73, 74, 76, 80, 81, 85, 102, 106, 110, 111], "sure": [56, 113], "survei": 110, "swap": 111, "swedish": 31, "synonym": 52, "synthet": [38, 49], "system": [0, 10, 35, 45, 46, 56, 59, 60, 67, 68, 69, 86, 95, 104, 111], "system_prompt": [0, 11, 45], "t": [6, 10, 25, 29, 35, 37, 38, 42, 45, 47, 50, 51, 53, 55, 56, 95, 99, 102, 110, 112], "tabl": [10, 42], "table_detect": [39, 43], "table_hybrid_pars": [0, 1, 42, 43], "table_param": 43, "table_parse_modul": 43, "tailor": [67, 103, 111], "take": [57, 110], "taken": 29, "target": [6, 21, 29, 56, 66, 110], "target_dict": [0, 29], "target_kei": 29, "target_modul": [27, 100, 102, 106], "target_module_param": [27, 102], "target_node_lin": 110, "target_token": [21, 66], "tart": [18, 23, 56, 84, 86], "task": [29, 52, 59, 85], "tcultmq5": 55, "team": 39, "techniqu": 111, "tecolot": 48, "tell": [93, 94, 95, 96], "temp_client": 27, "temperatur": [0, 30, 37, 38, 46, 57, 59, 60, 61, 62, 68, 69, 87, 97, 98, 99, 100, 108, 112], "temporari": [6, 111], "temporarili": 111, "tensor_parallel_s": 62, "term": [53, 100], "tesseract": 56, "test": [51, 53, 56, 57, 59, 64, 67, 70, 86, 100, 102, 106, 107, 108], "test01": 56, "test_siz": [6, 37], "test_weight_s": [102, 104], "testset": 37, "text": [0, 2, 5, 6, 7, 17, 21, 27, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 50, 57, 59, 60, 62, 66, 68, 69, 88, 91], "text_nod": 5, "text_param": 43, "text_parse_modul": 43, "text_splitt": 32, "textnod": [5, 38], "textsplitt": 2, "textur": 99, "tf": 101, "than": [6, 12, 27, 35, 46, 52, 62, 64, 72, 99, 101, 107, 108, 110, 112], "thei": [38, 48, 52, 67, 106, 110, 111], "them": [25, 26, 27, 29, 35, 41, 53, 69, 108], "theoret": [27, 102], "therefor": [38, 43, 53, 54, 95, 100], "thi": [0, 2, 5, 6, 9, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "thing": [106, 113], "think": [35, 106, 108, 110], "third": [27, 53, 54], "those": [46, 48, 102], "thought": 52, "three": [31, 34, 42, 54, 72, 107, 110], "threshold": [0, 59, 67, 70, 72, 86, 95, 100, 104, 106, 111], "threshold cutoff": 75, "threshold_cutoff": [0, 18, 75], "threshold_datetim": 72, "thresholdcutoff": [18, 22], "through": [55, 85, 95, 100], "thu": 53, "tier": 112, "time": [6, 35, 45, 49, 51, 55, 59, 67, 70, 71, 72, 73, 86, 95, 100, 104, 107, 108, 111, 113], "time_rerank": [0, 18, 90], "timeout": [0, 30, 112], "timererank": [18, 23, 90], "tiny2": 57, "tinybert": [23, 80], "tip": 56, "tmm": [27, 102, 104], "to_list": [0, 29], "to_parquet": [1, 8, 47, 49], "token": [0, 10, 17, 18, 19, 21, 23, 27, 31, 47, 49, 52, 59, 62, 66, 67, 87, 95], "token_false_id": 23, "token_limit": 29, "token_threshold": [59, 95], "token_true_id": 23, "tokenization_enc_t5": [18, 23], "tokenize_ja_sudachipi": [18, 27], "tokenize_ko_kiwi": [18, 27], "tokenize_ko_kkma": [18, 27], "tokenize_ko_okt": [18, 27], "tokenize_porter_stemm": [18, 27], "tokenize_spac": [18, 27], "tokenizer_output": 23, "tokentextsplitt": 38, "too": [6, 45, 76, 81, 107, 108], "took": 107, "tool": 55, "toolkit": 85, "top": [20, 23, 62, 64, 86, 100, 104, 107], "top_k": [6, 20, 23, 26, 27, 29, 38, 64, 70, 86, 100, 102, 103, 104, 106, 109, 110], "top_logprob": 61, "top_n": [18, 23], "top_p": 62, "topic": 52, "topn": 53, "total": 54, "tpm": 81, "track": 35, "trail": [107, 113], "trail_fold": 15, "train": [107, 113], "transform": [0, 23, 57, 62, 86], "translat": [17, 52], "treat": [35, 106], "tree": 67, "tree summar": 69, "tree_summar": [0, 18, 57, 67, 69], "treesummar": [18, 21], "trg_lang": 17, "trial": [15, 50], "trial_dir": [0, 29, 50, 113], "trial_fold": [31, 42, 51, 113], "trial_path": [0, 2, 7, 15, 51], "troubl": [55, 112], "troubleshoot": [55, 56], "true": [0, 5, 6, 9, 10, 11, 12, 15, 17, 20, 23, 28, 29, 38, 39, 43, 46, 47, 49, 50, 51, 53, 56, 61, 71, 75, 92, 112], "truncat": [23, 27, 92], "truncate_by_token": [18, 19], "truth": [6, 17, 35, 44, 46, 52, 53, 59, 108], "try": [56, 105, 110, 112], "tune": 98, "tupl": [0, 2, 7, 14, 16, 23, 27, 28, 29, 35, 102, 103], "turbo": [25, 37, 38, 59, 60, 61, 67, 68, 69, 87, 95, 98, 99, 108, 112], "turkish": 31, "turn": 16, "tutori": [34, 37, 50, 51, 55, 110], "twitter": 55, "two": [8, 12, 27, 35, 38, 52, 53, 62, 81, 109, 110, 113], "two_hop_increment": [8, 12, 48], "two_hop_quest": [8, 12], "twohopincrementalrespons": [8, 12], "txt": [6, 38, 56], "type": [0, 6, 15, 17, 27, 28, 29, 31, 35, 38, 41, 42, 45, 50, 53, 57, 59, 61, 62, 76, 77, 78, 79, 80, 81, 85, 88, 92, 97, 98, 99, 100, 101, 104, 110, 113], "typic": [48, 94], "tyre": 110, "u": 99, "ultim": 55, "ultra": 80, "unanswer": 10, "under": [108, 112], "underscor": 67, "understand": [107, 108], "understudi": 52, "unexpect": [35, 113], "unicamp": 84, "uniform": 37, "unigram": [17, 52], "unintend": [46, 106], "union": [0, 15], "uniqu": [27, 35, 67, 111], "unit": 38, "unknown": 0, "unless": 29, "unstructur": 40, "unstructured_api_kei": 40, "unstructuredmarkdown": 40, "unstructuredpdf": 40, "unstructuredxml": 40, "until": 111, "up": [35, 54, 56, 67, 69, 111, 113], "updat": [8, 35, 49, 57], "update_corpu": [1, 8, 49], "upgrad": [56, 62, 112], "upon": 56, "upr": [0, 18, 56, 86, 110], "uprscor": [18, 23], "upsert": [5, 6, 29], "upstage_api_kei": 40, "upstagelayoutanalysi": [40, 43], "url": 50, "us": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 19, 21, 22, 23, 25, 26, 27, 29, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 58, 59, 60, 64, 66, 67, 68, 69, 70, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 110, 112], "usag": [27, 67, 87, 105], "use_bf16": [23, 91], "use_fp16": [78, 79], "use_stemm": 17, "user": [0, 15, 35, 38, 45, 51, 64, 65, 91, 95, 98, 104, 107, 109, 110, 113], "user_prompt": 45, "usr": 56, "usual": [44, 45], "utf": 50, "util": [0, 1, 30, 86], "v": 56, "v0": [36, 38, 56, 57, 59, 62, 101], "v1": [0, 9, 10, 11, 12, 15, 23, 29, 57, 76, 81, 83, 84], "v2": [17, 23, 57, 76, 78, 80, 84, 88], "vagu": 46, "valid": [6, 8, 30, 108], "validate_corpus_dataset": [0, 29], "validate_llama_index_prompt": [4, 6], "validate_qa_dataset": [0, 29], "validate_qa_from_corpus_dataset": [0, 29], "validate_strategy_input": [0, 30], "valu": [0, 6, 15, 16, 17, 20, 27, 28, 29, 32, 33, 35, 38, 40, 45, 52, 53, 57, 71, 72, 73, 74, 75, 90, 102, 103, 106, 108, 109, 112], "valuabl": 38, "value_column_nam": 29, "vari": [46, 100, 102, 111], "variabl": [7, 29, 40, 56, 61, 76, 81, 83, 92, 112], "variant": 84, "variat": [35, 100], "variou": [31, 42, 49, 55, 59, 67, 85, 86, 95, 104], "vector": [0, 6, 105, 110], "vector db": 105, "vector_db": 27, "vectordb": [0, 18, 26, 38, 57, 100, 101, 104, 106, 107], "vectordb_ingest": [18, 27], "vectordb_pur": [18, 27], "verbos": [18, 23, 87], "veri": 55, "verifi": 48, "version": [0, 15, 27, 35, 48, 58, 62, 101, 108, 109, 112, 113], "versionrespons": [0, 15], "video": 35, "view": 55, "viscond": 99, "vision": 85, "visit": 27, "vllm": [0, 17, 18, 59, 95, 112], "voil\u00e0": 110, "voyag": 23, "voyage_api_kei": 92, "voyage_cli": 23, "voyageai": [0, 18, 92], "voyageai_rerank": 86, "voyageai_rerank_pur": [18, 23], "voyageairerank": [18, 23], "vram": 112, "wa": [27, 31, 39, 42, 48, 52, 53, 57, 108, 112], "wai": [26, 31, 42, 45, 46, 51, 106, 108, 110, 112], "wait": [56, 62], "want": [6, 8, 15, 17, 25, 27, 28, 29, 32, 33, 35, 38, 40, 43, 46, 48, 54, 55, 56, 57, 72, 76, 77, 78, 79, 80, 81, 85, 88, 90, 92, 101, 102, 103, 106, 108, 111], "warn": 17, "water": 54, "we": [0, 17, 21, 22, 23, 31, 34, 35, 38, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 62, 95, 100, 101, 105, 106, 107, 108, 110, 112, 113], "web": [15, 30], "weight": [17, 27, 52, 100, 102, 103], "weight_rang": [102, 103, 104], "welcom": 110, "well": [31, 38, 42, 47, 52, 53, 55], "were": 51, "what": [10, 31, 35, 42, 48, 53, 55, 57, 91, 93, 94, 95, 96, 99, 107, 111], "when": [0, 6, 10, 17, 21, 22, 23, 25, 27, 35, 39, 45, 48, 54, 56, 57, 59, 61, 62, 70, 72, 81, 90, 94, 95, 99, 105, 106, 107, 111, 112, 113], "where": [46, 55, 67, 104, 107], "whether": [0, 5, 15, 17, 23, 52, 61, 78, 79, 91, 92], "which": [6, 15, 17, 19, 25, 27, 29, 35, 38, 45, 48, 51, 52, 53, 54, 55, 57, 60, 67, 68, 69, 70, 81, 95, 101, 102, 103, 106, 108, 110, 112, 113], "whichev": 53, "while": [38, 46, 56, 111], "whitespac": [27, 29], "who": [48, 113], "whole": [0, 8, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 108, 113], "why": [35, 108, 110], "wikipedia": 48, "wildcard": 42, "window": [95, 112], "window_replac": [0, 18, 96], "window_s": [31, 49], "windowreplac": [18, 25], "wise": 87, "with_debugging_log": 6, "within": [59, 67, 86, 95, 104, 111], "withjsonschema": 0, "without": [43, 55, 58, 60, 61, 64, 67, 68, 69, 70, 86, 97, 100, 102, 110, 113], "wonder": 108, "word": [11, 17, 44, 52, 101], "work": [38, 56, 102, 106, 112, 113], "workaround": 112, "worker": 0, "would": [26, 53, 107], "wrapper": 0, "write": [23, 34, 45, 56, 87, 91, 99, 102, 106, 108, 110], "written": [32, 33, 40], "wrong": [2, 31, 38, 110], "wsl": 112, "www": 55, "x": [0, 23, 31, 50, 55], "x86": 85, "xsmall": 83, "yaml": [0, 15, 49, 50, 52, 55, 56, 57, 108, 109, 110, 111, 112], "yaml_filepath": 0, "yaml_path": [0, 14, 15, 51, 113], "yaml_to_markdown": [0, 30], "ye": 48, "yet": [37, 56, 110], "yml": [15, 106], "you": [0, 2, 5, 6, 7, 8, 10, 15, 17, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 90, 92, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113], "your": [0, 6, 15, 17, 31, 34, 35, 36, 39, 41, 42, 45, 50, 51, 55, 56, 61, 62, 70, 76, 80, 81, 83, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 108, 109, 110, 112], "your_api_bas": 57, "your_api_kei": [57, 112], "your_cohere_api_kei": 76, "your_dir_path": 38, "your_jina_api_kei": 81, "your_mixedbread_api_kei": 83, "your_voyageai_api_kei": 92, "yourself": [27, 101, 102], "yyyi": 72, "z": [27, 102, 104], "zcal": 55, "zero": [91, 97]}, "titles": ["autorag package", "autorag.data package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.legacy package", "autorag.data.legacy.corpus package", "autorag.data.legacy.qacreation package", "autorag.data.parse package", "autorag.data.qa package", "autorag.data.qa.evolve package", "autorag.data.qa.filter package", "autorag.data.qa.generation_gt package", "autorag.data.qa.query package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.deploy package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Dataset Format", "Legacy", "RAGAS evaluation data generation", "Start creating your own evaluation data", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Query Evolving", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "FlashRank Reranker", "jina_reranker", "Ko-reranker", "Mixedbread AI Reranker", "MonoT5", "OpenVINO Reranker", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "voyageai_reranker", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Strategy", "Road to Modular RAG", "Structure", "TroubleShooting", "Tutorial"], "titleterms": {"": 53, "0": [50, 53, 54], "1": [31, 32, 33, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 61, 100, 112, 113], "2": [31, 32, 33, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 61, 104, 112, 113], "3": [31, 32, 33, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 64, 112, 113], "4": [31, 33, 40, 42, 47, 49, 52, 53, 86, 112], "5": [33, 40, 47, 52, 53, 56, 70, 112], "6": [40, 47, 52, 53, 56, 67, 112], "7": [40, 95], "8": 59, "For": 101, "If": 38, "The": [39, 112], "about": 110, "access": 56, "accur": 61, "add": [31, 57], "addit": [56, 102, 103], "ai": 83, "all": [40, 108], "also": 113, "an": 113, "ani": 101, "answer": [44, 47], "api": [15, 40, 50, 56, 112, 113], "appli": [53, 54], "augment": [64, 65], "auto": [38, 61], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 51, 53, 54, 55, 56, 110, 113], "autotoken": 101, "avail": [31, 32, 33, 40, 43, 63], "averag": 53, "backend": 105, "base": [2, 6, 7, 11, 13, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 46], "basic": [34, 44, 53, 54], "befor": [76, 81, 83, 92], "benefit": [64, 67, 70, 86, 100], "bert": 52, "best": 108, "between": 70, "bleu": 52, "bm25": [27, 101], "both": 38, "build": [56, 112], "cach": 56, "can": [55, 108], "cc": 102, "charact": 32, "check": [31, 42], "chunk": [2, 31, 32, 33, 49], "chunker": [0, 31], "cli": [0, 51], "client": 50, "clova": [7, 39], "code": [50, 113], "coher": [23, 52], "cohere_rerank": 76, "colab": 113, "colbert": [23, 77], "column": [31, 42], "come": 39, "command": [50, 113], "complet": 48, "compress": 45, "concept": [34, 48, 111], "concis": 44, "condit": 45, "config": [59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113], "configur": [57, 109], "consist": 52, "contact": 110, "contain": 56, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 47], "context": 94, "corpu": [3, 5, 35, 37, 38, 49], "could": 112, "creat": [38, 113], "creation": [34, 47, 49, 58], "csv": [40, 107], "cumul": 53, "curl": 50, "custom": [37, 38, 45, 56, 106, 113], "cutoff": [71, 73, 74, 75], "dashboard": [0, 113], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34, 37, 38, 47, 49, 58, 107, 112], "data_path_glob": 42, "dataset": [35, 113], "debug": 56, "decompos": 99, "deepeval_prompt": 17, "default": 99, "definit": [52, 53, 54, 59, 64, 67, 70, 86, 95, 100, 104], "depend": 46, "deploi": [15, 113], "detect": [39, 43], "didn": 113, "differ": [70, 112], "directori": 56, "discount": 53, "do": 108, "doc_id": 35, "docker": 56, "document": [38, 50, 55], "don": 46, "dontknow": 10, "dure": 113, "earli": 110, "ecosystem": 55, "embed": [57, 78, 79], "endpoint": 50, "environ": 106, "error": [112, 113], "eval": 52, "evalu": [0, 16, 17, 37, 38, 49, 108, 113], "evolv": [9, 45], "exampl": [31, 32, 33, 39, 40, 41, 43, 48, 50, 51, 53, 54, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111], "exist": 38, "expans": [98, 100], "explan": [56, 102, 103, 111], "extract": [41, 113], "extract_evid": 8, "f": 93, "f1": [53, 54], "face": 112, "factoid": 48, "featur": [31, 38], "file": [31, 40, 42, 59, 64, 67, 70, 86, 95, 100, 104, 106, 113], "filter": [10, 46, 47, 70, 72], "find": 113, "first": 113, "flag": [78, 79], "flag_embed": 23, "flag_embedding_llm": 23, "flashrank": [23, 80], "fluenci": 52, "folder": [31, 42, 51, 107, 113], "format": [35, 113], "founder": 55, "from": [37, 38, 39, 56, 112], "fstring": 25, "function": 45, "g": 52, "gain": 53, "gener": [16, 17, 19, 37, 44, 47, 48, 52, 59], "generation_gt": [11, 35, 38], "get": [47, 50, 55], "gpu": [56, 62, 112], "gradio": [15, 51], "gt": 47, "guid": 58, "have": [38, 40], "help": 55, "hf_home": 56, "hop": 48, "how": [32, 33, 40, 52, 55, 108], "html": [39, 40], "huggingfac": 101, "hybrid": [43, 102, 103], "hybrid_cc": 27, "hybrid_rrf": 27, "hyde": [26, 97], "i": [31, 32, 33, 38, 40, 64, 67, 70, 86, 100, 106, 108, 110, 112], "imag": 56, "import": 112, "increment": 48, "index": [33, 38, 57, 107], "inform": 39, "instal": [56, 112], "instanc": [31, 42], "instead": 51, "interfac": [51, 113], "japanes": [56, 101], "jina": 23, "jina_rerank": 81, "json": [40, 107], "kei": 56, "know": [46, 110], "ko": 82, "ko_kiwi": 101, "ko_kkma": 101, "ko_okt": 101, "korean": [56, 101], "korerank": 23, "langchain": [3, 5, 32, 40], "langchain_chunk": 2, "langchain_pars": 7, "languag": 41, "legaci": [4, 5, 6, 36], "length": 112, "line": [106, 107, 110, 111, 113], "lingua": 66, "list": 63, "llama": [33, 41], "llama_gen_queri": 12, "llama_index": [3, 5, 6, 13, 60], "llama_index_chunk": 2, "llama_index_gen_gt": 11, "llama_index_llm": 19, "llama_index_query_evolv": 9, "llamaindex": [44, 112], "llamapars": 7, "llm": [46, 57, 60, 61, 66, 78, 112], "local": 56, "log": 61, "long": [35, 66, 94], "long_context_reord": 25, "longllmlingua": 21, "make": [38, 45, 106], "maker": 95, "manual": 56, "map": [49, 53], "markdown": 40, "mean": [53, 109], "merger": 110, "metadata": 35, "meteor": 52, "method": [32, 33, 40], "metric": [17, 52, 53, 54], "metricinput": 28, "migrat": 58, "mixedbread": 83, "mixedbreadai": 23, "model": [37, 56, 57, 83, 84, 92], "modeling_enc_t5": 24, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 42, 43, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111], "modular": 110, "monot5": [23, 84], "more": [57, 108, 110], "mrr": 53, "multi": [62, 98], "multi_query_expans": 26, "multipl": 38, "must": 40, "name": [31, 83, 84, 92], "ndcg": 53, "need": [40, 108], "next": [65, 108, 113], "node": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 59, 64, 67, 70, 86, 95, 100, 103, 104, 106, 107, 108, 110, 111, 113], "node_lin": 0, "normal": [53, 109], "note": [56, 80, 113], "occur": 113, "ollama": 112, "onli": 38, "openai": [44, 56, 61, 112], "openai_gen_gt": 11, "openai_gen_queri": 12, "openai_llm": [19, 61], "openai_query_evolv": 9, "openvino": [23, 85], "optim": [49, 108, 112, 113], "option": 35, "origin": 112, "output": [31, 42, 61], "overview": [31, 38, 42, 47, 48, 49, 59, 67, 86, 95, 100, 104, 109], "own": 38, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "paramet": [40, 42, 43, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109], "pars": [7, 40, 41, 42, 43, 49, 56], "parser": [0, 39, 42], "pass": 108, "pass_compressor": [21, 67], "pass_passage_augment": [20, 64], "pass_passage_filt": [22, 70], "pass_query_expans": [26, 100], "pass_rerank": [23, 86], "passag": [38, 46, 64, 70], "passage_compressor": 67, "passage_depend": 10, "passage_rerank": 86, "passageaugment": 20, "passagecompressor": 21, "passagefilt": 22, "passagererank": [23, 24], "path": [35, 51], "pdf": 40, "percentil": [71, 73], "percentile_cutoff": 22, "pipelin": [31, 42, 113], "point": 39, "polici": 110, "porter_stemm": 101, "post": 50, "pre_retrieve_node_lin": 107, "precis": [53, 54], "prepar": 113, "preprocess": 29, "prev": 65, "prev_next_augment": 20, "prob": 61, "project": [31, 42, 51, 107, 113], "prompt": [9, 10, 11, 12, 38, 61, 95, 99], "promptmak": 25, "provid": 45, "purpos": [59, 67, 104], "python": [50, 113], "qa": [8, 9, 10, 11, 12, 35, 37, 38, 47, 49], "qacreat": [6, 13], "qid": 35, "queri": [12, 35, 38, 45, 47, 48, 98, 99, 100], "query_decompos": 26, "query_expans": 107, "queryexpans": 26, "question": [37, 46, 47, 48], "rag": [110, 113], "raga": [6, 13, 37], "rank": [53, 109], "rankgpt": [23, 87], "raw": 38, "reason": 45, "recal": [53, 54], "recenc": [22, 72], "reciproc": 53, "recommend": 35, "refin": [21, 68], "relat": 112, "relev": 52, "reorder": 94, "replac": 96, "requesttimeout": 112, "rerank": [70, 77, 78, 79, 80, 82, 83, 85, 88, 90], "resourc": 107, "restart": 113, "result": [31, 42, 108, 113], "retriev": [16, 17, 27, 47, 53, 54, 104], "retrieval_cont": [16, 17], "retrieval_gt": [35, 53], "retrieve_node_lin": 107, "road": 110, "roug": 52, "row": 112, "rrf": 103, "rule": 46, "run": [2, 7, 19, 20, 21, 22, 23, 25, 26, 27, 31, 42, 50, 51, 56, 112, 113], "runner": 51, "sampl": [8, 35, 47, 50, 107], "save": [38, 47], "schema": [8, 28], "score": [52, 53], "see": 113, "sem": 52, "sem_scor": 59, "semant": 33, "sentenc": [31, 32, 33, 88], "sentence_transform": 23, "separ": 39, "server": [50, 113], "set": [31, 37, 42], "setup": 56, "short": 35, "similar": [73, 74], "similarity_percentile_cutoff": 22, "similarity_threshold_cutoff": 22, "simpl": [6, 13, 33], "sourc": 56, "space": 101, "specif": 52, "specifi": [31, 42, 51, 106, 113], "splitter": 31, "start": [31, 38, 42, 55], "start_end_idx": 35, "step": 113, "stori": 35, "strategi": [0, 59, 67, 86, 95, 100, 104, 108, 109, 111], "stream": 50, "streamlit": 51, "string": 93, "structur": [107, 111], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "subpackag": [0, 1, 4, 8, 16, 18, 23], "sudachipi": 101, "summar": [69, 111], "summari": 107, "support": [0, 31, 41, 42, 57, 59, 67, 83, 84, 86, 92, 95, 100, 104, 105], "swap": 108, "system": 113, "t": [46, 108, 113], "tabl": [39, 41, 43], "table_hybrid_pars": 7, "talk": 55, "tart": [24, 89], "test": 113, "text": 39, "threshold": [74, 75], "threshold_cutoff": 22, "time": 90, "time_rerank": 23, "token": [32, 33, 54, 61, 101], "tokenization_enc_t5": 24, "transform": 88, "tree": 69, "tree_summar": 21, "trial": [51, 107, 113], "trial_path": 113, "troubl": [56, 101], "troubleshoot": 112, "truncat": 61, "tupl": 106, "tutori": [49, 113], "two": 48, "type": [37, 40, 48], "u": 110, "unanswer": 46, "understand": 53, "unicodedecodeerror": 112, "upr": [23, 91], "us": [31, 32, 33, 37, 38, 40, 51, 52, 56, 57, 61, 62, 101, 106, 108, 109, 113], "usag": [48, 50, 76, 81, 83, 92], "user": 56, "util": [14, 16, 17, 18, 29], "v0": 58, "v1": 50, "valid": [0, 113], "variabl": 106, "vectordb": [27, 105], "version": [50, 56, 110], "vllm": [19, 57, 62], "voyageai": 23, "voyageai_rerank": 92, "want": [31, 42, 51, 110, 113], "web": [0, 51, 113], "what": [38, 64, 67, 70, 86, 100, 106, 110, 113], "wheel": 112, "when": 38, "while": 112, "why": [51, 55, 61, 62, 113], "window": [33, 56, 96], "window_replac": 25, "work": 108, "write": 113, "xml": 40, "yaml": [31, 32, 33, 39, 40, 41, 42, 43, 51, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113], "you": 38, "your": [38, 57, 113]}})