Search.setIndex({"alltitles": {"/v1/run (POST)": [[51, "id1"]], "/v1/stream (POST)": [[51, "id2"]], "/version (GET)": [[51, "id3"]], "0. Retrieval token metric in AutoRAG": [[55, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[54, "understanding-autorag-s-retrieval-gt"]], "1. /v1/run (POST)": [[51, "v1-run-post"]], "1. Add File Name": [[32, "add-file-name"]], "1. Auto-truncate prompt": [[73, "auto-truncate-prompt"]], "1. Bleu": [[53, "bleu"]], "1. Build the Docker Image": [[57, "build-the-docker-image"]], "1. Docker": [[68, "docker"]], "1. Error when using AutoRAG on Jupyter Notebook or API server": [[126, "error-when-using-autorag-on-jupyter-notebook-or-api-server"]], "1. Factoid": [[49, "factoid"]], "1. HTML Parser": [[40, "html-parser"]], "1. Installation": [[126, "installation"]], "1. PDF": [[41, "pdf"]], "1. Parsing": [[50, "parsing"]], "1. Precision": [[54, "precision"]], "1. Query Expansion": [[112, null]], "1. Reasoning Evolving": [[46, "reasoning-evolving"]], "1. Run as a Code": [[127, "run-as-a-code"]], "1. Sample retrieval gt": [[48, "sample-retrieval-gt"]], "1. Set chunker instance": [[32, "set-chunker-instance"]], "1. Set parser instance": [[43, "set-parser-instance"]], "1. Token": [[33, "token"], [34, "token"]], "1. Token Precision": [[55, "token-precision"]], "1. Unanswerable question filtering": [[47, "unanswerable-question-filtering"]], "1. Use YAML path": [[52, "use-yaml-path"]], "2. /v1/retrieve (POST)": [[51, "v1-retrieve-post"]], "2. Accurate token output": [[73, "accurate-token-output"]], "2. CSV": [[41, "csv"]], "2. Character": [[33, "character"]], "2. Chunking": [[50, "chunking"]], "2. Concept Completion": [[49, "concept-completion"]], "2. Conditional Evolving": [[46, "conditional-evolving"]], "2. Corpus id not found in corpus_data.": [[126, "corpus-id-not-found-in-corpus-data"]], "2. Get retrieval gt contents to generate questions": [[48, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[126, "optimization"]], "2. Passage Dependent Filtering": [[47, "passage-dependent-filtering"]], "2. Recall": [[54, "recall"]], "2. Retrieval": [[116, null]], "2. Rouge": [[53, "rouge"]], "2. Run as an API server": [[127, "run-as-an-api-server"]], "2. Run the Docker Container": [[57, "run-the-docker-container"]], "2. Sentence": [[34, "sentence"]], "2. Sentence Splitter": [[32, "sentence-splitter"]], "2. Set YAML file": [[32, "set-yaml-file"], [43, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[40, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[55, "token-recall"]], "2. Use a trial path": [[52, "use-a-trial-path"]], "2. Weaviate Cloud": [[68, "weaviate-cloud"]], "3. /v1/stream (POST)": [[51, "v1-stream-post"]], "3. Accurate log prob output": [[73, "accurate-log-prob-output"]], "3. Compress Query": [[46, "compress-query"]], "3. F1 Score": [[54, "f1-score"]], "3. Generate queries": [[48, "generate-queries"]], "3. JSON": [[41, "json"]], "3. LlamaIndex": [[126, "llamaindex"]], "3. METEOR": [[53, "meteor"]], "3. Passage Augmenter": [[76, null]], "3. QA Creation": [[50, "qa-creation"]], "3. Run as a Web Interface": [[127, "run-as-a-web-interface"]], "3. Sentence": [[33, "sentence"]], "3. Start chunking": [[32, "start-chunking"]], "3. Start parsing": [[43, "start-parsing"]], "3. Token F1": [[55, "token-f1"]], "3. Two-hop Incremental": [[49, "two-hop-incremental"]], "3. Use Runner": [[52, "use-runner"]], "3. Using a Custom Cache Directory with HF_HOME": [[57, "using-a-custom-cache-directory-with-hf-home"]], "3. Window": [[34, "window"]], "4. /version (GET)": [[51, "version-get"]], "4. Check the result": [[32, "check-the-result"], [43, "check-the-result"]], "4. Custom": [[49, "custom"]], "4. GPU-related Error": [[126, "gpu-related-error"]], "4. Generate answers": [[48, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[54, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[41, "markdown"]], "4. Passage_Reranker": [[98, null]], "4. QA - Corpus mapping": [[50, "qa-corpus-mapping"]], "4. Sem Score": [[53, "sem-score"]], "4. Semantic": [[34, "semantic"]], "5-1. Coherence": [[53, "coherence"]], "5-2. Consistency": [[53, "consistency"]], "5-3. Fluency": [[53, "fluency"]], "5-4. Relevance": [[53, "relevance"]], "5. Debugging and Manual Access": [[57, "debugging-and-manual-access"]], "5. Filtering questions": [[48, "filtering-questions"]], "5. G-Eval": [[53, "g-eval"]], "5. HTML": [[41, "html"]], "5. MAP (Mean Average Precision)": [[54, "map-mean-average-precision"]], "5. Ollama RequestTimeOut Error": [[126, "ollama-requesttimeout-error"]], "5. Passage Filter": [[82, null]], "5. Simple": [[34, "simple"]], "6. Bert Score": [[53, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[54, "ndcg-normalized-discounted-cumulative-gain"]], "6. Passage_Compressor": [[79, null]], "6. Save the QA data": [[48, "save-the-qa-data"]], "6. Use gpu version": [[57, "use-gpu-version"]], "6. XML": [[41, "xml"]], "7. All files": [[41, "all-files"]], "7. Prompt Maker": [[107, null]], "8. Generator": [[71, null]], "API client usage example": [[51, "api-client-usage-example"]], "API endpoint": [[51, null]], "AWS Bedrock x AutoRAG": [[58, null]], "Add more LLM models": [[60, "add-more-llm-models"], [69, "add-more-llm-models"]], "Add your embedding models": [[69, "add-your-embedding-models"]], "Additional Considerations": [[67, "additional-considerations"]], "Additional Notes": [[57, "additional-notes"]], "Advanced Configuration": [[125, "advanced-configuration"]], "Allowed IP Addresses": [[64, "allowed-ip-addresses"]], "Answer Generation": [[45, null]], "Any trouble to use Korean tokenizer?": [[113, null]], "Auto-save feature": [[39, null]], "AutoRAG documentation": [[56, null]], "Available Chunk Method": [[33, "available-chunk-method"], [34, "available-chunk-method"]], "Available List": [[75, null]], "Available Parse Method by File Type": [[41, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[32, "available-sentence-splitter"]], "BM25": [[113, null]], "Backend Support": [[117, "backend-support"]], "Basic Concepts": [[35, "basic-concepts"]], "Basic Generation": [[45, "basic-generation"]], "Before Usage": [[88, "before-usage"], [93, "before-usage"], [95, "before-usage"], [104, "before-usage"]], "Before you start QA Creation": [[50, "before-you-start-qa-creation"]], "Build from source": [[57, "build-from-source"]], "Chroma": [[63, null]], "Chunk": [[32, null]], "Client Types": [[63, "client-types"]], "Clova": [[40, null]], "Cluster, Bucket, Scope, Collection": [[64, "cluster-bucket-scope-collection"]], "Colab Tutorial": [[127, null]], "Colbert Reranker": [[89, null]], "Command Line": [[67, "command-line"]], "Common Parameters": [[60, "common-parameters"], [69, "common-parameters"]], "Compact": [[121, "compact"]], "Concise Generation": [[45, "concise-generation"]], "Configuration": [[64, "configuration"], [65, "configuration"], [66, "configuration"], [68, "configuration"], [122, "configuration"]], "Configure LLM": [[60, null]], "Configure LLM & Embedding models": [[69, null]], "Configure Vector DB": [[67, null]], "Configure the Embedding model": [[69, "configure-the-embedding-model"]], "Configure the LLM model": [[60, "configure-the-llm-model"], [69, "configure-the-llm-model"]], "Contact": [[123, null]], "Contact us": [[123, "contact-us"]], "Corpus Dataset": [[36, "corpus-dataset"]], "Couchbase": [[64, null]], "Could not build wheels": [[126, "could-not-build-wheels"]], "Create Index for Query": [[64, "create-index-for-query"]], "Custom Generation": [[45, "custom-generation"]], "Data Creation": [[35, null], [70, "data-creation"]], "Dataset Format": [[36, null]], "Default Options": [[67, "default-options"]], "Default Prompt": [[111, "default-prompt"]], "Deploy your optimal RAG pipeline": [[127, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[120, null]], "Don\u2019t know Filter": [[47, "don-t-know-filter"]], "Downloading the LLM Model": [[62, "downloading-the-llm-model"]], "Early version of AutoRAG": [[123, "early-version-of-autorag"]], "Edit Cluster Access": [[64, "edit-cluster-access"]], "Endpoints": [[51, "endpoints"]], "Error while running LLM": [[126, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[120, "evaluate-nodes-that-can-t-evaluate"]], "Evaluate your RAG": [[125, null]], "Evaluation data creation tutorial": [[50, null]], "Example": [[49, "example"]], "Example Code": [[125, "example-code"]], "Example Configuration Using Normalize Mean Strategy": [[122, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[122, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[122, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[124, "example-node-lines"]], "Example Request": [[51, "example-request"]], "Example Response": [[51, "example-response"]], "Example YAML": [[32, "example-yaml"], [32, "id1"], [33, "example-yaml"], [34, "example-yaml"], [40, "example-yaml"], [41, "example-yaml"], [41, "id1"], [41, "id2"], [41, "id3"], [41, "id4"], [41, "id5"], [41, "id6"], [42, "example-yaml"], [44, "example-yaml"]], "Example YAML file": [[64, "example-yaml-file"], [66, "example-yaml-file"], [68, "example-yaml-file"], [68, "id1"]], "Example config.yaml": [[72, "example-config-yaml"], [73, "example-config-yaml"], [74, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [80, "example-config-yaml"], [81, "example-config-yaml"], [83, "example-config-yaml"], [84, "example-config-yaml"], [85, "example-config-yaml"], [86, "example-config-yaml"], [87, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [91, "example-config-yaml"], [92, "example-config-yaml"], [93, "example-config-yaml"], [94, "example-config-yaml"], [95, "example-config-yaml"], [96, "example-config-yaml"], [97, "example-config-yaml"], [99, "example-config-yaml"], [100, "example-config-yaml"], [101, "example-config-yaml"], [102, "example-config-yaml"], [103, "example-config-yaml"], [104, "example-config-yaml"], [105, "example-config-yaml"], [106, "example-config-yaml"], [108, "example-config-yaml"], [109, "example-config-yaml"], [110, "example-config-yaml"], [111, "example-config-yaml"], [113, "example-config-yaml"], [114, "example-config-yaml"], [115, "example-config-yaml"], [117, "example-config-yaml"]], "Example config.yaml file": [[71, "example-config-yaml-file"], [76, "example-config-yaml-file"], [79, "example-config-yaml-file"], [82, "example-config-yaml-file"], [98, "example-config-yaml-file"], [107, "example-config-yaml-file"], [112, "example-config-yaml-file"], [116, "example-config-yaml-file"]], "Explanation of concepts": [[124, "explanation-of-concepts"]], "Explanation:": [[57, "explanation"], [57, "id1"]], "Extract pipeline and evaluate test dataset": [[127, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[105, null]], "Facing Import Error": [[126, "facing-import-error"]], "Facing OPENAI API error": [[126, "facing-openai-api-error"]], "Factoid Example": [[49, "factoid-example"]], "Features": [[32, "features"]], "Filtering": [[47, null]], "Find Optimal RAG Pipeline": [[127, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[90, null]], "Flag Embedding Reranker": [[91, null]], "FlashRank Reranker": [[92, null]], "Folder Structure": [[119, null]], "Frequently Asked Questions": [[126, "frequently-asked-questions"]], "Full": [[121, "full"]], "Full Ingest Option": [[67, "full-ingest-option"]], "GPU": [[121, "gpu"]], "GPU + API": [[121, "gpu-api"]], "Generate QA set from Corpus data using RAGAS": [[38, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Evaluation": [[125, "generation-evaluation"]], "Generation Metrics": [[53, null]], "Get API Key": [[121, "get-api-key"]], "Half": [[121, "half"]], "How optimization works": [[120, null]], "How to Use": [[33, "how-to-use"], [34, "how-to-use"], [41, "how-to-use"]], "HuggingFace LLM x AutoRAG": [[59, null]], "Huggingface AutoTokenizer": [[113, "huggingface-autotokenizer"]], "HyDE": [[109, null]], "Hybrid - cc": [[114, null]], "Hybrid - rrf": [[115, null]], "If you have both query and generation_gt:": [[39, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[39, "if-you-only-have-query-data"]], "Important: Score Alignment": [[125, "important-score-alignment"]], "Index": [[39, "index"], [60, "index"], [69, "index"]], "Initialization": [[63, "initialization"]], "Initialization with YAML Configuration": [[63, "initialization-with-yaml-configuration"]], "Installation": [[61, "installation"], [62, "installation"]], "Installation and Setup": [[57, null]], "Installation for Japanese \ud83c\uddef\ud83c\uddf5": [[57, "installation-for-japanese"]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[57, "installation-for-korean"]], "Installation for Local Models \ud83c\udfe0": [[57, "installation-for-local-models"]], "Installation for Parsing \ud83c\udf32": [[57, "installation-for-parsing"]], "Integration list": [[60, "integration-list"]], "Key Parameters:": [[63, "key-parameters"]], "Ko-reranker": [[94, null]], "LLM-based Don\u2019t know Filter": [[47, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[33, null]], "Langchain Parse": [[41, null]], "Language Support": [[42, "language-support"]], "Legacy": [[37, null]], "Llama Index Chunk": [[34, null]], "Llama Parse": [[42, null]], "LlamaIndex": [[45, "llamaindex"], [45, "id2"], [45, "id3"]], "Long Context Reorder": [[106, null]], "Long LLM Lingua": [[78, null]], "Long story short": [[36, null], [36, null], [36, null], [36, null]], "Make Node Line": [[118, "make-node-line"]], "Make YAML file": [[118, "make-yaml-file"]], "Make a Custom Evolving function": [[46, "make-a-custom-evolving-function"]], "Make a custom config YAML file": [[118, null]], "Make corpus data from raw documents": [[39, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[39, "make-qa-data-from-corpus-data"]], "Merger Node": [[123, "merger-node"]], "MetricInput Dataclass": [[125, "metricinput-dataclass"]], "MetricInput for Generation": [[125, "metricinput-for-generation"]], "Migration Guide": [[70, null]], "Milvus": [[65, null]], "Mixedbread AI Reranker": [[95, null]], "Module Parameters": [[72, "module-parameters"], [73, "module-parameters"], [74, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [80, "module-parameters"], [81, "module-parameters"], [83, "module-parameters"], [84, "module-parameters"], [85, "module-parameters"], [86, "module-parameters"], [87, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [91, "module-parameters"], [92, "module-parameters"], [93, "module-parameters"], [94, "module-parameters"], [95, "module-parameters"], [96, "module-parameters"], [97, "module-parameters"], [99, "module-parameters"], [100, "module-parameters"], [101, "module-parameters"], [102, "module-parameters"], [103, "module-parameters"], [104, "module-parameters"], [105, "module-parameters"], [106, "module-parameters"], [108, "module-parameters"], [109, "module-parameters"], [110, "module-parameters"], [111, "module-parameters"], [113, "module-parameters"], [114, "module-parameters"], [115, "module-parameters"], [117, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-autorag.data.chunk"], [3, "module-contents"], [4, "module-autorag.data.legacy"], [5, "module-autorag.data.legacy.corpus"], [6, "module-autorag.data.legacy.qacreation"], [7, "module-autorag.data.parse"], [8, "module-autorag.data.qa"], [9, "module-autorag.data.qa.evolve"], [10, "module-autorag.data.qa.filter"], [11, "module-autorag.data.qa.generation_gt"], [12, "module-autorag.data.qa.query"], [13, "module-contents"], [14, "module-autorag.data.utils"], [15, "module-autorag.deploy"], [16, "module-autorag.evaluation"], [17, "module-autorag.evaluation.metric"], [18, "module-autorag.nodes"], [19, "module-autorag.nodes.generator"], [20, "module-autorag.nodes.passageaugmenter"], [21, "module-autorag.nodes.passagecompressor"], [22, "module-autorag.nodes.passagefilter"], [23, "module-autorag.nodes.passagereranker"], [24, "module-contents"], [25, "module-autorag.nodes.promptmaker"], [26, "module-autorag.nodes.queryexpansion"], [27, "module-autorag.nodes.retrieval"], [28, "module-autorag.schema"], [29, "module-autorag.utils"], [30, "module-autorag.vectordb"]], "Modules that use Embedding model": [[69, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[60, "modules-that-use-llm-model"], [69, "modules-that-use-llm-model"]], "MonoT5": [[96, null]], "More optimization strategies": [[120, "more-optimization-strategies"]], "Multi Query Expansion": [[110, null]], "Next Step": [[127, null]], "Node & Module": [[124, "node-module"]], "Node Line": [[124, "node-line"]], "Node Parameters": [[71, "node-parameters"], [76, "node-parameters"], [79, "node-parameters"], [82, "node-parameters"], [98, "node-parameters"], [107, "node-parameters"], [112, "node-parameters"], [115, "node-parameters"], [116, "node-parameters"]], "Node line for Modular RAG": [[123, "node-line-for-modular-rag"]], "Non GPU": [[121, "non-gpu"]], "Note": [[92, null]], "Note for Windows Users": [[57, "note-for-windows-users"]], "Note: Dataset Format": [[127, null]], "Nvidia Nim x AutoRAG": [[61, null]], "OLLAMA x AutoRAG": [[62, null]], "OpenAI": [[45, "openai"], [45, "id1"]], "OpenAI LLM": [[73, null]], "OpenVINO Reranker": [[97, null]], "Output Columns": [[32, "output-columns"], [43, "output-columns"]], "Overview": [[32, "overview"], [39, "overview"], [43, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [67, "overview"], [71, "overview"], [116, "overview"], [122, "overview"]], "Overview:": [[79, "overview"], [98, "overview"], [107, "overview"], [112, "overview"]], "Parameters": [[44, "parameters"], [51, "parameters"], [64, "parameters"], [66, "parameters"], [68, "parameters"]], "Parse": [[43, null]], "Pass the best result to the next node": [[120, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[83, null]], "Pinecone": [[66, null]], "Point": [[40, "point"]], "Policy Node": [[123, "policy-node"]], "Preparation": [[125, "preparation"]], "Prepare Evaluation Dataset": [[127, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[77, null]], "Project": [[119, "project"]], "Properties": [[51, "properties"]], "Provided Query Evolving Functions": [[46, "provided-query-evolving-functions"]], "Purpose": [[71, null], [79, null], [116, null]], "Python Code": [[67, "python-code"]], "Python Sample Code": [[51, "python-sample-code"]], "QA Dataset": [[36, "qa-dataset"]], "QA creation": [[48, null]], "Query Decompose": [[111, null]], "Query Evolving": [[46, null]], "Query Generation": [[49, null]], "Question types": [[49, "question-types"]], "RAGAS evaluation data generation": [[38, null]], "RAGAS question types": [[38, "ragas-question-types"]], "RankGPT": [[99, null]], "Recency Filter": [[84, null]], "Refine": [[80, null]], "Response Body": [[51, "response-body"]], "Retrieval Evaluation": [[125, "retrieval-evaluation"]], "Retrieval Metrics": [[54, null]], "Retrieval Token Metrics": [[55, null]], "Road to Modular RAG": [[123, null]], "Rule-based Don\u2019t know Filter": [[47, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[127, "run-autorag-optimization"]], "Run AutoRAG with \ud83d\udc33 Docker": [[57, "run-autorag-with-docker"]], "Run Chunk Pipeline": [[32, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[127, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[43, "run-parse-pipeline"]], "Run with AutoRAG Runner": [[52, "run-with-autorag-runner"]], "Run with CLI": [[52, "run-with-cli"]], "Running API server": [[51, "running-api-server"]], "Running AutoRAG": [[58, "running-autorag"], [59, "running-autorag"], [61, "running-autorag"], [62, "running-autorag"]], "Running the Ollama Server": [[62, "running-the-ollama-server"]], "Running the Web Interface": [[52, "running-the-web-interface"]], "Sample Structure Index": [[119, "sample-structure-index"]], "Sample YAML file guide": [[121, null]], "Samples": [[36, "samples"]], "Sentence Transformer Reranker": [[100, null]], "Set Environment Variables": [[42, "set-environment-variables"]], "Set YAML File": [[50, "set-yaml-file"], [50, "id1"]], "Setting Up the AWS profile": [[58, "setting-up-the-aws-profile"]], "Setting Up the Environment": [[61, "setting-up-the-environment"], [62, "setting-up-the-environment"]], "Setup OPENAI API KEY": [[57, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[85, null]], "Similarity Threshold Cutoff": [[86, null]], "Simple": [[121, "simple"]], "Specify modules": [[118, "specify-modules"]], "Specify nodes": [[118, "specify-nodes"]], "Start Chunking": [[50, "start-chunking"]], "Start Parsing": [[50, "start-parsing"]], "Start QA Creation": [[50, "start-qa-creation"]], "Start creating your own evaluation data": [[39, null]], "Strategy": [[107, "strategy"], [112, "strategy"], [122, null], [124, "strategy"]], "Strategy Parameter": [[122, "strategy-parameter"]], "Strategy Parameters": [[71, "strategy-parameters"], [79, "strategy-parameters"], [98, "strategy-parameters"], [116, "strategy-parameters"]], "Strategy Parameters:": [[107, "strategy-parameters"], [112, "strategy-parameters"]], "Structure": [[124, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [8, "subpackages"], [16, "subpackages"], [18, "subpackages"], [23, "subpackages"]], "Success Response": [[51, "success-response"]], "Summarize": [[124, null], [124, null], [124, null]], "Supported Chunk Modules": [[32, "supported-chunk-modules"]], "Supported Model Names": [[95, "supported-model-names"], [96, "supported-model-names"], [104, "supported-model-names"]], "Supported Modules": [[71, "supported-modules"], [79, "supported-modules"], [98, "supported-modules"], [107, "supported-modules"], [112, "supported-modules"], [116, "supported-modules"]], "Supported Parse Modules": [[43, "supported-parse-modules"]], "Supported Vector Databases": [[67, "supported-vector-databases"]], "Supporting Embedding models": [[69, "supporting-embedding-models"]], "Supporting LLM Models": [[60, "supporting-llm-models"], [69, "supporting-llm-models"]], "Swapping modules in Node": [[120, "swapping-modules-in-node"]], "TART": [[101, null]], "Table Detection": [[40, "table-detection"], [44, "table-detection"]], "Table Extraction": [[42, "table-extraction"]], "Table Hybrid Parse": [[44, null]], "Table Parse Available Modules": [[44, "table-parse-available-modules"]], "The length or row is different from the original data": [[126, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[87, null]], "Time Reranker": [[102, null]], "Tree Summarize": [[81, null]], "Trouble with installation?": [[57, null]], "TroubleShooting": [[126, null]], "Tutorial": [[127, null]], "UPR": [[103, null]], "Usage": [[49, "usage"], [49, "id1"], [49, "id2"], [49, "id3"], [64, "usage"], [65, "usage"], [66, "usage"], [67, "usage"], [68, "usage"]], "Use Multimodal Model": [[42, "use-multimodal-model"]], "Use NGrok Tunnel for public access": [[51, "use-ngrok-tunnel-for-public-access"]], "Use custom models": [[38, "use-custom-models"]], "Use custom prompt": [[39, "use-custom-prompt"]], "Use environment variable in the YAML file": [[118, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[74, "use-in-multi-gpu"]], "Use multiple prompts": [[39, "use-multiple-prompts"]], "Use vllm": [[69, "use-vllm"]], "Using AWS Bedrock with AutoRAG": [[58, "using-aws-bedrock-with-autorag"]], "Using HuggingFace LLM with AutoRAG": [[59, "using-huggingface-llm-with-autorag"]], "Using HuggingFace Models": [[69, "using-huggingface-models"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[33, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[34, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using NVIDIA NIM with AutoRAG": [[61, "using-nvidia-nim-with-autorag"]], "Using Parse Method that is not in the Available Parse Method": [[41, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using evaluate_generation": [[125, "using-evaluate-generation"]], "Using evaluate_retrieval": [[125, "using-evaluate-retrieval"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[32, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[127, "validate-your-system"]], "Vectordb": [[117, null]], "Want to know more about Modular RAG?": [[123, null]], "Want to specify project folder?": [[32, null], [43, null], [52, null], [127, null], [127, null], [127, null]], "Weaviate": [[68, null]], "Web Interface": [[52, null]], "Web Interface example": [[52, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[127, null]], "What is Node Line?": [[123, null]], "What is difference between Passage Filter and Passage Reranker?": [[82, null]], "What is pass_compressor?": [[79, null]], "What is pass_passage_augmenter?": [[76, null]], "What is pass_passage_filter?": [[82, null]], "What is pass_query_expansion?": [[112, null]], "What is pass_reranker?": [[98, null]], "What is passage?": [[39, null]], "What is tuple in the yaml file?": [[118, null]], "When you have existing qa data": [[39, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[52, null]], "Why use openai_llm module?": [[73, "why-use-openai-llm-module"]], "Why use python command?": [[127, null]], "Why use vllm module?": [[74, "why-use-vllm-module"]], "Window Replacement": [[108, null]], "Write custom config yaml file": [[127, null]], "Writing the Config YAML File": [[58, "writing-the-config-yaml-file"], [59, "writing-the-config-yaml-file"], [61, "writing-the-config-yaml-file"], [62, "writing-the-config-yaml-file"]], "[Node Line] summary.csv": [[119, "node-line-summary-csv"]], "[Node] summary.csv": [[119, "node-summary-csv"]], "[trial] summary.csv": [[119, "trial-summary-csv"]], "autorag": [[31, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "module-autorag.chunker"]], "autorag.cli module": [[0, "module-autorag.cli"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.chunk package": [[2, null]], "autorag.data.chunk.base module": [[2, "module-autorag.data.chunk.base"]], "autorag.data.chunk.langchain_chunk module": [[2, "module-autorag.data.chunk.langchain_chunk"]], "autorag.data.chunk.llama_index_chunk module": [[2, "module-autorag.data.chunk.llama_index_chunk"]], "autorag.data.chunk.run module": [[2, "module-autorag.data.chunk.run"]], "autorag.data.corpus package": [[3, null]], "autorag.data.corpus.langchain module": [[3, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[3, "autorag-data-corpus-llama-index-module"]], "autorag.data.legacy package": [[4, null]], "autorag.data.legacy.corpus package": [[5, null]], "autorag.data.legacy.corpus.langchain module": [[5, "module-autorag.data.legacy.corpus.langchain"]], "autorag.data.legacy.corpus.llama_index module": [[5, "module-autorag.data.legacy.corpus.llama_index"]], "autorag.data.legacy.qacreation package": [[6, null]], "autorag.data.legacy.qacreation.base module": [[6, "module-autorag.data.legacy.qacreation.base"]], "autorag.data.legacy.qacreation.llama_index module": [[6, "module-autorag.data.legacy.qacreation.llama_index"]], "autorag.data.legacy.qacreation.ragas module": [[6, "module-autorag.data.legacy.qacreation.ragas"]], "autorag.data.legacy.qacreation.simple module": [[6, "module-autorag.data.legacy.qacreation.simple"]], "autorag.data.parse package": [[7, null]], "autorag.data.parse.base module": [[7, "module-autorag.data.parse.base"]], "autorag.data.parse.clova module": [[7, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[7, "module-autorag.data.parse.langchain_parse"]], "autorag.data.parse.llamaparse module": [[7, "module-autorag.data.parse.llamaparse"]], "autorag.data.parse.run module": [[7, "module-autorag.data.parse.run"]], "autorag.data.parse.table_hybrid_parse module": [[7, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qa package": [[8, null]], "autorag.data.qa.evolve package": [[9, null]], "autorag.data.qa.evolve.llama_index_query_evolve module": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve"]], "autorag.data.qa.evolve.openai_query_evolve module": [[9, "module-autorag.data.qa.evolve.openai_query_evolve"]], "autorag.data.qa.evolve.prompt module": [[9, "module-autorag.data.qa.evolve.prompt"]], "autorag.data.qa.extract_evidence module": [[8, "module-autorag.data.qa.extract_evidence"]], "autorag.data.qa.filter package": [[10, null]], "autorag.data.qa.filter.dontknow module": [[10, "module-autorag.data.qa.filter.dontknow"]], "autorag.data.qa.filter.passage_dependency module": [[10, "module-autorag.data.qa.filter.passage_dependency"]], "autorag.data.qa.filter.prompt module": [[10, "module-autorag.data.qa.filter.prompt"]], "autorag.data.qa.generation_gt package": [[11, null]], "autorag.data.qa.generation_gt.base module": [[11, "module-autorag.data.qa.generation_gt.base"]], "autorag.data.qa.generation_gt.llama_index_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt"]], "autorag.data.qa.generation_gt.openai_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt"]], "autorag.data.qa.generation_gt.prompt module": [[11, "module-autorag.data.qa.generation_gt.prompt"]], "autorag.data.qa.query package": [[12, null]], "autorag.data.qa.query.llama_gen_query module": [[12, "module-autorag.data.qa.query.llama_gen_query"]], "autorag.data.qa.query.openai_gen_query module": [[12, "module-autorag.data.qa.query.openai_gen_query"]], "autorag.data.qa.query.prompt module": [[12, "module-autorag.data.qa.query.prompt"]], "autorag.data.qa.sample module": [[8, "module-autorag.data.qa.sample"]], "autorag.data.qa.schema module": [[8, "module-autorag.data.qa.schema"]], "autorag.data.qacreation package": [[13, null]], "autorag.data.qacreation.base module": [[13, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[13, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[13, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[13, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[14, null]], "autorag.data.utils.util module": [[14, "module-autorag.data.utils.util"]], "autorag.deploy package": [[15, null]], "autorag.deploy.api module": [[15, "module-autorag.deploy.api"]], "autorag.deploy.base module": [[15, "module-autorag.deploy.base"]], "autorag.deploy.gradio module": [[15, "module-autorag.deploy.gradio"]], "autorag.evaluation package": [[16, null]], "autorag.evaluation.generation module": [[16, "module-autorag.evaluation.generation"]], "autorag.evaluation.metric package": [[17, null]], "autorag.evaluation.metric.deepeval_prompt module": [[17, "module-autorag.evaluation.metric.deepeval_prompt"]], "autorag.evaluation.metric.generation module": [[17, "module-autorag.evaluation.metric.generation"]], "autorag.evaluation.metric.retrieval module": [[17, "module-autorag.evaluation.metric.retrieval"]], "autorag.evaluation.metric.retrieval_contents module": [[17, "module-autorag.evaluation.metric.retrieval_contents"]], "autorag.evaluation.metric.util module": [[17, "module-autorag.evaluation.metric.util"]], "autorag.evaluation.retrieval module": [[16, "module-autorag.evaluation.retrieval"]], "autorag.evaluation.retrieval_contents module": [[16, "module-autorag.evaluation.retrieval_contents"]], "autorag.evaluation.util module": [[16, "module-autorag.evaluation.util"]], "autorag.evaluator module": [[0, "module-autorag.evaluator"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[18, null]], "autorag.nodes.generator package": [[19, null]], "autorag.nodes.generator.base module": [[19, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[19, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[19, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[19, "module-autorag.nodes.generator.run"]], "autorag.nodes.generator.vllm module": [[19, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[20, null]], "autorag.nodes.passageaugmenter.base module": [[20, "module-autorag.nodes.passageaugmenter.base"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[20, "module-autorag.nodes.passageaugmenter.prev_next_augmenter"]], "autorag.nodes.passageaugmenter.run module": [[20, "module-autorag.nodes.passageaugmenter.run"]], "autorag.nodes.passagecompressor package": [[21, null]], "autorag.nodes.passagecompressor.base module": [[21, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[21, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[21, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[21, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[21, "module-autorag.nodes.passagecompressor.run"]], "autorag.nodes.passagecompressor.tree_summarize module": [[21, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[22, null]], "autorag.nodes.passagefilter.base module": [[22, "module-autorag.nodes.passagefilter.base"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[22, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[22, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[22, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[22, "module-autorag.nodes.passagefilter.run"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[22, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[22, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[22, "module-autorag.nodes.passagefilter.threshold_cutoff"]], "autorag.nodes.passagereranker package": [[23, null]], "autorag.nodes.passagereranker.base module": [[23, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[23, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[23, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[23, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[23, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.flashrank module": [[23, "module-autorag.nodes.passagereranker.flashrank"]], "autorag.nodes.passagereranker.jina module": [[23, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[23, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.mixedbreadai module": [[23, "module-autorag.nodes.passagereranker.mixedbreadai"]], "autorag.nodes.passagereranker.monot5 module": [[23, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.openvino module": [[23, "module-autorag.nodes.passagereranker.openvino"]], "autorag.nodes.passagereranker.pass_reranker module": [[23, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[23, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[23, "module-autorag.nodes.passagereranker.run"]], "autorag.nodes.passagereranker.sentence_transformer module": [[23, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[24, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[24, "autorag-nodes-passagereranker-tart-modeling-enc-t5-module"]], "autorag.nodes.passagereranker.tart.tart module": [[24, "autorag-nodes-passagereranker-tart-tart-module"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[24, "autorag-nodes-passagereranker-tart-tokenization-enc-t5-module"]], "autorag.nodes.passagereranker.time_reranker module": [[23, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[23, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.voyageai module": [[23, "module-autorag.nodes.passagereranker.voyageai"]], "autorag.nodes.promptmaker package": [[25, null]], "autorag.nodes.promptmaker.base module": [[25, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[25, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[25, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[25, "module-autorag.nodes.promptmaker.run"]], "autorag.nodes.promptmaker.window_replacement module": [[25, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[26, null]], "autorag.nodes.queryexpansion.base module": [[26, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[26, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[26, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[26, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[26, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[26, "module-autorag.nodes.queryexpansion.run"]], "autorag.nodes.retrieval package": [[27, null]], "autorag.nodes.retrieval.base module": [[27, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[27, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[27, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[27, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[27, "module-autorag.nodes.retrieval.run"]], "autorag.nodes.retrieval.vectordb module": [[27, "module-autorag.nodes.retrieval.vectordb"]], "autorag.nodes.util module": [[18, "module-autorag.nodes.util"]], "autorag.parser module": [[0, "module-autorag.parser"]], "autorag.schema package": [[28, null]], "autorag.schema.base module": [[28, "module-autorag.schema.base"]], "autorag.schema.metricinput module": [[28, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[28, "module-autorag.schema.module"]], "autorag.schema.node module": [[28, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[29, null]], "autorag.utils.preprocess module": [[29, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[29, "module-autorag.utils.util"]], "autorag.validator module": [[0, "module-autorag.validator"]], "autorag.vectordb package": [[30, null]], "autorag.vectordb.base module": [[30, "module-autorag.vectordb.base"]], "autorag.vectordb.chroma module": [[30, "module-autorag.vectordb.chroma"]], "autorag.vectordb.milvus module": [[30, "module-autorag.vectordb.milvus"]], "autorag.vectordb.pinecone module": [[30, "module-autorag.vectordb.pinecone"]], "autorag.vectordb.weaviate module": [[30, "module-autorag.vectordb.weaviate"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[88, null]], "config.yaml": [[119, "config-yaml"]], "contents": [[36, "contents"]], "curl Commands": [[51, "curl-commands"]], "data": [[119, "data"]], "doc_id": [[36, "doc-id"]], "generation_gt": [[36, "generation-gt"]], "how the score is determined?": [[68, "how-the-score-is-determined"]], "jina_reranker": [[93, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[113, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[113, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[113, "ko-okt-for-korean"]], "llama_index LLM": [[72, null]], "metadata": [[36, "metadata"]], "path (Optional, but recommended)": [[36, "path-optional-but-recommended"]], "porter_stemmer": [[113, "porter-stemmer"]], "pre_retrieve_node_line": [[119, "pre-retrieve-node-line"]], "qid": [[36, "qid"]], "query": [[36, "query"]], "query_expansion": [[119, "query-expansion"]], "resources": [[119, "resources"]], "retrieval_gt": [[36, "retrieval-gt"]], "retrieve_node_line": [[119, "retrieve-node-line"]], "sem_score": [[71, null]], "space": [[113, "space"]], "start_end_idx (Optional but recommended)": [[36, "start-end-idx-optional-but-recommended"]], "sudachipy (For Japanese \ud83c\uddef\ud83c\uddf5)": [[113, "sudachipy-for-japanese"]], "trial": [[119, "trial"]], "trial.json": [[119, "trial-json"]], "v0.3 migration guide": [[70, "v0-3-migration-guide"]], "v0.3.7 migration guide": [[70, "v0-3-7-migration-guide"]], "vllm": [[74, null]], "voyageai_reranker": [[104, null]], "\u2705Apply Basic Example": [[54, "apply-basic-example"], [54, "id2"], [54, "id4"], [54, "id6"], [54, "id8"], [54, "id10"], [55, "apply-basic-example"], [55, "id2"], [55, "id4"]], "\u2705Basic Example": [[54, "basic-example"], [55, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[53, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[41, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[127, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[114, "hybrid-additional-explanation"], [115, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[56, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[56, "ecosystem"]], "\ud83d\udccc API Needed": [[41, "api-needed"]], "\ud83d\udccc Definition": [[53, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[43, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[53, "definition"], [53, "id1"], [53, "id2"], [53, "id3"], [53, "id5"], [54, "definition"], [54, "id1"], [54, "id3"], [54, "id5"], [54, "id7"], [54, "id9"], [55, "definition"], [55, "id1"], [55, "id3"]], "\ud83d\udd0e Definition": [[71, "definition"], [76, "definition"], [79, "definition"], [82, "definition"], [98, "definition"], [107, "definition"], [112, "definition"], [116, "definition"]], "\ud83d\udd22 Parameters": [[71, "parameters"], [79, "parameters"], [98, "parameters"], [107, "parameters"], [112, "parameters"], [116, "parameters"]], "\ud83d\udde3\ufe0f Talk with Founders": [[56, "talk-with-founders"]], "\ud83d\ude80 Road to Modular RAG": [[123, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[123, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[56, "why-autorag"]], "\ud83e\udd38 Benefits": [[76, "benefits"], [79, "benefits"], [82, "benefits"], [98, "benefits"], [112, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[56, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.legacy", "api_spec/autorag.data.legacy.corpus", "api_spec/autorag.data.legacy.qacreation", "api_spec/autorag.data.parse", "api_spec/autorag.data.qa", "api_spec/autorag.data.qa.evolve", "api_spec/autorag.data.qa.filter", "api_spec/autorag.data.qa.generation_gt", "api_spec/autorag.data.qa.query", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.deploy", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/autorag.vectordb", "api_spec/modules", "data_creation/chunk/chunk", "data_creation/chunk/langchain_chunk", "data_creation/chunk/llama_index_chunk", "data_creation/data_creation", "data_creation/data_format", "data_creation/legacy/legacy", "data_creation/legacy/ragas", "data_creation/legacy/tutorial", "data_creation/parse/clova", "data_creation/parse/langchain_parse", "data_creation/parse/llama_parse", "data_creation/parse/parse", "data_creation/parse/table_hybrid_parse", "data_creation/qa_creation/answer_gen", "data_creation/qa_creation/evolve", "data_creation/qa_creation/filter", "data_creation/qa_creation/qa_creation", "data_creation/qa_creation/query_gen", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "index", "install", "integration/llm/aws_bedrock", "integration/llm/huggingface_llm", "integration/llm/llm", "integration/llm/nvidia_nim", "integration/llm/ollama", "integration/vectordb/chroma", "integration/vectordb/couchbase", "integration/vectordb/milvus", "integration/vectordb/pinecone", "integration/vectordb/vectordb", "integration/vectordb/weaviate", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/flashrank_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/mixedbreadai_reranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/openvino_reranker", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/passage_reranker/voyageai_reranker", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/sample_config", "optimization/strategies", "roadmap/modular_rag", "structure", "test_your_rag", "troubleshooting", "tutorial"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.legacy.rst", "api_spec/autorag.data.legacy.corpus.rst", "api_spec/autorag.data.legacy.qacreation.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qa.rst", "api_spec/autorag.data.qa.evolve.rst", "api_spec/autorag.data.qa.filter.rst", "api_spec/autorag.data.qa.generation_gt.rst", "api_spec/autorag.data.qa.query.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.deploy.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/autorag.vectordb.rst", "api_spec/modules.rst", "data_creation/chunk/chunk.md", "data_creation/chunk/langchain_chunk.md", "data_creation/chunk/llama_index_chunk.md", "data_creation/data_creation.md", "data_creation/data_format.md", "data_creation/legacy/legacy.md", "data_creation/legacy/ragas.md", "data_creation/legacy/tutorial.md", "data_creation/parse/clova.md", "data_creation/parse/langchain_parse.md", "data_creation/parse/llama_parse.md", "data_creation/parse/parse.md", "data_creation/parse/table_hybrid_parse.md", "data_creation/qa_creation/answer_gen.md", "data_creation/qa_creation/evolve.md", "data_creation/qa_creation/filter.md", "data_creation/qa_creation/qa_creation.md", "data_creation/qa_creation/query_gen.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "index.rst", "install.md", "integration/llm/aws_bedrock.md", "integration/llm/huggingface_llm.md", "integration/llm/llm.md", "integration/llm/nvidia_nim.md", "integration/llm/ollama.md", "integration/vectordb/chroma.md", "integration/vectordb/couchbase.md", "integration/vectordb/milvus.md", "integration/vectordb/pinecone.md", "integration/vectordb/vectordb.md", "integration/vectordb/weaviate.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/flashrank_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/mixedbreadai_reranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/openvino_reranker.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/passage_reranker/voyageai_reranker.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/sample_config.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "test_your_rag.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"acomplete() (autorag.autoragbedrock method)": [[0, "autorag.AutoRAGBedrock.acomplete", false]], "add() (autorag.vectordb.base.basevectorstore method)": [[30, "autorag.vectordb.base.BaseVectorStore.add", false]], "add() (autorag.vectordb.chroma.chroma method)": [[30, "autorag.vectordb.chroma.Chroma.add", false]], "add() (autorag.vectordb.milvus.milvus method)": [[30, "autorag.vectordb.milvus.Milvus.add", false]], "add() (autorag.vectordb.pinecone.pinecone method)": [[30, "autorag.vectordb.pinecone.Pinecone.add", false]], "add() (autorag.vectordb.weaviate.weaviate method)": [[30, "autorag.vectordb.weaviate.Weaviate.add", false]], "add_essential_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_file_name() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.add_file_name", false]], "add_gen_gt() (in module autorag.data.qa.generation_gt.base)": [[11, "autorag.data.qa.generation_gt.base.add_gen_gt", false]], "aflatten_apply() (in module autorag.utils.util)": [[29, "autorag.utils.util.aflatten_apply", false]], "answer (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.answer", false]], "answer (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.answer", false]], "apirunner (class in autorag.deploy.api)": [[15, "autorag.deploy.api.ApiRunner", false]], "apply_recursive() (in module autorag.utils.util)": [[29, "autorag.utils.util.apply_recursive", false]], "astream() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.astream", false]], "astream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.astream", false]], "astream() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.astream", false]], "astream() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.astream", false]], "async_g_eval() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.async_g_eval", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_qa_gen_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.async_qa_gen_llama_index", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.chunker": [[0, "module-autorag.chunker", false]], "autorag.cli": [[0, "module-autorag.cli", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.chunk": [[2, "module-autorag.data.chunk", false]], "autorag.data.chunk.base": [[2, "module-autorag.data.chunk.base", false]], "autorag.data.chunk.langchain_chunk": [[2, "module-autorag.data.chunk.langchain_chunk", false]], "autorag.data.chunk.llama_index_chunk": [[2, "module-autorag.data.chunk.llama_index_chunk", false]], "autorag.data.chunk.run": [[2, "module-autorag.data.chunk.run", false]], "autorag.data.legacy": [[4, "module-autorag.data.legacy", false]], "autorag.data.legacy.corpus": [[5, "module-autorag.data.legacy.corpus", false]], "autorag.data.legacy.corpus.langchain": [[5, "module-autorag.data.legacy.corpus.langchain", false]], "autorag.data.legacy.corpus.llama_index": [[5, "module-autorag.data.legacy.corpus.llama_index", false]], "autorag.data.legacy.qacreation": [[6, "module-autorag.data.legacy.qacreation", false]], "autorag.data.legacy.qacreation.base": [[6, "module-autorag.data.legacy.qacreation.base", false]], "autorag.data.legacy.qacreation.llama_index": [[6, "module-autorag.data.legacy.qacreation.llama_index", false]], "autorag.data.legacy.qacreation.ragas": [[6, "module-autorag.data.legacy.qacreation.ragas", false]], "autorag.data.legacy.qacreation.simple": [[6, "module-autorag.data.legacy.qacreation.simple", false]], "autorag.data.parse": [[7, "module-autorag.data.parse", false]], "autorag.data.parse.base": [[7, "module-autorag.data.parse.base", false]], "autorag.data.parse.langchain_parse": [[7, "module-autorag.data.parse.langchain_parse", false]], "autorag.data.parse.llamaparse": [[7, "module-autorag.data.parse.llamaparse", false]], "autorag.data.parse.run": [[7, "module-autorag.data.parse.run", false]], "autorag.data.qa": [[8, "module-autorag.data.qa", false]], "autorag.data.qa.evolve": [[9, "module-autorag.data.qa.evolve", false]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false]], "autorag.data.qa.evolve.openai_query_evolve": [[9, "module-autorag.data.qa.evolve.openai_query_evolve", false]], "autorag.data.qa.evolve.prompt": [[9, "module-autorag.data.qa.evolve.prompt", false]], "autorag.data.qa.extract_evidence": [[8, "module-autorag.data.qa.extract_evidence", false]], "autorag.data.qa.filter": [[10, "module-autorag.data.qa.filter", false]], "autorag.data.qa.filter.dontknow": [[10, "module-autorag.data.qa.filter.dontknow", false]], "autorag.data.qa.filter.passage_dependency": [[10, "module-autorag.data.qa.filter.passage_dependency", false]], "autorag.data.qa.filter.prompt": [[10, "module-autorag.data.qa.filter.prompt", false]], "autorag.data.qa.generation_gt": [[11, "module-autorag.data.qa.generation_gt", false]], "autorag.data.qa.generation_gt.base": [[11, "module-autorag.data.qa.generation_gt.base", false]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false]], "autorag.data.qa.generation_gt.prompt": [[11, "module-autorag.data.qa.generation_gt.prompt", false]], "autorag.data.qa.query": [[12, "module-autorag.data.qa.query", false]], "autorag.data.qa.query.llama_gen_query": [[12, "module-autorag.data.qa.query.llama_gen_query", false]], "autorag.data.qa.query.openai_gen_query": [[12, "module-autorag.data.qa.query.openai_gen_query", false]], "autorag.data.qa.query.prompt": [[12, "module-autorag.data.qa.query.prompt", false]], "autorag.data.qa.sample": [[8, "module-autorag.data.qa.sample", false]], "autorag.data.qa.schema": [[8, "module-autorag.data.qa.schema", false]], "autorag.data.utils": [[14, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[14, "module-autorag.data.utils.util", false]], "autorag.deploy": [[15, "module-autorag.deploy", false]], "autorag.deploy.api": [[15, "module-autorag.deploy.api", false]], "autorag.deploy.base": [[15, "module-autorag.deploy.base", false]], "autorag.deploy.gradio": [[15, "module-autorag.deploy.gradio", false]], "autorag.evaluation": [[16, "module-autorag.evaluation", false]], "autorag.evaluation.generation": [[16, "module-autorag.evaluation.generation", false]], "autorag.evaluation.metric": [[17, "module-autorag.evaluation.metric", false]], "autorag.evaluation.metric.deepeval_prompt": [[17, "module-autorag.evaluation.metric.deepeval_prompt", false]], "autorag.evaluation.metric.generation": [[17, "module-autorag.evaluation.metric.generation", false]], "autorag.evaluation.metric.retrieval": [[17, "module-autorag.evaluation.metric.retrieval", false]], "autorag.evaluation.metric.retrieval_contents": [[17, "module-autorag.evaluation.metric.retrieval_contents", false]], "autorag.evaluation.metric.util": [[17, "module-autorag.evaluation.metric.util", false]], "autorag.evaluation.retrieval": [[16, "module-autorag.evaluation.retrieval", false]], "autorag.evaluation.retrieval_contents": [[16, "module-autorag.evaluation.retrieval_contents", false]], "autorag.evaluation.util": [[16, "module-autorag.evaluation.util", false]], "autorag.evaluator": [[0, "module-autorag.evaluator", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[18, "module-autorag.nodes", false]], "autorag.nodes.generator": [[19, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[19, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[19, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[19, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.run": [[19, "module-autorag.nodes.generator.run", false]], "autorag.nodes.generator.vllm": [[19, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter": [[20, "module-autorag.nodes.passageaugmenter", false]], "autorag.nodes.passageaugmenter.base": [[20, "module-autorag.nodes.passageaugmenter.base", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[20, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false]], "autorag.nodes.passageaugmenter.run": [[20, "module-autorag.nodes.passageaugmenter.run", false]], "autorag.nodes.passagecompressor": [[21, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[21, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[21, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[21, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[21, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.run": [[21, "module-autorag.nodes.passagecompressor.run", false]], "autorag.nodes.passagecompressor.tree_summarize": [[21, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter": [[22, "module-autorag.nodes.passagefilter", false]], "autorag.nodes.passagefilter.base": [[22, "module-autorag.nodes.passagefilter.base", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[22, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[22, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[22, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagefilter.run": [[22, "module-autorag.nodes.passagefilter.run", false]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[22, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[22, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false]], "autorag.nodes.passagefilter.threshold_cutoff": [[22, "module-autorag.nodes.passagefilter.threshold_cutoff", false]], "autorag.nodes.passagereranker": [[23, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[23, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[23, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[23, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[23, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[23, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.flashrank": [[23, "module-autorag.nodes.passagereranker.flashrank", false]], "autorag.nodes.passagereranker.jina": [[23, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[23, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.mixedbreadai": [[23, "module-autorag.nodes.passagereranker.mixedbreadai", false]], "autorag.nodes.passagereranker.monot5": [[23, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.openvino": [[23, "module-autorag.nodes.passagereranker.openvino", false]], "autorag.nodes.passagereranker.pass_reranker": [[23, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[23, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.run": [[23, "module-autorag.nodes.passagereranker.run", false]], "autorag.nodes.passagereranker.sentence_transformer": [[23, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.time_reranker": [[23, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[23, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.passagereranker.voyageai": [[23, "module-autorag.nodes.passagereranker.voyageai", false]], "autorag.nodes.promptmaker": [[25, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[25, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[25, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[25, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.run": [[25, "module-autorag.nodes.promptmaker.run", false]], "autorag.nodes.promptmaker.window_replacement": [[25, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[26, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[26, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[26, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[26, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[26, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[26, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.queryexpansion.run": [[26, "module-autorag.nodes.queryexpansion.run", false]], "autorag.nodes.retrieval": [[27, "module-autorag.nodes.retrieval", false]], "autorag.nodes.retrieval.base": [[27, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[27, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[27, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[27, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.retrieval.run": [[27, "module-autorag.nodes.retrieval.run", false]], "autorag.nodes.retrieval.vectordb": [[27, "module-autorag.nodes.retrieval.vectordb", false]], "autorag.nodes.util": [[18, "module-autorag.nodes.util", false]], "autorag.parser": [[0, "module-autorag.parser", false]], "autorag.schema": [[28, "module-autorag.schema", false]], "autorag.schema.base": [[28, "module-autorag.schema.base", false]], "autorag.schema.metricinput": [[28, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[28, "module-autorag.schema.module", false]], "autorag.schema.node": [[28, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[29, "module-autorag.utils", false]], "autorag.utils.preprocess": [[29, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[29, "module-autorag.utils.util", false]], "autorag.validator": [[0, "module-autorag.validator", false]], "autorag.vectordb": [[30, "module-autorag.vectordb", false]], "autorag.vectordb.base": [[30, "module-autorag.vectordb.base", false]], "autorag.vectordb.chroma": [[30, "module-autorag.vectordb.chroma", false]], "autorag.vectordb.milvus": [[30, "module-autorag.vectordb.milvus", false]], "autorag.vectordb.pinecone": [[30, "module-autorag.vectordb.pinecone", false]], "autorag.vectordb.weaviate": [[30, "module-autorag.vectordb.weaviate", false]], "autorag.web": [[0, "module-autorag.web", false]], "autorag_metric() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.autorag_metric", false]], "autorag_metric_loop() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.autorag_metric_loop", false]], "autoragbedrock (class in autorag)": [[0, "autorag.AutoRAGBedrock", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "basegenerator (class in autorag.nodes.generator.base)": [[19, "autorag.nodes.generator.base.BaseGenerator", false]], "basemodule (class in autorag.schema.base)": [[28, "autorag.schema.base.BaseModule", false]], "basepassageaugmenter (class in autorag.nodes.passageaugmenter.base)": [[20, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagefilter (class in autorag.nodes.passagefilter.base)": [[22, "autorag.nodes.passagefilter.base.BasePassageFilter", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[23, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[25, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[26, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "baserunner (class in autorag.deploy.base)": [[15, "autorag.deploy.base.BaseRunner", false]], "basevectorstore (class in autorag.vectordb.base)": [[30, "autorag.vectordb.base.BaseVectorStore", false]], "batch_apply() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_filter", false]], "bert_score() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.bert_score", false]], "bleu() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.bleu", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "calculate_cosine_similarity() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.calculate_cosine_similarity", false]], "calculate_inner_product() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.calculate_inner_product", false]], "calculate_l2_distance() (in module autorag.evaluation.metric.util)": [[17, "autorag.evaluation.metric.util.calculate_l2_distance", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_embedding_model() (in module autorag.evaluation.util)": [[16, "autorag.evaluation.util.cast_embedding_model", false]], "cast_metrics() (in module autorag.evaluation.util)": [[16, "autorag.evaluation.util.cast_metrics", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passageaugmenter.base.basepassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[21, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagefilter.base.basepassagefilter method)": [[22, "autorag.nodes.passagefilter.base.BasePassageFilter.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[23, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[25, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[26, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[27, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "cast_to_run() (autorag.schema.base.basemodule method)": [[28, "autorag.schema.base.BaseModule.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[26, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chroma (class in autorag.vectordb.chroma)": [[30, "autorag.vectordb.chroma.Chroma", false]], "chunk() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.chunk", false]], "chunker (class in autorag.chunker)": [[0, "autorag.chunker.Chunker", false]], "chunker_node() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.chunker_node", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[23, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[23, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compress_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.compress_ragas", false]], "compress_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.compress_ragas", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[23, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.concept_completion_query_gen", false]], "concept_completion_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.concept_completion_query_gen", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.conditional_evolve_ragas", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.conditional_evolve_ragas", false]], "content (autorag.deploy.api.passage attribute)": [[15, "autorag.deploy.api.Passage.content", false]], "content (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.content", false]], "convert_datetime_string() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "custom_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.custom_query_gen", false]], "decode_multiple_json_from_bytes() (in module autorag.utils.util)": [[29, "autorag.utils.util.decode_multiple_json_from_bytes", false]], "deepeval_faithfulness() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.deepeval_faithfulness", false]], "delete() (autorag.vectordb.base.basevectorstore method)": [[30, "autorag.vectordb.base.BaseVectorStore.delete", false]], "delete() (autorag.vectordb.chroma.chroma method)": [[30, "autorag.vectordb.chroma.Chroma.delete", false]], "delete() (autorag.vectordb.milvus.milvus method)": [[30, "autorag.vectordb.milvus.Milvus.delete", false]], "delete() (autorag.vectordb.pinecone.pinecone method)": [[30, "autorag.vectordb.pinecone.Pinecone.delete", false]], "delete() (autorag.vectordb.weaviate.weaviate method)": [[30, "autorag.vectordb.weaviate.Weaviate.delete", false]], "delete_collection() (autorag.vectordb.milvus.milvus method)": [[30, "autorag.vectordb.milvus.Milvus.delete_collection", false]], "delete_collection() (autorag.vectordb.weaviate.weaviate method)": [[30, "autorag.vectordb.weaviate.Weaviate.delete_collection", false]], "delete_index() (autorag.vectordb.pinecone.pinecone method)": [[30, "autorag.vectordb.pinecone.Pinecone.delete_index", false]], "demojize() (in module autorag.utils.util)": [[29, "autorag.utils.util.demojize", false]], "dict_to_markdown() (in module autorag.utils.util)": [[29, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[29, "autorag.utils.util.dict_to_markdown_table", false]], "distance_to_score() (in module autorag.vectordb.weaviate)": [[30, "autorag.vectordb.weaviate.distance_to_score", false]], "distribute_list_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.distribute_list_by_ratio", false]], "doc_id (autorag.deploy.api.passage attribute)": [[15, "autorag.deploy.api.Passage.doc_id", false]], "doc_id (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.doc_id", false]], "dontknow_filter_llama_index() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_llama_index", false]], "dontknow_filter_openai() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_openai", false]], "dontknow_filter_rule_based() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_rule_based", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "edit_summary_df_params() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.edit_summary_df_params", false]], "embedding_query_content() (in module autorag.utils.util)": [[29, "autorag.utils.util.embedding_query_content", false]], "empty_cuda_cache() (in module autorag.utils.util)": [[29, "autorag.utils.util.empty_cuda_cache", false]], "end_idx (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.end_idx", false]], "evaluate_generation() (in module autorag.evaluation.generation)": [[16, "autorag.evaluation.generation.evaluate_generation", false]], "evaluate_generator_node() (in module autorag.nodes.generator.run)": [[19, "autorag.nodes.generator.run.evaluate_generator_node", false]], "evaluate_generator_result() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.evaluate_generator_result", false]], "evaluate_one_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.evaluate_one_prompt_maker_node", false]], "evaluate_one_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[26, "autorag.nodes.queryexpansion.run.evaluate_one_query_expansion_node", false]], "evaluate_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[21, "autorag.nodes.passagecompressor.run.evaluate_passage_compressor_node", false]], "evaluate_retrieval() (in module autorag.evaluation.retrieval)": [[16, "autorag.evaluation.retrieval.evaluate_retrieval", false]], "evaluate_retrieval_contents() (in module autorag.evaluation.retrieval_contents)": [[16, "autorag.evaluation.retrieval_contents.evaluate_retrieval_contents", false]], "evaluate_retrieval_node() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.evaluate_retrieval_node", false]], "evaluator (class in autorag.evaluator)": [[0, "autorag.evaluator.Evaluator", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "evolved_query (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.evolved_query", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[29, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_node_strategy", false]], "extract_retrieve_passage() (autorag.deploy.api.apirunner method)": [[15, "autorag.deploy.api.ApiRunner.extract_retrieve_passage", false]], "extract_values() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "extract_vectordb_config() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_vectordb_config", false]], "factoid_query_gen() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.factoid_query_gen", false]], "factoid_query_gen() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.factoid_query_gen", false]], "faithfulnesstemplate (class in autorag.evaluation.metric.deepeval_prompt)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate", false]], "fetch() (autorag.vectordb.base.basevectorstore method)": [[30, "autorag.vectordb.base.BaseVectorStore.fetch", false]], "fetch() (autorag.vectordb.chroma.chroma method)": [[30, "autorag.vectordb.chroma.Chroma.fetch", false]], "fetch() (autorag.vectordb.milvus.milvus method)": [[30, "autorag.vectordb.milvus.Milvus.fetch", false]], "fetch() (autorag.vectordb.pinecone.pinecone method)": [[30, "autorag.vectordb.pinecone.Pinecone.fetch", false]], "fetch() (autorag.vectordb.weaviate.weaviate method)": [[30, "autorag.vectordb.weaviate.Weaviate.fetch", false]], "fetch_contents() (in module autorag.utils.util)": [[29, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[29, "autorag.utils.util.fetch_one_content", false]], "file_page (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.file_page", false]], "filepath (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.filepath", false]], "filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[29, "autorag.utils.util.filter_dict_keys", false]], "filter_exist_ids() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.filter_exist_ids", false]], "filter_exist_ids_from_retrieval_gt() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.filter_exist_ids_from_retrieval_gt", false]], "find_key_values() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_trial_dir", false]], "find_unique_elems() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.find_unique_elems", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[23, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[23, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[23, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flashrank_run_model() (in module autorag.nodes.passagereranker.flashrank)": [[23, "autorag.nodes.passagereranker.flashrank.flashrank_run_model", false]], "flashrankreranker (class in autorag.nodes.passagereranker.flashrank)": [[23, "autorag.nodes.passagereranker.flashrank.FlashRankReranker", false]], "flatmap() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[29, "autorag.utils.util.flatten_apply", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[28, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[28, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[28, "autorag.schema.node.Node.from_dict", false]], "from_parquet() (autorag.chunker.chunker class method)": [[0, "autorag.chunker.Chunker.from_parquet", false]], "from_trial_folder() (autorag.deploy.base.baserunner class method)": [[15, "autorag.deploy.base.BaseRunner.from_trial_folder", false]], "from_yaml() (autorag.deploy.base.baserunner class method)": [[15, "autorag.deploy.base.BaseRunner.from_yaml", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[25, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "g_eval() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.g_eval", false]], "generate_answers() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_answers", false]], "generate_basic_answer() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_basic_answer", false]], "generate_claims() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_claims", false]], "generate_qa_llama_index() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index", false]], "generate_qa_llama_index_by_ratio() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.generate_qa_llama_index_by_ratio", false]], "generate_qa_ragas() (in module autorag.data.legacy.qacreation.ragas)": [[6, "autorag.data.legacy.qacreation.ragas.generate_qa_ragas", false]], "generate_qa_row() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_qa_row", false]], "generate_simple_qa_dataset() (in module autorag.data.legacy.qacreation.simple)": [[6, "autorag.data.legacy.qacreation.simple.generate_simple_qa_dataset", false]], "generate_truths() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_truths", false]], "generate_verdicts() (autorag.evaluation.metric.deepeval_prompt.faithfulnesstemplate static method)": [[17, "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate.generate_verdicts", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_text (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.generated_text", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[19, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[29, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_event_loop() (in module autorag.utils.util)": [[29, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_file_metadata", false]], "get_hybrid_execution_times() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.get_hybrid_execution_times", false]], "get_id_scores() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.get_id_scores", false]], "get_ids_and_scores() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.get_ids_and_scores", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[28, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[26, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_scores_by_ids() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.get_scores_by_ids", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_start_end_idx", false]], "get_structured_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_structured_result", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "get_support_vectordb() (in module autorag.vectordb)": [[30, "autorag.vectordb.get_support_vectordb", false]], "gradiorunner (class in autorag.deploy.gradio)": [[15, "autorag.deploy.gradio.GradioRunner", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "huggingface_evaluate() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.huggingface_evaluate", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[26, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_dont_know (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.is_dont_know", false]], "is_exist() (autorag.vectordb.base.basevectorstore method)": [[30, "autorag.vectordb.base.BaseVectorStore.is_exist", false]], "is_exist() (autorag.vectordb.chroma.chroma method)": [[30, "autorag.vectordb.chroma.Chroma.is_exist", false]], "is_exist() (autorag.vectordb.milvus.milvus method)": [[30, "autorag.vectordb.milvus.Milvus.is_exist", false]], "is_exist() (autorag.vectordb.pinecone.pinecone method)": [[30, "autorag.vectordb.pinecone.Pinecone.is_exist", false]], "is_exist() (autorag.vectordb.weaviate.weaviate method)": [[30, "autorag.vectordb.weaviate.Weaviate.is_exist", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[28, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "is_passage_dependent (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.is_passage_dependent", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[23, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[23, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_chunk() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk", false]], "langchain_chunk_pure() (in module autorag.data.chunk.langchain_chunk)": [[2, "autorag.data.chunk.langchain_chunk.langchain_chunk_pure", false]], "langchain_documents_to_parquet() (in module autorag.data.legacy.corpus.langchain)": [[5, "autorag.data.legacy.corpus.langchain.langchain_documents_to_parquet", false]], "langchain_parse() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse", false]], "langchain_parse_pure() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.qa.schema.qa property)": [[8, "autorag.data.qa.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.qa.schema.corpus property)": [[8, "autorag.data.qa.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_chunk() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk", false]], "llama_index_chunk_pure() (in module autorag.data.chunk.llama_index_chunk)": [[2, "autorag.data.chunk.llama_index_chunk.llama_index_chunk_pure", false]], "llama_index_generate_base() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.llama_index_generate_base", false]], "llama_index_generate_base() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.llama_index_generate_base", false]], "llama_parse() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse", false]], "llama_parse_pure() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse_pure", false]], "llama_text_node_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_text_node_to_parquet", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llm (autorag.nodes.passagecompressor.refine.refine attribute)": [[21, "autorag.nodes.passagecompressor.refine.Refine.llm", false]], "llm (autorag.nodes.passagecompressor.tree_summarize.treesummarize attribute)": [[21, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize.llm", false]], "llm (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.llm", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[21, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_all_vectordb_from_yaml() (in module autorag.vectordb)": [[30, "autorag.vectordb.load_all_vectordb_from_yaml", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_summary_file() (in module autorag.utils.util)": [[29, "autorag.utils.util.load_summary_file", false]], "load_vectordb() (in module autorag.vectordb)": [[30, "autorag.vectordb.load_vectordb", false]], "load_vectordb_from_yaml() (in module autorag.vectordb)": [[30, "autorag.vectordb.load_vectordb_from_yaml", false]], "load_yaml() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.load_yaml", false]], "load_yaml_config() (in module autorag.utils.util)": [[29, "autorag.utils.util.load_yaml_config", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[25, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[21, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[29, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[29, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_custom_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_custom_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.util)": [[18, "autorag.nodes.util.make_generator_callable_param", false]], "make_generator_callable_params() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.make_generator_callable_params", false]], "make_generator_instance() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.make_generator_instance", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_metadata_list() (in module autorag.data.chunk.base)": [[2, "autorag.data.chunk.base.make_metadata_list", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_qa_with_existing_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_qa_with_existing_qa", false]], "make_retrieval_callable_params() (in module autorag.nodes.queryexpansion.run)": [[26, "autorag.nodes.queryexpansion.run.make_retrieval_callable_params", false]], "make_retrieval_gt_contents() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.make_retrieval_gt_contents", false]], "make_single_content_qa() (in module autorag.data.legacy.qacreation.base)": [[6, "autorag.data.legacy.qacreation.base.make_single_content_qa", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "map() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.map", false]], "map() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.map", false]], "map() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.map", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "meteor() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.meteor", false]], "metricinput (class in autorag.schema.metricinput)": [[28, "autorag.schema.metricinput.MetricInput", false]], "milvus (class in autorag.vectordb.milvus)": [[30, "autorag.vectordb.milvus.Milvus", false]], "mixedbreadai_rerank_pure() (in module autorag.nodes.passagereranker.mixedbreadai)": [[23, "autorag.nodes.passagereranker.mixedbreadai.mixedbreadai_rerank_pure", false]], "mixedbreadaireranker (class in autorag.nodes.passagereranker.mixedbreadai)": [[23, "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker", false]], "mockembeddingrandom (class in autorag)": [[0, "autorag.MockEmbeddingRandom", false]], "model_computed_fields (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.passage attribute)": [[15, "autorag.deploy.api.Passage.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_computed_fields", false]], "model_computed_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_config", false]], "model_config (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_config", false]], "model_config (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_config", false]], "model_config (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_config", false]], "model_config (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_config", false]], "model_config (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_config", false]], "model_config (autorag.deploy.api.passage attribute)": [[15, "autorag.deploy.api.Passage.model_config", false]], "model_config (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_config", false]], "model_config (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.model_config", false]], "model_config (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_config", false]], "model_config (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_config", false]], "model_config (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.model_config", false]], "model_config (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_config", false]], "model_config (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_fields", false]], "model_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_fields", false]], "model_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.model_fields", false]], "model_fields (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.model_fields", false]], "model_fields (autorag.deploy.api.passage attribute)": [[15, "autorag.deploy.api.Passage.model_fields", false]], "model_fields (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_fields", false]], "model_fields (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.model_fields", false]], "model_fields (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_fields", false]], "model_fields (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_fields", false]], "model_fields (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.model_fields", false]], "model_fields (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_fields", false]], "model_fields (autorag.mockembeddingrandom attribute)": [[0, "autorag.MockEmbeddingRandom.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "model_post_init() (autorag.autoragbedrock method)": [[0, "autorag.AutoRAGBedrock.model_post_init", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.chunker", false], [0, "module-autorag.cli", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.evaluator", false], [0, "module-autorag.node_line", false], [0, "module-autorag.parser", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.validator", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [2, "module-autorag.data.chunk", false], [2, "module-autorag.data.chunk.base", false], [2, "module-autorag.data.chunk.langchain_chunk", false], [2, "module-autorag.data.chunk.llama_index_chunk", false], [2, "module-autorag.data.chunk.run", false], [4, "module-autorag.data.legacy", false], [5, "module-autorag.data.legacy.corpus", false], [5, "module-autorag.data.legacy.corpus.langchain", false], [5, "module-autorag.data.legacy.corpus.llama_index", false], [6, "module-autorag.data.legacy.qacreation", false], [6, "module-autorag.data.legacy.qacreation.base", false], [6, "module-autorag.data.legacy.qacreation.llama_index", false], [6, "module-autorag.data.legacy.qacreation.ragas", false], [6, "module-autorag.data.legacy.qacreation.simple", false], [7, "module-autorag.data.parse", false], [7, "module-autorag.data.parse.base", false], [7, "module-autorag.data.parse.langchain_parse", false], [7, "module-autorag.data.parse.llamaparse", false], [7, "module-autorag.data.parse.run", false], [8, "module-autorag.data.qa", false], [8, "module-autorag.data.qa.extract_evidence", false], [8, "module-autorag.data.qa.sample", false], [8, "module-autorag.data.qa.schema", false], [9, "module-autorag.data.qa.evolve", false], [9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false], [9, "module-autorag.data.qa.evolve.openai_query_evolve", false], [9, "module-autorag.data.qa.evolve.prompt", false], [10, "module-autorag.data.qa.filter", false], [10, "module-autorag.data.qa.filter.dontknow", false], [10, "module-autorag.data.qa.filter.passage_dependency", false], [10, "module-autorag.data.qa.filter.prompt", false], [11, "module-autorag.data.qa.generation_gt", false], [11, "module-autorag.data.qa.generation_gt.base", false], [11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.prompt", false], [12, "module-autorag.data.qa.query", false], [12, "module-autorag.data.qa.query.llama_gen_query", false], [12, "module-autorag.data.qa.query.openai_gen_query", false], [12, "module-autorag.data.qa.query.prompt", false], [14, "module-autorag.data.utils", false], [14, "module-autorag.data.utils.util", false], [15, "module-autorag.deploy", false], [15, "module-autorag.deploy.api", false], [15, "module-autorag.deploy.base", false], [15, "module-autorag.deploy.gradio", false], [16, "module-autorag.evaluation", false], [16, "module-autorag.evaluation.generation", false], [16, "module-autorag.evaluation.retrieval", false], [16, "module-autorag.evaluation.retrieval_contents", false], [16, "module-autorag.evaluation.util", false], [17, "module-autorag.evaluation.metric", false], [17, "module-autorag.evaluation.metric.deepeval_prompt", false], [17, "module-autorag.evaluation.metric.generation", false], [17, "module-autorag.evaluation.metric.retrieval", false], [17, "module-autorag.evaluation.metric.retrieval_contents", false], [17, "module-autorag.evaluation.metric.util", false], [18, "module-autorag.nodes", false], [18, "module-autorag.nodes.util", false], [19, "module-autorag.nodes.generator", false], [19, "module-autorag.nodes.generator.base", false], [19, "module-autorag.nodes.generator.llama_index_llm", false], [19, "module-autorag.nodes.generator.openai_llm", false], [19, "module-autorag.nodes.generator.run", false], [19, "module-autorag.nodes.generator.vllm", false], [20, "module-autorag.nodes.passageaugmenter", false], [20, "module-autorag.nodes.passageaugmenter.base", false], [20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [20, "module-autorag.nodes.passageaugmenter.prev_next_augmenter", false], [20, "module-autorag.nodes.passageaugmenter.run", false], [21, "module-autorag.nodes.passagecompressor", false], [21, "module-autorag.nodes.passagecompressor.base", false], [21, "module-autorag.nodes.passagecompressor.longllmlingua", false], [21, "module-autorag.nodes.passagecompressor.pass_compressor", false], [21, "module-autorag.nodes.passagecompressor.refine", false], [21, "module-autorag.nodes.passagecompressor.run", false], [21, "module-autorag.nodes.passagecompressor.tree_summarize", false], [22, "module-autorag.nodes.passagefilter", false], [22, "module-autorag.nodes.passagefilter.base", false], [22, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [22, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [22, "module-autorag.nodes.passagefilter.recency", false], [22, "module-autorag.nodes.passagefilter.run", false], [22, "module-autorag.nodes.passagefilter.similarity_percentile_cutoff", false], [22, "module-autorag.nodes.passagefilter.similarity_threshold_cutoff", false], [22, "module-autorag.nodes.passagefilter.threshold_cutoff", false], [23, "module-autorag.nodes.passagereranker", false], [23, "module-autorag.nodes.passagereranker.base", false], [23, "module-autorag.nodes.passagereranker.cohere", false], [23, "module-autorag.nodes.passagereranker.colbert", false], [23, "module-autorag.nodes.passagereranker.flag_embedding", false], [23, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [23, "module-autorag.nodes.passagereranker.flashrank", false], [23, "module-autorag.nodes.passagereranker.jina", false], [23, "module-autorag.nodes.passagereranker.koreranker", false], [23, "module-autorag.nodes.passagereranker.mixedbreadai", false], [23, "module-autorag.nodes.passagereranker.monot5", false], [23, "module-autorag.nodes.passagereranker.openvino", false], [23, "module-autorag.nodes.passagereranker.pass_reranker", false], [23, "module-autorag.nodes.passagereranker.rankgpt", false], [23, "module-autorag.nodes.passagereranker.run", false], [23, "module-autorag.nodes.passagereranker.sentence_transformer", false], [23, "module-autorag.nodes.passagereranker.time_reranker", false], [23, "module-autorag.nodes.passagereranker.upr", false], [23, "module-autorag.nodes.passagereranker.voyageai", false], [25, "module-autorag.nodes.promptmaker", false], [25, "module-autorag.nodes.promptmaker.base", false], [25, "module-autorag.nodes.promptmaker.fstring", false], [25, "module-autorag.nodes.promptmaker.long_context_reorder", false], [25, "module-autorag.nodes.promptmaker.run", false], [25, "module-autorag.nodes.promptmaker.window_replacement", false], [26, "module-autorag.nodes.queryexpansion", false], [26, "module-autorag.nodes.queryexpansion.base", false], [26, "module-autorag.nodes.queryexpansion.hyde", false], [26, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [26, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [26, "module-autorag.nodes.queryexpansion.query_decompose", false], [26, "module-autorag.nodes.queryexpansion.run", false], [27, "module-autorag.nodes.retrieval", false], [27, "module-autorag.nodes.retrieval.base", false], [27, "module-autorag.nodes.retrieval.bm25", false], [27, "module-autorag.nodes.retrieval.hybrid_cc", false], [27, "module-autorag.nodes.retrieval.hybrid_rrf", false], [27, "module-autorag.nodes.retrieval.run", false], [27, "module-autorag.nodes.retrieval.vectordb", false], [28, "module-autorag.schema", false], [28, "module-autorag.schema.base", false], [28, "module-autorag.schema.metricinput", false], [28, "module-autorag.schema.module", false], [28, "module-autorag.schema.node", false], [29, "module-autorag.utils", false], [29, "module-autorag.utils.preprocess", false], [29, "module-autorag.utils.util", false], [30, "module-autorag.vectordb", false], [30, "module-autorag.vectordb.base", false], [30, "module-autorag.vectordb.chroma", false], [30, "module-autorag.vectordb.milvus", false], [30, "module-autorag.vectordb.pinecone", false], [30, "module-autorag.vectordb.weaviate", false]], "module (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[28, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[28, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[23, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[23, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[28, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[29, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[29, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "one_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.one_hop_question", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[29, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "openvino_run_model() (in module autorag.nodes.passagereranker.openvino)": [[23, "autorag.nodes.passagereranker.openvino.openvino_run_model", false]], "openvinoreranker (class in autorag.nodes.passagereranker.openvino)": [[23, "autorag.nodes.passagereranker.openvino.OpenVINOReranker", false]], "optimize_hybrid() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.optimize_hybrid", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "parse_all_files() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.parse_all_files", false]], "parse_output() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.parse_output", false]], "parser (class in autorag.parser)": [[0, "autorag.parser.Parser", false]], "parser_node() (in module autorag.data.parse.base)": [[7, "autorag.data.parse.base.parser_node", false]], "passage (class in autorag.deploy.api)": [[15, "autorag.deploy.api.Passage", false]], "passage_dependency_filter_llama_index() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_llama_index", false]], "passage_dependency_filter_openai() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_openai", false]], "passage_index (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.passage_index", false]], "passages (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.passages", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[21, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[20, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[22, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[26, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[23, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[22, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pinecone (class in autorag.vectordb.pinecone)": [[30, "autorag.vectordb.pinecone.Pinecone", false]], "pop_params() (in module autorag.utils.util)": [[29, "autorag.utils.util.pop_params", false]], "preprocess_text() (in module autorag.utils.util)": [[29, "autorag.utils.util.preprocess_text", false]], "prev_next_augmenter_pure() (in module autorag.nodes.passageaugmenter.prev_next_augmenter)": [[20, "autorag.nodes.passageaugmenter.prev_next_augmenter.prev_next_augmenter_pure", false]], "prevnextpassageaugmenter (class in autorag.nodes.passageaugmenter.prev_next_augmenter)": [[20, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter", false]], "process_batch() (in module autorag.utils.util)": [[29, "autorag.utils.util.process_batch", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passageaugmenter.prev_next_augmenter.prevnextpassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[21, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[21, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[22, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[22, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[22, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_percentile_cutoff.similaritypercentilecutoff method)": [[22, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.similarity_threshold_cutoff.similaritythresholdcutoff method)": [[22, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.threshold_cutoff.thresholdcutoff method)": [[22, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[23, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[23, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[23, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[23, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flashrank.flashrankreranker method)": [[23, "autorag.nodes.passagereranker.flashrank.FlashRankReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[23, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[23, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.mixedbreadai.mixedbreadaireranker method)": [[23, "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[23, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.openvino.openvinoreranker method)": [[23, "autorag.nodes.passagereranker.openvino.OpenVINOReranker.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[23, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[23, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[23, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[23, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[23, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.passagereranker.voyageai.voyageaireranker method)": [[23, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[25, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[25, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[25, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[26, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[26, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[26, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[27, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[27, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.nodes.retrieval.vectordb.vectordb method)": [[27, "autorag.nodes.retrieval.vectordb.VectorDB.pure", false]], "pure() (autorag.schema.base.basemodule method)": [[28, "autorag.schema.base.BaseModule.pure", false]], "qa (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.QA", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.data.qa.query.openai_gen_query.response attribute)": [[12, "autorag.data.qa.query.openai_gen_query.Response.query", false]], "query (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.query", false]], "query() (autorag.vectordb.base.basevectorstore method)": [[30, "autorag.vectordb.base.BaseVectorStore.query", false]], "query() (autorag.vectordb.chroma.chroma method)": [[30, "autorag.vectordb.chroma.Chroma.query", false]], "query() (autorag.vectordb.milvus.milvus method)": [[30, "autorag.vectordb.milvus.Milvus.query", false]], "query() (autorag.vectordb.pinecone.pinecone method)": [[30, "autorag.vectordb.pinecone.Pinecone.query", false]], "query() (autorag.vectordb.weaviate.weaviate method)": [[30, "autorag.vectordb.weaviate.Weaviate.query", false]], "query_evolve_openai_base() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.query_evolve_openai_base", false]], "query_gen_openai_base() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.query_gen_openai_base", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[26, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "queryrequest (class in autorag.deploy.api)": [[15, "autorag.deploy.api.QueryRequest", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.range_single_hop", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[23, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "rankgpt_rerank_prompt (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.rankgpt_rerank_prompt", false]], "raw (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Raw", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.reasoning_evolve_ragas", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.reasoning_evolve_ragas", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[22, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[21, "autorag.nodes.passagecompressor.refine.Refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response", false]], "response (class in autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.Response", false]], "response (class in autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.Response", false]], "response (class in autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response", false]], "response (class in autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.Response", false]], "restart_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.restart_trial", false]], "result (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.result", false]], "result_column (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[29, "autorag.utils.util.result_to_dataframe", false]], "retrieval_f1() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_f1", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrieval_map() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_map", false]], "retrieval_mrr() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_mrr", false]], "retrieval_ndcg() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_ndcg", false]], "retrieval_precision() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_precision", false]], "retrieval_recall() (in module autorag.evaluation.metric.retrieval)": [[17, "autorag.evaluation.metric.retrieval.retrieval_recall", false]], "retrieval_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.retrieval_token_f1", false]], "retrieval_token_precision() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.retrieval_token_precision", false]], "retrieval_token_recall() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.retrieval_token_recall", false]], "retrievalresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RetrievalResponse", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "retrieved_passage (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.retrieved_passage", false]], "retrieved_passage (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.retrieved_passage", false]], "retrievedpassage (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RetrievedPassage", false]], "rouge() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.rouge", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.base.runner method)": [[15, "autorag.deploy.base.Runner.run", false]], "run() (autorag.deploy.gradio.gradiorunner method)": [[15, "autorag.deploy.gradio.GradioRunner.run", false]], "run() (autorag.schema.node.node method)": [[28, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.api.apirunner method)": [[15, "autorag.deploy.api.ApiRunner.run_api_server", false]], "run_chunker() (in module autorag.data.chunk.run)": [[2, "autorag.data.chunk.run.run_chunker", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[27, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[27, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_evaluator() (autorag.schema.base.basemodule class method)": [[28, "autorag.schema.base.BaseModule.run_evaluator", false]], "run_generator_node() (in module autorag.nodes.generator.run)": [[19, "autorag.nodes.generator.run.run_generator_node", false]], "run_node (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_parser() (in module autorag.data.parse.run)": [[7, "autorag.data.parse.run.run_parser", false]], "run_passage_augmenter_node() (in module autorag.nodes.passageaugmenter.run)": [[20, "autorag.nodes.passageaugmenter.run.run_passage_augmenter_node", false]], "run_passage_compressor_node() (in module autorag.nodes.passagecompressor.run)": [[21, "autorag.nodes.passagecompressor.run.run_passage_compressor_node", false]], "run_passage_filter_node() (in module autorag.nodes.passagefilter.run)": [[22, "autorag.nodes.passagefilter.run.run_passage_filter_node", false]], "run_passage_reranker_node() (in module autorag.nodes.passagereranker.run)": [[23, "autorag.nodes.passagereranker.run.run_passage_reranker_node", false]], "run_prompt_maker_node() (in module autorag.nodes.promptmaker.run)": [[25, "autorag.nodes.promptmaker.run.run_prompt_maker_node", false]], "run_query_embedding_batch() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.run_query_embedding_batch", false]], "run_query_expansion_node() (in module autorag.nodes.queryexpansion.run)": [[26, "autorag.nodes.queryexpansion.run.run_query_expansion_node", false]], "run_retrieval_node() (in module autorag.nodes.retrieval.run)": [[27, "autorag.nodes.retrieval.run.run_retrieval_node", false]], "run_web() (autorag.deploy.gradio.gradiorunner method)": [[15, "autorag.deploy.gradio.GradioRunner.run_web", false]], "runner (class in autorag.deploy.base)": [[15, "autorag.deploy.base.Runner", false]], "runresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RunResponse", false]], "sample() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[29, "autorag.utils.util.save_parquet_safe", false]], "score (autorag.deploy.api.passage attribute)": [[15, "autorag.deploy.api.Passage.score", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[29, "autorag.utils.util.select_top_k", false]], "sem_score() (in module autorag.evaluation.metric.generation)": [[17, "autorag.evaluation.metric.generation.sem_score", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[23, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[23, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "similaritypercentilecutoff (class in autorag.nodes.passagefilter.similarity_percentile_cutoff)": [[22, "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff", false]], "similaritythresholdcutoff (class in autorag.nodes.passagefilter.similarity_threshold_cutoff)": [[22, "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff", false]], "single_token_f1() (in module autorag.evaluation.metric.retrieval_contents)": [[17, "autorag.evaluation.metric.retrieval_contents.single_token_f1", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (autorag.nodes.passageaugmenter.base.basepassageaugmenter static method)": [[20, "autorag.nodes.passageaugmenter.base.BasePassageAugmenter.sort_by_scores", false]], "sort_by_scores() (in module autorag.utils.util)": [[29, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[29, "autorag.utils.util.split_dataframe", false]], "start_chunking() (autorag.chunker.chunker method)": [[0, "autorag.chunker.Chunker.start_chunking", false]], "start_idx (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.start_idx", false]], "start_parsing() (autorag.parser.parser method)": [[0, "autorag.parser.Parser.start_parsing", false]], "start_trial() (autorag.evaluator.evaluator method)": [[0, "autorag.evaluator.Evaluator.start_trial", false]], "strategy (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.strategy", false]], "stream() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.stream", false]], "stream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.stream", false]], "stream() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.stream", false]], "stream() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.stream", false]], "streamresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.StreamResponse", false]], "structured_output() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.structured_output", false]], "structured_output() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.structured_output", false]], "summary_df_to_yaml() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.summary_df_to_yaml", false]], "support_similarity_metrics (autorag.vectordb.base.basevectorstore attribute)": [[30, "autorag.vectordb.base.BaseVectorStore.support_similarity_metrics", false]], "thresholdcutoff (class in autorag.nodes.passagefilter.threshold_cutoff)": [[22, "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[23, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ja_sudachipy() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ja_sudachipy", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "top_n (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.top_n", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[21, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[19, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "truncated_inputs() (autorag.vectordb.base.basevectorstore method)": [[30, "autorag.vectordb.base.BaseVectorStore.truncated_inputs", false]], "two_hop_incremental() (in module autorag.data.qa.query.llama_gen_query)": [[12, "autorag.data.qa.query.llama_gen_query.two_hop_incremental", false]], "two_hop_incremental() (in module autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.two_hop_incremental", false]], "two_hop_question (autorag.data.qa.query.openai_gen_query.twohopincrementalresponse attribute)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse.two_hop_question", false]], "twohopincrementalresponse (class in autorag.data.qa.query.openai_gen_query)": [[12, "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse", false]], "type (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.type", false]], "update_corpus() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.update_corpus", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[23, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[23, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate() (autorag.validator.validator method)": [[0, "autorag.validator.Validator.validate", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_llama_index_prompt() (in module autorag.data.legacy.qacreation.llama_index)": [[6, "autorag.data.legacy.qacreation.llama_index.validate_llama_index_prompt", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "validator (class in autorag.validator)": [[0, "autorag.validator.Validator", false]], "vectordb (class in autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.VectorDB", false]], "vectordb_ingest() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.vectordb_ingest", false]], "vectordb_pure() (in module autorag.nodes.retrieval.vectordb)": [[27, "autorag.nodes.retrieval.vectordb.vectordb_pure", false]], "verbose (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.verbose", false]], "version (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.version", false]], "versionresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.VersionResponse", false]], "vllm (class in autorag.nodes.generator.vllm)": [[19, "autorag.nodes.generator.vllm.Vllm", false]], "voyageai_rerank_pure() (in module autorag.nodes.passagereranker.voyageai)": [[23, "autorag.nodes.passagereranker.voyageai.voyageai_rerank_pure", false]], "voyageaireranker (class in autorag.nodes.passagereranker.voyageai)": [[23, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker", false]], "weaviate (class in autorag.vectordb.weaviate)": [[30, "autorag.vectordb.weaviate.Weaviate", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[25, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "AutoRAGBedrock"], [0, 1, 1, "", "LazyInit"], [0, 1, 1, "", "MockEmbeddingRandom"], [0, 0, 0, "-", "chunker"], [0, 0, 0, "-", "cli"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [15, 0, 0, "-", "deploy"], [16, 0, 0, "-", "evaluation"], [0, 0, 0, "-", "evaluator"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [18, 0, 0, "-", "nodes"], [0, 0, 0, "-", "parser"], [0, 4, 1, "", "random"], [28, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [29, 0, 0, "-", "utils"], [0, 0, 0, "-", "validator"], [30, 0, 0, "-", "vectordb"], [0, 0, 0, "-", "web"]], "autorag.AutoRAGBedrock": [[0, 2, 1, "", "acomplete"], [0, 3, 1, "", "model_computed_fields"], [0, 3, 1, "", "model_config"], [0, 3, 1, "", "model_fields"], [0, 2, 1, "", "model_post_init"]], "autorag.MockEmbeddingRandom": [[0, 3, 1, "", "model_computed_fields"], [0, 3, 1, "", "model_config"], [0, 3, 1, "", "model_fields"]], "autorag.chunker": [[0, 1, 1, "", "Chunker"]], "autorag.chunker.Chunker": [[0, 2, 1, "", "from_parquet"], [0, 2, 1, "", "start_chunking"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[2, 0, 0, "-", "chunk"], [4, 0, 0, "-", "legacy"], [7, 0, 0, "-", "parse"], [8, 0, 0, "-", "qa"], [1, 4, 1, "", "split_by_sentence_kiwi"], [14, 0, 0, "-", "utils"]], "autorag.data.chunk": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "langchain_chunk"], [2, 0, 0, "-", "llama_index_chunk"], [2, 0, 0, "-", "run"]], "autorag.data.chunk.base": [[2, 4, 1, "", "add_file_name"], [2, 4, 1, "", "chunker_node"], [2, 4, 1, "", "make_metadata_list"]], "autorag.data.chunk.langchain_chunk": [[2, 4, 1, "", "langchain_chunk"], [2, 4, 1, "", "langchain_chunk_pure"]], "autorag.data.chunk.llama_index_chunk": [[2, 4, 1, "", "llama_index_chunk"], [2, 4, 1, "", "llama_index_chunk_pure"]], "autorag.data.chunk.run": [[2, 4, 1, "", "run_chunker"]], "autorag.data.legacy": [[5, 0, 0, "-", "corpus"], [6, 0, 0, "-", "qacreation"]], "autorag.data.legacy.corpus": [[5, 0, 0, "-", "langchain"], [5, 0, 0, "-", "llama_index"]], "autorag.data.legacy.corpus.langchain": [[5, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.legacy.corpus.llama_index": [[5, 4, 1, "", "llama_documents_to_parquet"], [5, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.legacy.qacreation": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "llama_index"], [6, 0, 0, "-", "ragas"], [6, 0, 0, "-", "simple"]], "autorag.data.legacy.qacreation.base": [[6, 4, 1, "", "make_qa_with_existing_qa"], [6, 4, 1, "", "make_single_content_qa"]], "autorag.data.legacy.qacreation.llama_index": [[6, 4, 1, "", "async_qa_gen_llama_index"], [6, 4, 1, "", "distribute_list_by_ratio"], [6, 4, 1, "", "generate_answers"], [6, 4, 1, "", "generate_basic_answer"], [6, 4, 1, "", "generate_qa_llama_index"], [6, 4, 1, "", "generate_qa_llama_index_by_ratio"], [6, 4, 1, "", "parse_output"], [6, 4, 1, "", "validate_llama_index_prompt"]], "autorag.data.legacy.qacreation.ragas": [[6, 4, 1, "", "generate_qa_ragas"]], "autorag.data.legacy.qacreation.simple": [[6, 4, 1, "", "generate_qa_row"], [6, 4, 1, "", "generate_simple_qa_dataset"]], "autorag.data.parse": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_parse"], [7, 0, 0, "-", "llamaparse"], [7, 0, 0, "-", "run"]], "autorag.data.parse.base": [[7, 4, 1, "", "parser_node"]], "autorag.data.parse.langchain_parse": [[7, 4, 1, "", "langchain_parse"], [7, 4, 1, "", "langchain_parse_pure"], [7, 4, 1, "", "parse_all_files"]], "autorag.data.parse.llamaparse": [[7, 4, 1, "", "llama_parse"], [7, 4, 1, "", "llama_parse_pure"]], "autorag.data.parse.run": [[7, 4, 1, "", "run_parser"]], "autorag.data.qa": [[9, 0, 0, "-", "evolve"], [8, 0, 0, "-", "extract_evidence"], [10, 0, 0, "-", "filter"], [11, 0, 0, "-", "generation_gt"], [12, 0, 0, "-", "query"], [8, 0, 0, "-", "sample"], [8, 0, 0, "-", "schema"]], "autorag.data.qa.evolve": [[9, 0, 0, "-", "llama_index_query_evolve"], [9, 0, 0, "-", "openai_query_evolve"], [9, 0, 0, "-", "prompt"]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "llama_index_generate_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve": [[9, 1, 1, "", "Response"], [9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "query_evolve_openai_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve.Response": [[9, 3, 1, "", "evolved_query"], [9, 3, 1, "", "model_computed_fields"], [9, 3, 1, "", "model_config"], [9, 3, 1, "", "model_fields"]], "autorag.data.qa.filter": [[10, 0, 0, "-", "dontknow"], [10, 0, 0, "-", "passage_dependency"], [10, 0, 0, "-", "prompt"]], "autorag.data.qa.filter.dontknow": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "dontknow_filter_llama_index"], [10, 4, 1, "", "dontknow_filter_openai"], [10, 4, 1, "", "dontknow_filter_rule_based"]], "autorag.data.qa.filter.dontknow.Response": [[10, 3, 1, "", "is_dont_know"], [10, 3, 1, "", "model_computed_fields"], [10, 3, 1, "", "model_config"], [10, 3, 1, "", "model_fields"]], "autorag.data.qa.filter.passage_dependency": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "passage_dependency_filter_llama_index"], [10, 4, 1, "", "passage_dependency_filter_openai"]], "autorag.data.qa.filter.passage_dependency.Response": [[10, 3, 1, "", "is_passage_dependent"], [10, 3, 1, "", "model_computed_fields"], [10, 3, 1, "", "model_config"], [10, 3, 1, "", "model_fields"]], "autorag.data.qa.generation_gt": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "llama_index_gen_gt"], [11, 0, 0, "-", "openai_gen_gt"], [11, 0, 0, "-", "prompt"]], "autorag.data.qa.generation_gt.base": [[11, 4, 1, "", "add_gen_gt"]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_custom_gen_gt"], [11, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, 1, 1, "", "Response"], [11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.qa.generation_gt.openai_gen_gt.Response": [[11, 3, 1, "", "answer"], [11, 3, 1, "", "model_computed_fields"], [11, 3, 1, "", "model_config"], [11, 3, 1, "", "model_fields"]], "autorag.data.qa.query": [[12, 0, 0, "-", "llama_gen_query"], [12, 0, 0, "-", "openai_gen_query"], [12, 0, 0, "-", "prompt"]], "autorag.data.qa.query.llama_gen_query": [[12, 4, 1, "", "concept_completion_query_gen"], [12, 4, 1, "", "custom_query_gen"], [12, 4, 1, "", "factoid_query_gen"], [12, 4, 1, "", "llama_index_generate_base"], [12, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query": [[12, 1, 1, "", "Response"], [12, 1, 1, "", "TwoHopIncrementalResponse"], [12, 4, 1, "", "concept_completion_query_gen"], [12, 4, 1, "", "factoid_query_gen"], [12, 4, 1, "", "query_gen_openai_base"], [12, 4, 1, "", "two_hop_incremental"]], "autorag.data.qa.query.openai_gen_query.Response": [[12, 3, 1, "", "model_computed_fields"], [12, 3, 1, "", "model_config"], [12, 3, 1, "", "model_fields"], [12, 3, 1, "", "query"]], "autorag.data.qa.query.openai_gen_query.TwoHopIncrementalResponse": [[12, 3, 1, "", "answer"], [12, 3, 1, "", "model_computed_fields"], [12, 3, 1, "", "model_config"], [12, 3, 1, "", "model_fields"], [12, 3, 1, "", "one_hop_question"], [12, 3, 1, "", "two_hop_question"]], "autorag.data.qa.sample": [[8, 4, 1, "", "random_single_hop"], [8, 4, 1, "", "range_single_hop"]], "autorag.data.qa.schema": [[8, 1, 1, "", "Corpus"], [8, 1, 1, "", "QA"], [8, 1, 1, "", "Raw"]], "autorag.data.qa.schema.Corpus": [[8, 2, 1, "", "batch_apply"], [8, 5, 1, "", "linked_raw"], [8, 2, 1, "", "map"], [8, 2, 1, "", "sample"], [8, 2, 1, "", "to_parquet"]], "autorag.data.qa.schema.QA": [[8, 2, 1, "", "batch_apply"], [8, 2, 1, "", "batch_filter"], [8, 2, 1, "", "filter"], [8, 5, 1, "", "linked_corpus"], [8, 2, 1, "", "make_retrieval_gt_contents"], [8, 2, 1, "", "map"], [8, 2, 1, "", "to_parquet"], [8, 2, 1, "", "update_corpus"]], "autorag.data.qa.schema.Raw": [[8, 2, 1, "", "batch_apply"], [8, 2, 1, "", "chunk"], [8, 2, 1, "", "flatmap"], [8, 2, 1, "", "map"]], "autorag.data.utils": [[14, 0, 0, "-", "util"]], "autorag.data.utils.util": [[14, 4, 1, "", "add_essential_metadata"], [14, 4, 1, "", "add_essential_metadata_llama_text_node"], [14, 4, 1, "", "corpus_df_to_langchain_documents"], [14, 4, 1, "", "get_file_metadata"], [14, 4, 1, "", "get_param_combinations"], [14, 4, 1, "", "get_start_end_idx"], [14, 4, 1, "", "load_yaml"]], "autorag.deploy": [[15, 0, 0, "-", "api"], [15, 0, 0, "-", "base"], [15, 0, 0, "-", "gradio"]], "autorag.deploy.api": [[15, 1, 1, "", "ApiRunner"], [15, 1, 1, "", "Passage"], [15, 1, 1, "", "QueryRequest"], [15, 1, 1, "", "RetrievalResponse"], [15, 1, 1, "", "RetrievedPassage"], [15, 1, 1, "", "RunResponse"], [15, 1, 1, "", "StreamResponse"], [15, 1, 1, "", "VersionResponse"]], "autorag.deploy.api.ApiRunner": [[15, 2, 1, "", "extract_retrieve_passage"], [15, 2, 1, "", "run_api_server"]], "autorag.deploy.api.Passage": [[15, 3, 1, "", "content"], [15, 3, 1, "", "doc_id"], [15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "score"]], "autorag.deploy.api.QueryRequest": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "query"], [15, 3, 1, "", "result_column"]], "autorag.deploy.api.RetrievalResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "passages"]], "autorag.deploy.api.RetrievedPassage": [[15, 3, 1, "", "content"], [15, 3, 1, "", "doc_id"], [15, 3, 1, "", "end_idx"], [15, 3, 1, "", "file_page"], [15, 3, 1, "", "filepath"], [15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "start_idx"]], "autorag.deploy.api.RunResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "result"], [15, 3, 1, "", "retrieved_passage"]], "autorag.deploy.api.StreamResponse": [[15, 3, 1, "", "generated_text"], [15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "passage_index"], [15, 3, 1, "", "retrieved_passage"], [15, 3, 1, "", "type"]], "autorag.deploy.api.VersionResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "version"]], "autorag.deploy.base": [[15, 1, 1, "", "BaseRunner"], [15, 1, 1, "", "Runner"], [15, 4, 1, "", "extract_best_config"], [15, 4, 1, "", "extract_node_line_names"], [15, 4, 1, "", "extract_node_strategy"], [15, 4, 1, "", "extract_vectordb_config"], [15, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.base.BaseRunner": [[15, 2, 1, "", "from_trial_folder"], [15, 2, 1, "", "from_yaml"]], "autorag.deploy.base.Runner": [[15, 2, 1, "", "run"]], "autorag.deploy.gradio": [[15, 1, 1, "", "GradioRunner"]], "autorag.deploy.gradio.GradioRunner": [[15, 2, 1, "", "run"], [15, 2, 1, "", "run_web"]], "autorag.evaluation": [[16, 0, 0, "-", "generation"], [17, 0, 0, "-", "metric"], [16, 0, 0, "-", "retrieval"], [16, 0, 0, "-", "retrieval_contents"], [16, 0, 0, "-", "util"]], "autorag.evaluation.generation": [[16, 4, 1, "", "evaluate_generation"]], "autorag.evaluation.metric": [[17, 0, 0, "-", "deepeval_prompt"], [17, 0, 0, "-", "generation"], [17, 0, 0, "-", "retrieval"], [17, 0, 0, "-", "retrieval_contents"], [17, 0, 0, "-", "util"]], "autorag.evaluation.metric.deepeval_prompt": [[17, 1, 1, "", "FaithfulnessTemplate"]], "autorag.evaluation.metric.deepeval_prompt.FaithfulnessTemplate": [[17, 2, 1, "", "generate_claims"], [17, 2, 1, "", "generate_truths"], [17, 2, 1, "", "generate_verdicts"]], "autorag.evaluation.metric.generation": [[17, 4, 1, "", "async_g_eval"], [17, 4, 1, "", "bert_score"], [17, 4, 1, "", "bleu"], [17, 4, 1, "", "deepeval_faithfulness"], [17, 4, 1, "", "g_eval"], [17, 4, 1, "", "huggingface_evaluate"], [17, 4, 1, "", "make_generator_instance"], [17, 4, 1, "", "meteor"], [17, 4, 1, "", "rouge"], [17, 4, 1, "", "sem_score"]], "autorag.evaluation.metric.retrieval": [[17, 4, 1, "", "retrieval_f1"], [17, 4, 1, "", "retrieval_map"], [17, 4, 1, "", "retrieval_mrr"], [17, 4, 1, "", "retrieval_ndcg"], [17, 4, 1, "", "retrieval_precision"], [17, 4, 1, "", "retrieval_recall"]], "autorag.evaluation.metric.retrieval_contents": [[17, 4, 1, "", "retrieval_token_f1"], [17, 4, 1, "", "retrieval_token_precision"], [17, 4, 1, "", "retrieval_token_recall"], [17, 4, 1, "", "single_token_f1"]], "autorag.evaluation.metric.util": [[17, 4, 1, "", "autorag_metric"], [17, 4, 1, "", "autorag_metric_loop"], [17, 4, 1, "", "calculate_cosine_similarity"], [17, 4, 1, "", "calculate_inner_product"], [17, 4, 1, "", "calculate_l2_distance"]], "autorag.evaluation.retrieval": [[16, 4, 1, "", "evaluate_retrieval"]], "autorag.evaluation.retrieval_contents": [[16, 4, 1, "", "evaluate_retrieval_contents"]], "autorag.evaluation.util": [[16, 4, 1, "", "cast_embedding_model"], [16, 4, 1, "", "cast_metrics"]], "autorag.evaluator": [[0, 1, 1, "", "Evaluator"]], "autorag.evaluator.Evaluator": [[0, 2, 1, "", "restart_trial"], [0, 2, 1, "", "start_trial"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[19, 0, 0, "-", "generator"], [20, 0, 0, "-", "passageaugmenter"], [21, 0, 0, "-", "passagecompressor"], [22, 0, 0, "-", "passagefilter"], [23, 0, 0, "-", "passagereranker"], [25, 0, 0, "-", "promptmaker"], [26, 0, 0, "-", "queryexpansion"], [27, 0, 0, "-", "retrieval"], [18, 0, 0, "-", "util"]], "autorag.nodes.generator": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "llama_index_llm"], [19, 0, 0, "-", "openai_llm"], [19, 0, 0, "-", "run"], [19, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[19, 1, 1, "", "BaseGenerator"], [19, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "cast_to_run"], [19, 2, 1, "", "stream"], [19, 2, 1, "", "structured_output"]], "autorag.nodes.generator.llama_index_llm": [[19, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"]], "autorag.nodes.generator.openai_llm": [[19, 1, 1, "", "OpenAILLM"], [19, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "get_result"], [19, 2, 1, "", "get_result_o1"], [19, 2, 1, "", "get_structured_result"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"], [19, 2, 1, "", "structured_output"]], "autorag.nodes.generator.run": [[19, 4, 1, "", "evaluate_generator_node"], [19, 4, 1, "", "run_generator_node"]], "autorag.nodes.generator.vllm": [[19, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"]], "autorag.nodes.passageaugmenter": [[20, 0, 0, "-", "base"], [20, 0, 0, "-", "pass_passage_augmenter"], [20, 0, 0, "-", "prev_next_augmenter"], [20, 0, 0, "-", "run"]], "autorag.nodes.passageaugmenter.base": [[20, 1, 1, "", "BasePassageAugmenter"]], "autorag.nodes.passageaugmenter.base.BasePassageAugmenter": [[20, 2, 1, "", "cast_to_run"], [20, 2, 1, "", "sort_by_scores"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[20, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[20, 2, 1, "", "pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter": [[20, 1, 1, "", "PrevNextPassageAugmenter"], [20, 4, 1, "", "prev_next_augmenter_pure"]], "autorag.nodes.passageaugmenter.prev_next_augmenter.PrevNextPassageAugmenter": [[20, 2, 1, "", "pure"]], "autorag.nodes.passageaugmenter.run": [[20, 4, 1, "", "run_passage_augmenter_node"]], "autorag.nodes.passagecompressor": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "longllmlingua"], [21, 0, 0, "-", "pass_compressor"], [21, 0, 0, "-", "refine"], [21, 0, 0, "-", "run"], [21, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[21, 1, 1, "", "BasePassageCompressor"], [21, 1, 1, "", "LlamaIndexCompressor"], [21, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[21, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[21, 3, 1, "", "param_list"], [21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[21, 1, 1, "", "LongLLMLingua"], [21, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[21, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[21, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.refine.Refine": [[21, 3, 1, "", "llm"]], "autorag.nodes.passagecompressor.run": [[21, 4, 1, "", "evaluate_passage_compressor_node"], [21, 4, 1, "", "run_passage_compressor_node"]], "autorag.nodes.passagecompressor.tree_summarize": [[21, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize": [[21, 3, 1, "", "llm"]], "autorag.nodes.passagefilter": [[22, 0, 0, "-", "base"], [22, 0, 0, "-", "pass_passage_filter"], [22, 0, 0, "-", "percentile_cutoff"], [22, 0, 0, "-", "recency"], [22, 0, 0, "-", "run"], [22, 0, 0, "-", "similarity_percentile_cutoff"], [22, 0, 0, "-", "similarity_threshold_cutoff"], [22, 0, 0, "-", "threshold_cutoff"]], "autorag.nodes.passagefilter.base": [[22, 1, 1, "", "BasePassageFilter"]], "autorag.nodes.passagefilter.base.BasePassageFilter": [[22, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagefilter.pass_passage_filter": [[22, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[22, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[22, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.run": [[22, 4, 1, "", "run_passage_filter_node"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff": [[22, 1, 1, "", "SimilarityPercentileCutoff"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff.SimilarityPercentileCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff": [[22, 1, 1, "", "SimilarityThresholdCutoff"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff.SimilarityThresholdCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.threshold_cutoff": [[22, 1, 1, "", "ThresholdCutoff"]], "autorag.nodes.passagefilter.threshold_cutoff.ThresholdCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagereranker": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "cohere"], [23, 0, 0, "-", "colbert"], [23, 0, 0, "-", "flag_embedding"], [23, 0, 0, "-", "flag_embedding_llm"], [23, 0, 0, "-", "flashrank"], [23, 0, 0, "-", "jina"], [23, 0, 0, "-", "koreranker"], [23, 0, 0, "-", "mixedbreadai"], [23, 0, 0, "-", "monot5"], [23, 0, 0, "-", "openvino"], [23, 0, 0, "-", "pass_reranker"], [23, 0, 0, "-", "rankgpt"], [23, 0, 0, "-", "run"], [23, 0, 0, "-", "sentence_transformer"], [23, 0, 0, "-", "time_reranker"], [23, 0, 0, "-", "upr"], [23, 0, 0, "-", "voyageai"]], "autorag.nodes.passagereranker.base": [[23, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[23, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[23, 1, 1, "", "CohereReranker"], [23, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[23, 1, 1, "", "ColbertReranker"], [23, 4, 1, "", "get_colbert_embedding_batch"], [23, 4, 1, "", "get_colbert_score"], [23, 4, 1, "", "slice_tensor"], [23, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[23, 1, 1, "", "FlagEmbeddingReranker"], [23, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[23, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flashrank": [[23, 1, 1, "", "FlashRankReranker"], [23, 4, 1, "", "flashrank_run_model"]], "autorag.nodes.passagereranker.flashrank.FlashRankReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[23, 1, 1, "", "JinaReranker"], [23, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[23, 1, 1, "", "KoReranker"], [23, 4, 1, "", "exp_normalize"], [23, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.mixedbreadai": [[23, 1, 1, "", "MixedbreadAIReranker"], [23, 4, 1, "", "mixedbreadai_rerank_pure"]], "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[23, 1, 1, "", "MonoT5"], [23, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.openvino": [[23, 1, 1, "", "OpenVINOReranker"], [23, 4, 1, "", "openvino_run_model"]], "autorag.nodes.passagereranker.openvino.OpenVINOReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[23, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[23, 1, 1, "", "AsyncRankGPTRerank"], [23, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[23, 2, 1, "", "async_postprocess_nodes"], [23, 2, 1, "", "async_run_llm"], [23, 3, 1, "", "llm"], [23, 3, 1, "", "model_computed_fields"], [23, 3, 1, "", "model_config"], [23, 3, 1, "", "model_fields"], [23, 3, 1, "", "rankgpt_rerank_prompt"], [23, 3, 1, "", "top_n"], [23, 3, 1, "", "verbose"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.run": [[23, 4, 1, "", "run_passage_reranker_node"]], "autorag.nodes.passagereranker.sentence_transformer": [[23, 1, 1, "", "SentenceTransformerReranker"], [23, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.time_reranker": [[23, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[23, 1, 1, "", "UPRScorer"], [23, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[23, 2, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.voyageai": [[23, 1, 1, "", "VoyageAIReranker"], [23, 4, 1, "", "voyageai_rerank_pure"]], "autorag.nodes.passagereranker.voyageai.VoyageAIReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.promptmaker": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "fstring"], [25, 0, 0, "-", "long_context_reorder"], [25, 0, 0, "-", "run"], [25, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[25, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[25, 2, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[25, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[25, 2, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[25, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[25, 2, 1, "", "pure"]], "autorag.nodes.promptmaker.run": [[25, 4, 1, "", "evaluate_generator_result"], [25, 4, 1, "", "evaluate_one_prompt_maker_node"], [25, 4, 1, "", "make_generator_callable_params"], [25, 4, 1, "", "run_prompt_maker_node"]], "autorag.nodes.promptmaker.window_replacement": [[25, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[25, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "hyde"], [26, 0, 0, "-", "multi_query_expansion"], [26, 0, 0, "-", "pass_query_expansion"], [26, 0, 0, "-", "query_decompose"], [26, 0, 0, "-", "run"]], "autorag.nodes.queryexpansion.base": [[26, 1, 1, "", "BaseQueryExpansion"], [26, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[26, 2, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[26, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[26, 1, 1, "", "MultiQueryExpansion"], [26, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[26, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[26, 1, 1, "", "QueryDecompose"], [26, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.run": [[26, 4, 1, "", "evaluate_one_query_expansion_node"], [26, 4, 1, "", "make_retrieval_callable_params"], [26, 4, 1, "", "run_query_expansion_node"]], "autorag.nodes.retrieval": [[27, 0, 0, "-", "base"], [27, 0, 0, "-", "bm25"], [27, 0, 0, "-", "hybrid_cc"], [27, 0, 0, "-", "hybrid_rrf"], [27, 0, 0, "-", "run"], [27, 0, 0, "-", "vectordb"]], "autorag.nodes.retrieval.base": [[27, 1, 1, "", "BaseRetrieval"], [27, 1, 1, "", "HybridRetrieval"], [27, 4, 1, "", "cast_queries"], [27, 4, 1, "", "evenly_distribute_passages"], [27, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[27, 2, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[27, 2, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[27, 1, 1, "", "BM25"], [27, 4, 1, "", "bm25_ingest"], [27, 4, 1, "", "bm25_pure"], [27, 4, 1, "", "get_bm25_scores"], [27, 4, 1, "", "load_bm25_corpus"], [27, 4, 1, "", "select_bm25_tokenizer"], [27, 4, 1, "", "tokenize"], [27, 4, 1, "", "tokenize_ja_sudachipy"], [27, 4, 1, "", "tokenize_ko_kiwi"], [27, 4, 1, "", "tokenize_ko_kkma"], [27, 4, 1, "", "tokenize_ko_okt"], [27, 4, 1, "", "tokenize_porter_stemmer"], [27, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[27, 2, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[27, 1, 1, "", "HybridCC"], [27, 4, 1, "", "fuse_per_query"], [27, 4, 1, "", "hybrid_cc"], [27, 4, 1, "", "normalize_dbsf"], [27, 4, 1, "", "normalize_mm"], [27, 4, 1, "", "normalize_tmm"], [27, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[27, 2, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[27, 1, 1, "", "HybridRRF"], [27, 4, 1, "", "hybrid_rrf"], [27, 4, 1, "", "rrf_calculate"], [27, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[27, 2, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.run": [[27, 4, 1, "", "edit_summary_df_params"], [27, 4, 1, "", "evaluate_retrieval_node"], [27, 4, 1, "", "find_unique_elems"], [27, 4, 1, "", "get_hybrid_execution_times"], [27, 4, 1, "", "get_ids_and_scores"], [27, 4, 1, "", "get_scores_by_ids"], [27, 4, 1, "", "optimize_hybrid"], [27, 4, 1, "", "run_retrieval_node"]], "autorag.nodes.retrieval.vectordb": [[27, 1, 1, "", "VectorDB"], [27, 4, 1, "", "filter_exist_ids"], [27, 4, 1, "", "filter_exist_ids_from_retrieval_gt"], [27, 4, 1, "", "get_id_scores"], [27, 4, 1, "", "run_query_embedding_batch"], [27, 4, 1, "", "vectordb_ingest"], [27, 4, 1, "", "vectordb_pure"]], "autorag.nodes.retrieval.vectordb.VectorDB": [[27, 2, 1, "", "pure"]], "autorag.nodes.util": [[18, 4, 1, "", "make_generator_callable_param"]], "autorag.parser": [[0, 1, 1, "", "Parser"]], "autorag.parser.Parser": [[0, 2, 1, "", "start_parsing"]], "autorag.schema": [[28, 0, 0, "-", "base"], [28, 0, 0, "-", "metricinput"], [28, 0, 0, "-", "module"], [28, 0, 0, "-", "node"]], "autorag.schema.base": [[28, 1, 1, "", "BaseModule"]], "autorag.schema.base.BaseModule": [[28, 2, 1, "", "cast_to_run"], [28, 2, 1, "", "pure"], [28, 2, 1, "", "run_evaluator"]], "autorag.schema.metricinput": [[28, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[28, 2, 1, "", "from_dataframe"], [28, 3, 1, "", "generated_log_probs"], [28, 3, 1, "", "generated_texts"], [28, 3, 1, "", "generation_gt"], [28, 2, 1, "", "is_fields_notnone"], [28, 3, 1, "", "prompt"], [28, 3, 1, "", "queries"], [28, 3, 1, "", "query"], [28, 3, 1, "", "retrieval_gt"], [28, 3, 1, "", "retrieval_gt_contents"], [28, 3, 1, "", "retrieved_contents"], [28, 3, 1, "", "retrieved_ids"]], "autorag.schema.module": [[28, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[28, 2, 1, "", "from_dict"], [28, 3, 1, "", "module"], [28, 3, 1, "", "module_param"], [28, 3, 1, "", "module_type"]], "autorag.schema.node": [[28, 1, 1, "", "Node"], [28, 4, 1, "", "extract_values"], [28, 4, 1, "", "extract_values_from_nodes"], [28, 4, 1, "", "extract_values_from_nodes_strategy"], [28, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_param_combinations"], [28, 3, 1, "", "modules"], [28, 3, 1, "", "node_params"], [28, 3, 1, "", "node_type"], [28, 2, 1, "", "run"], [28, 3, 1, "", "run_node"], [28, 3, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[29, 0, 0, "-", "preprocess"], [29, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[29, 4, 1, "", "cast_corpus_dataset"], [29, 4, 1, "", "cast_qa_dataset"], [29, 4, 1, "", "validate_corpus_dataset"], [29, 4, 1, "", "validate_qa_dataset"], [29, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[29, 4, 1, "", "aflatten_apply"], [29, 4, 1, "", "apply_recursive"], [29, 4, 1, "", "convert_datetime_string"], [29, 4, 1, "", "convert_env_in_dict"], [29, 4, 1, "", "convert_inputs_to_list"], [29, 4, 1, "", "convert_string_to_tuple_in_dict"], [29, 4, 1, "", "decode_multiple_json_from_bytes"], [29, 4, 1, "", "demojize"], [29, 4, 1, "", "dict_to_markdown"], [29, 4, 1, "", "dict_to_markdown_table"], [29, 4, 1, "", "embedding_query_content"], [29, 4, 1, "", "empty_cuda_cache"], [29, 4, 1, "", "explode"], [29, 4, 1, "", "fetch_contents"], [29, 4, 1, "", "fetch_one_content"], [29, 4, 1, "", "filter_dict_keys"], [29, 4, 1, "", "find_key_values"], [29, 4, 1, "", "find_node_summary_files"], [29, 4, 1, "", "find_trial_dir"], [29, 4, 1, "", "flatten_apply"], [29, 4, 1, "", "get_best_row"], [29, 4, 1, "", "get_event_loop"], [29, 4, 1, "", "load_summary_file"], [29, 4, 1, "", "load_yaml_config"], [29, 4, 1, "", "make_batch"], [29, 4, 1, "", "make_combinations"], [29, 4, 1, "", "normalize_string"], [29, 4, 1, "", "normalize_unicode"], [29, 4, 1, "", "openai_truncate_by_token"], [29, 4, 1, "", "pop_params"], [29, 4, 1, "", "preprocess_text"], [29, 4, 1, "", "process_batch"], [29, 4, 1, "", "reconstruct_list"], [29, 4, 1, "", "replace_value_in_dict"], [29, 4, 1, "", "result_to_dataframe"], [29, 4, 1, "", "save_parquet_safe"], [29, 4, 1, "", "select_top_k"], [29, 4, 1, "", "sort_by_scores"], [29, 4, 1, "", "split_dataframe"], [29, 4, 1, "", "to_list"]], "autorag.validator": [[0, 1, 1, "", "Validator"]], "autorag.validator.Validator": [[0, 2, 1, "", "validate"]], "autorag.vectordb": [[30, 0, 0, "-", "base"], [30, 0, 0, "-", "chroma"], [30, 4, 1, "", "get_support_vectordb"], [30, 4, 1, "", "load_all_vectordb_from_yaml"], [30, 4, 1, "", "load_vectordb"], [30, 4, 1, "", "load_vectordb_from_yaml"], [30, 0, 0, "-", "milvus"], [30, 0, 0, "-", "pinecone"], [30, 0, 0, "-", "weaviate"]], "autorag.vectordb.base": [[30, 1, 1, "", "BaseVectorStore"]], "autorag.vectordb.base.BaseVectorStore": [[30, 2, 1, "", "add"], [30, 2, 1, "", "delete"], [30, 2, 1, "", "fetch"], [30, 2, 1, "", "is_exist"], [30, 2, 1, "", "query"], [30, 3, 1, "", "support_similarity_metrics"], [30, 2, 1, "", "truncated_inputs"]], "autorag.vectordb.chroma": [[30, 1, 1, "", "Chroma"]], "autorag.vectordb.chroma.Chroma": [[30, 2, 1, "", "add"], [30, 2, 1, "", "delete"], [30, 2, 1, "", "fetch"], [30, 2, 1, "", "is_exist"], [30, 2, 1, "", "query"]], "autorag.vectordb.milvus": [[30, 1, 1, "", "Milvus"]], "autorag.vectordb.milvus.Milvus": [[30, 2, 1, "", "add"], [30, 2, 1, "", "delete"], [30, 2, 1, "", "delete_collection"], [30, 2, 1, "", "fetch"], [30, 2, 1, "", "is_exist"], [30, 2, 1, "", "query"]], "autorag.vectordb.pinecone": [[30, 1, 1, "", "Pinecone"]], "autorag.vectordb.pinecone.Pinecone": [[30, 2, 1, "", "add"], [30, 2, 1, "", "delete"], [30, 2, 1, "", "delete_index"], [30, 2, 1, "", "fetch"], [30, 2, 1, "", "is_exist"], [30, 2, 1, "", "query"]], "autorag.vectordb.weaviate": [[30, 1, 1, "", "Weaviate"], [30, 4, 1, "", "distance_to_score"]], "autorag.vectordb.weaviate.Weaviate": [[30, 2, 1, "", "add"], [30, 2, 1, "", "delete"], [30, 2, 1, "", "delete_collection"], [30, 2, 1, "", "fetch"], [30, 2, 1, "", "is_exist"], [30, 2, 1, "", "query"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 19, 21, 22, 23, 25, 26, 27, 28, 29, 32, 36, 39, 45, 46, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 79, 81, 83, 85, 86, 87, 103, 105, 106, 107, 108, 109, 110, 111, 116, 120, 122, 123, 125, 127], "0": [0, 6, 15, 17, 23, 27, 32, 37, 38, 39, 43, 47, 51, 52, 53, 60, 62, 65, 69, 71, 72, 73, 74, 82, 83, 85, 86, 87, 88, 89, 99, 112, 114, 116, 119, 120, 122, 126, 127], "002": [67, 69], "01": 84, "0125": 17, "04": 73, "06": [9, 10, 11, 12, 17, 49], "07": [10, 11, 49], "08": [9, 10, 11, 12, 17, 49], "09": 73, "0eec7e3a": 126, "0x7fe424d96d90": 0, "1": [0, 6, 17, 27, 29, 30, 36, 39, 42, 56, 60, 61, 62, 66, 69, 71, 72, 74, 75, 77, 82, 111, 114, 116, 119, 120, 125], "10": [0, 60, 62, 69, 70, 71, 79, 98, 107, 112, 115, 116, 118, 122, 123, 125], "100": [30, 63, 64, 65, 66, 68, 126], "1000": 107, "100k": 96, "101": 114, "1024": [32, 34, 50], "10k": [23, 96], "10x": 74, "11": [57, 126], "1106": [71, 72, 107, 110, 111, 120, 126], "12": 92, "125m": [70, 74], "128": [17, 29, 39, 48], "132": 51, "13a": 17, "13b": 96, "14": 51, "1536": [30, 66], "15min": 56, "16": [17, 19, 72, 74, 80, 81, 93, 99], "16k": [71, 72, 73, 79, 80, 81, 99, 107, 110, 111, 120, 126], "17": 57, "18": [10, 11, 49], "19530": [30, 65], "199": 51, "1d": 36, "2": [6, 17, 21, 23, 26, 36, 39, 56, 58, 59, 60, 69, 70, 74, 75, 78, 92, 100, 104, 111, 112, 113, 114, 122, 125], "200": [30, 51, 66], "2015": 84, "2022": 49, "2024": [9, 10, 11, 12, 17, 49, 73], "2048": 0, "205": 51, "24": [32, 34, 50], "25": 38, "27": 68, "2d": [27, 36], "3": [6, 17, 25, 27, 37, 38, 39, 42, 58, 60, 61, 62, 68, 69, 71, 72, 75, 79, 80, 81, 99, 107, 110, 111, 114, 118, 120, 123, 125], "30": [65, 70, 125], "300": [21, 78], "32": [6, 8, 39, 90, 91, 92, 97, 100], "3b": [23, 96], "4": [6, 17, 38, 55, 60, 69, 70, 71, 73, 75, 99, 111, 114, 115, 116, 125], "4000": 71, "42": [0, 6, 8], "4d33": 126, "4o": [9, 10, 11, 12, 17, 42, 47, 49], "5": [0, 6, 17, 23, 25, 38, 39, 42, 55, 58, 60, 62, 69, 71, 72, 73, 75, 76, 79, 80, 81, 98, 99, 107, 110, 111, 114, 118, 120, 122, 125], "50": [26, 38, 39, 65, 67, 68, 70], "50051": [30, 68], "51": 116, "512": [0, 32, 34, 39, 73, 74, 100], "514": 53, "52": 51, "6": [39, 55, 70, 71, 75, 83, 85, 111, 114, 125], "60": [0, 27, 115], "64": [29, 39, 57, 71, 85, 86, 88, 89, 90, 91, 92, 94, 96, 97, 100, 101, 109, 112], "666": 55, "7": [62, 75, 114, 125], "7039180890341347": 54, "70b": 61, "72": 52, "7680": [15, 52], "7690": 0, "777": 55, "797979": 55, "7b": [21, 59, 60, 69, 74, 78, 113], "7e604b30339b": 126, "8": [2, 7, 17, 55, 57, 75, 93, 99, 114, 125], "80": [115, 116], "8000": [15, 27, 30, 51, 63, 127], "8080": [30, 68], "822": 55, "85": [82, 86, 87], "89": 51, "8a31": 51, "8cc5": 126, "9": [17, 39, 125], "90b": 58, "92": 51, "95": 51, "98": 51, "A": [0, 2, 7, 9, 10, 11, 12, 15, 17, 23, 27, 29, 36, 39, 49, 53, 71, 102, 106, 112, 120, 123, 124, 125], "And": [10, 19, 27, 29, 39, 46, 48, 56, 57, 58, 61, 64, 67, 73, 74, 107, 113, 118, 120, 123, 127], "As": [6, 25, 36, 45, 49, 51, 52, 54, 69, 76, 117, 118], "At": [47, 48, 60, 69, 70, 88, 93, 95, 104, 118, 120, 123], "Be": [45, 57], "But": [36, 39, 46, 47, 48, 56, 118, 120, 123, 126], "By": [45, 53, 62, 67, 72, 79, 80, 81, 112, 114, 124, 125], "For": [10, 27, 32, 33, 36, 39, 43, 49, 50, 51, 54, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 118, 120, 122, 123, 125, 126, 127], "If": [0, 5, 6, 8, 15, 17, 25, 26, 27, 29, 32, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 74, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 97, 100, 113, 114, 118, 119, 120, 123, 124, 126, 127], "In": [21, 22, 23, 26, 32, 35, 36, 43, 48, 49, 50, 54, 56, 62, 67, 73, 82, 118, 119, 120, 123, 125, 126], "It": [0, 6, 8, 10, 11, 15, 17, 19, 21, 22, 23, 25, 27, 28, 29, 32, 36, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 77, 81, 82, 84, 88, 92, 93, 97, 98, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127], "Its": [17, 27, 29, 36, 74, 76, 79, 82, 98, 112], "No": 120, "Not": [8, 20, 42, 68, 102, 112], "Of": 56, "On": [36, 51, 82], "Or": [17, 36, 57, 88, 93, 95, 104, 127], "TO": 57, "That": [56, 123], "The": [0, 2, 6, 7, 8, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "Then": [36, 49, 50, 57, 60, 69, 120], "There": [27, 36, 39, 42, 46, 56, 57, 59, 69, 70, 73, 82, 102, 112, 114, 119, 123, 126, 127], "These": [36, 46, 71, 72, 79, 80, 81, 98, 109, 110, 111, 116, 124, 127], "To": [27, 35, 36, 39, 44, 48, 57, 62, 64, 65, 66, 67, 68, 69, 73, 120, 122, 123, 125, 127], "Will": 27, "With": [25, 36, 73, 123, 127], "_": 125, "__fields__": [0, 9, 10, 11, 12, 15, 23], "__main__": 51, "__name__": 51, "_metadata": 2, "abil": 101, "abl": 112, "about": [0, 9, 10, 11, 12, 15, 23, 32, 33, 34, 36, 38, 41, 42, 43, 46, 49, 50, 58, 62, 63, 70, 72, 74, 80, 81, 85, 86, 105, 106, 107, 108, 113, 117, 118, 119, 120, 124, 125, 127], "abov": [54, 60, 69, 118, 119, 123, 127], "absolut": [6, 54], "abstract": [19, 28, 30], "abstracteventloop": 29, "accept": 54, "access": [0, 15, 38, 52, 67, 75, 98], "accident": 66, "acclaim": 64, "accomplish": 44, "accord": [10, 32, 43], "account": [58, 66], "accumul": 79, "accur": [35, 39, 45, 119, 125], "accuraci": [17, 103, 112, 116], "achat": 46, "achiev": [48, 53, 120, 124], "acomplet": [0, 31], "across": [64, 80, 107, 112, 116, 122, 124], "act": 124, "action": [118, 123], "actual": [29, 36, 51, 54, 115], "ad": [11, 39, 45, 64, 65, 66, 68, 124, 126], "ada": [67, 69], "adapt": 70, "add": [0, 2, 6, 17, 30, 39, 44, 57, 64, 65, 66, 68, 71, 76, 77, 85, 86, 92, 117, 120, 123, 127], "add_essential_metadata": [1, 14], "add_essential_metadata_llama_text_nod": [1, 14], "add_file_nam": [1, 2, 32, 33, 34, 50], "add_gen_gt": [8, 11], "addit": [0, 6, 7, 17, 21, 69, 72, 76, 77, 78, 80, 81, 107, 109, 110, 111, 125, 126, 127], "addition": [68, 106], "additional_kwarg": 0, "address": [79, 124], "adjust": [39, 64, 65, 66, 68, 125, 126], "advanc": [38, 51, 64, 123], "advanced rag": [67, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123], "advantag": 73, "advent": [39, 50], "aespa": [36, 49], "aespa1": 36, "aespa2": 36, "aespa3": 36, "affect": [20, 36, 120, 124], "aflatten_appli": [0, 29], "afraid": 39, "after": [5, 29, 32, 35, 39, 46, 47, 48, 49, 52, 56, 57, 61, 77, 98, 118, 120, 123, 126, 127], "ag": 111, "again": [50, 121, 123, 127], "against": 125, "ai": [7, 23, 45, 49, 51, 64, 93, 97, 98, 121], "aim": [39, 114, 116, 124], "album": 49, "algorithm": [113, 114, 115], "all": [0, 6, 17, 26, 29, 32, 36, 39, 43, 44, 46, 50, 53, 54, 55, 56, 57, 62, 67, 69, 71, 73, 74, 75, 82, 84, 86, 87, 92, 107, 111, 112, 116, 118, 119, 121, 122, 123, 124, 126, 127], "alloc": 111, "allow": [51, 57, 65, 67, 71, 72, 76, 77, 80, 81, 96, 109, 110, 111, 114, 124], "almost": 47, "alon": [107, 112, 123], "along": [53, 65], "alpha": [17, 120], "alreadi": [0, 6, 15, 27, 50, 51, 68, 120, 125], "also": [28, 32, 36, 38, 39, 50, 53, 54, 56, 62, 73, 74, 88, 114, 123], "altern": 57, "alwai": [33, 34, 39, 41, 52, 67, 120], "amazon": 58, "among": [0, 19, 21, 22, 23, 25, 26, 27, 115, 120], "amount": 79, "an": [0, 6, 15, 17, 32, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 62, 63, 65, 66, 68, 69, 79, 92, 97, 98, 108, 109, 110, 117, 118, 119, 120, 123, 126], "analysi": 79, "ani": [0, 2, 6, 8, 10, 16, 28, 29, 36, 45, 46, 49, 54, 56, 57, 58, 59, 61, 74, 76, 78, 79, 82, 98, 107, 112, 116, 123, 124, 126], "annot": [0, 9, 10, 11, 12, 15, 23], "anoth": [49, 51, 99, 124, 126, 127], "answer": [6, 8, 10, 11, 12, 15, 26, 35, 36, 39, 46, 47, 49, 50, 53, 54, 55, 62, 73, 78, 82, 101, 105, 106, 107, 108, 123, 125], "answer_creation_func": [6, 39], "answer_gt": 55, "anthrop": 42, "anthropic_api_kei": 42, "anywher": 52, "ap": [17, 54], "api": [0, 7, 27, 31, 42, 59, 60, 61, 63, 66, 68, 69, 73, 88, 93, 95, 104, 117, 118], "api_bas": [59, 60, 61, 69, 126], "api_endpoint": 15, "api_kei": [23, 30, 42, 59, 60, 61, 63, 66, 68, 69, 73, 88, 93, 95, 104, 126], "apirunn": [0, 15, 51, 127], "app": [15, 51, 57], "appear": 126, "append": 51, "appli": [29, 51, 64, 71, 98, 107, 112, 116, 124, 126, 127], "applic": [51, 63, 64, 79, 102, 112], "apply_recurs": [0, 29], "approach": [79, 114], "appropri": [65, 67, 68], "apt": 126, "ar": [10, 15, 17, 26, 27, 29, 32, 36, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 102, 107, 109, 110, 111, 112, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], "arbitrari": [71, 76, 79, 82, 98, 107, 112], "arbitrary_types_allow": [0, 23], "arg": [0, 6, 7, 14, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "argument": [0, 6, 7, 15, 17, 21, 29, 72, 80, 81, 109, 110, 111], "aris": 106, "arm": 97, "arrai": [23, 51], "arrang": 124, "articl": 29, "artifici": 51, "asap": 123, "ask": [10, 36, 49, 53, 56, 123], "aspect": 124, "assess": [53, 98], "assign": 17, "assist": [45, 49], "associ": [29, 64, 65, 66, 68, 79], "assumpt": 49, "ast": 118, "astream": [18, 19], "async": [0, 2, 6, 7, 9, 10, 11, 12, 17, 19, 23, 27, 29, 30, 46], "async_g_ev": [16, 17], "async_postprocess_nod": [18, 23], "async_qa_gen_llama_index": [4, 6], "async_run_llm": [18, 23], "asynccli": 23, "asynchron": [6, 29], "asyncio": 29, "asyncmixedbreadai": 23, "asyncopenai": [9, 10, 11, 12, 45, 47, 49, 107], "asyncrankgptrerank": [18, 23], "atom": 111, "attempt": 119, "attribut": 0, "augment": [20, 75, 124, 126, 127], "augmented_cont": 20, "augmented_id": 20, "augmented_scor": 20, "authent": [60, 64, 65, 66, 68, 69], "auto": [6, 15, 56, 57, 59, 69, 114], "auto rag": 56, "autom": 110, "automat": [28, 29, 36, 39, 51, 56, 58, 59, 61, 62, 64, 68, 71, 76, 79, 82, 97, 98, 107, 112, 120, 127], "automl": 56, "autorag": [32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 60, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125], "autorag config": [118, 121], "autorag doc": 56, "autorag fold": 119, "autorag instal": 57, "autorag multi gpu": 74, "autorag system": 124, "autorag tutori": 127, "autorag yaml": [118, 121], "autorag_hq": 56, "autorag_metr": [16, 17], "autorag_metric_loop": [16, 17], "autorag_search": 64, "autoragbedrock": [0, 31], "autoraghq": 57, "autotoken": 107, "avail": [0, 39, 42, 60, 69, 92, 108, 126], "averag": [0, 17, 55, 71, 107, 112, 116], "averaged_perceptron_tagger_eng": 57, "avoid": [0, 49, 125], "avoid_empty_result": [0, 31], "aw": [0, 30, 60, 66, 69], "awai": 127, "await": [0, 8, 46, 64, 65, 66, 68], "awar": [17, 125], "aws_access_key_id": 0, "aws_secret_access_kei": 0, "aws_session_token": 0, "azur": [42, 66], "b": [17, 120], "baai": [23, 69, 90, 91, 97], "back": 17, "backbon": 53, "backward": 77, "bad": [47, 48, 123], "badminton": 111, "baesd": 49, "band": 49, "base": [0, 1, 4, 8, 9, 10, 12, 17, 18, 31, 32, 35, 39, 42, 45, 46, 49, 51, 53, 64, 65, 66, 68, 69, 72, 78, 80, 81, 87, 90, 92, 93, 94, 95, 96, 98, 99, 101, 103, 105, 108, 114, 115, 116, 121, 122, 123, 124], "base_url": 51, "basechatmodel": 6, "baseembed": [17, 27], "basegener": [18, 19], "basellm": [9, 10, 11, 12, 46], "basemodel": [9, 10, 11, 12, 15], "basemodul": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "baseoutputpars": 0, "basepassageaugment": [18, 20], "basepassagecompressor": [18, 21], "basepassagefilt": [18, 22], "basepassagererank": [18, 23], "basepromptmak": [18, 25], "baseprompttempl": [0, 23], "basequeryexpans": [18, 26], "baseretriev": [18, 27], "baserunn": [0, 15], "basevectorstor": [0, 27, 30, 63], "bash": 57, "basi": [43, 55, 124], "basic": [6, 11, 42, 48, 50], "batch": [0, 2, 6, 7, 17, 19, 21, 23, 29, 39, 57, 62, 64, 65, 66, 68, 71, 72, 73, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 126], "batch_appli": [1, 8, 45, 46, 48, 49, 50], "batch_filt": [1, 8, 10, 47], "batch_siz": [8, 17, 23, 27, 29], "becaus": [10, 25, 27, 32, 35, 36, 43, 44, 46, 47, 48, 49, 74, 76, 79, 82, 98, 103, 112, 117, 121, 123, 126, 127], "becom": [39, 50, 118], "bedrock": [0, 60, 69], "bedrock_config": 58, "been": [122, 127], "befor": [27, 32, 49, 58, 59, 60, 61, 65, 69, 77, 79, 118, 123, 125, 126, 127], "behavior": [36, 63, 72, 80, 81, 103, 109, 110, 111, 124], "being": [72, 80, 81], "belong": 119, "below": [8, 32, 42, 45, 47, 48, 51, 52, 54, 57, 62, 64, 66, 67, 68, 71, 83, 84, 85, 86, 87, 123, 126, 127], "benz": 111, "bert_scor": [16, 17, 62, 71], "best": [0, 19, 21, 22, 23, 25, 26, 27, 29, 56, 65, 66, 68, 106, 114, 119, 122, 123, 127], "best_": 119, "best_0": 119, "best_column_nam": 29, "beta": [17, 70], "better": [46, 48, 76, 79, 82, 83, 87, 98, 112, 120, 127], "between": [17, 23, 27, 44, 53, 54, 63, 65, 66, 68, 71, 76, 113, 114, 122], "bfloat16": 103, "bge": [23, 69, 90, 91, 97], "bigram": 17, "bilingu": 53, "bin": 57, "bird": 111, "bit": 46, "bleu": [16, 17, 71, 107, 118, 122, 123, 125, 126], "blob": 17, "blue": 123, "bm": 69, "bm25": [0, 18, 26, 62, 70, 75, 112, 116, 118, 119, 123], "bm25_api": 27, "bm25_corpu": 27, "bm25_ingest": [18, 27], "bm25_path": 27, "bm25_pure": [18, 27], "bm25_token": [27, 70, 113], "bm25okapi": [27, 113], "bobb": 56, "bool": [0, 5, 6, 7, 8, 10, 15, 17, 20, 23, 28, 29, 30, 63, 64], "boolean": [6, 103], "boost": [73, 97], "both": [0, 51, 54, 62, 64, 77, 126], "botocor": 0, "botocore_config": 0, "botocore_sess": 0, "bottom": 81, "bowl": 49, "branch": 123, "break": [44, 55, 63], "brew": 126, "brief": [49, 64, 65, 66, 68], "broader": 124, "browser": 15, "bshtml": 41, "bucket_nam": 64, "buffer": 51, "bui": 55, "build": [36, 50, 61, 119, 120, 123, 125], "built": [57, 125], "bulb": 49, "button": 61, "byte": 29, "byte_data": 29, "c": [57, 126], "cach": 6, "cache_batch": [6, 39], "calcul": [17, 27, 54, 63, 65, 66, 68, 76, 79, 85, 86, 103, 114, 115, 122], "calculate_cosine_similar": [16, 17], "calculate_inner_product": [16, 17], "calculate_l2_dist": [16, 17], "call": [0, 46, 60, 69, 72, 73, 80, 81, 103, 113, 114], "callabl": [0, 1, 2, 6, 7, 8, 14, 27, 28, 29, 32], "callback_manag": [0, 23], "callbackmanag": [0, 23], "can": [5, 6, 7, 8, 10, 15, 17, 21, 22, 23, 25, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127], "cannot": [57, 66, 67, 107, 112], "capabl": [64, 65, 66, 68], "capella": 64, "capit": 49, "case": [26, 36, 39, 50, 54, 56, 63, 65, 66, 67, 68, 120, 123, 126], "cast": [19, 20, 21, 22, 23, 25, 26, 27, 28], "cast_corpus_dataset": [0, 29], "cast_embedding_model": [0, 16], "cast_metr": [0, 16], "cast_qa_dataset": [0, 29], "cast_queri": [18, 27], "cast_to_run": [0, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], "castorini": [23, 96], "categor": 121, "caus": [88, 93, 120, 126, 127], "cc": [27, 116], "cd": 57, "certain": [29, 46], "certainli": [51, 63], "cg": 54, "chain": [53, 120], "chang": [10, 29, 39, 48, 69, 70, 88, 93, 104, 113, 123, 124, 126], "channel": [56, 126, 127], "chapter": 50, "charact": 43, "characterist": [65, 66, 68], "chat": [0, 6, 73, 126], "chat_box": [0, 31], "chat_prompt": 21, "chatinterfac": 15, "chatmessag": [0, 9, 12, 23, 46, 49], "chatmodel": 38, "chatopenai": 38, "chatrespons": [23, 46], "check": [0, 17, 28, 30, 35, 36, 48, 50, 51, 56, 57, 60, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 90, 91, 113, 118, 119, 123, 126, 127], "check_expanded_queri": [18, 26], "check_generation_gt": 45, "child": 111, "choic": [113, 120], "choos": [10, 17, 23, 26, 36, 65, 66, 68, 99, 113, 117, 120, 122], "chroma": [0, 31, 67, 69, 70, 119], "chroma_cloud": 63, "chroma_default": 63, "chroma_ephemer": 63, "chroma_http": 63, "chroma_openai": 69, "chroma_persist": 63, "chromadb": [6, 39, 117], "chunk": [0, 1, 5, 8, 35, 36, 39, 48, 51, 80, 108, 123], "chunk_config": [32, 50], "chunk_method": [32, 34, 48, 50], "chunk_modul": [33, 34], "chunk_overlap": [32, 34, 39, 48, 50], "chunk_project_dir": 50, "chunk_siz": [29, 32, 34, 39, 48, 50, 51], "chunk_text": 2, "chunked_cont": [2, 32], "chunked_str": 32, "chunker": [2, 31, 50], "chunker_nod": [1, 2], "ci": 57, "circl": 123, "ciudad": 49, "cl": 29, "claim": 17, "clarifi": 39, "class": [0, 8, 9, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 36, 38, 60, 63, 65, 66, 68, 69, 97, 99, 101, 117], "classif": 48, "classifi": [47, 54], "classmethod": [0, 15, 27, 28], "classvar": [0, 9, 10, 11, 12, 15, 23], "claud": [58, 60, 69], "clear": 45, "clearli": 49, "cli": [31, 58, 127], "click": 61, "client": [0, 9, 10, 11, 12, 23, 39, 45, 47, 49, 65, 67, 68], "client_typ": [30, 63, 67, 68, 69, 70], "clone": 57, "close": 103, "cloud": [7, 30, 63, 64, 66], "clova": [0, 1, 43, 44], "co": [56, 69], "code": [6, 8, 11, 17, 32, 33, 34, 40, 41, 50, 57, 60, 68, 69, 118], "coher": [0, 17, 18, 71, 75, 88, 93, 121], "cohere_api_kei": [88, 121], "cohere_cli": 23, "cohere_rerank": [75, 98], "cohere_rerank_pur": [18, 23], "coherererank": [18, 23], "cointegr": 69, "colber": 89, "colbert": [0, 18, 75, 93, 98], "colbert_rerank": [75, 89], "colbertrerank": [18, 23], "colbertv2": [23, 89], "collect": [6, 27, 29, 36, 39, 63, 65, 66, 68, 118, 123, 124], "collection_nam": [30, 63, 64, 65, 67, 68, 69, 70, 119], "column": [0, 6, 8, 15, 19, 20, 21, 22, 23, 25, 26, 27, 29, 36, 39, 46, 49, 51, 127], "column_nam": 29, "com": [6, 15, 17, 51, 56, 57, 61, 65, 68, 123], "combin": [26, 27, 28, 29, 44, 107, 114, 115, 118, 120, 124], "come": [36, 49, 54, 56, 109, 110, 111, 120, 123], "comedi": 111, "command": [52, 57, 58, 59, 61, 62, 126], "commentari": 45, "commit": 126, "common": [17, 27, 46, 57, 97, 111, 122, 124, 126, 127], "compani": 56, "compar": [55, 71, 122, 125], "comparison": [55, 125], "compat": [8, 60, 69, 74], "compatibilti": 74, "complet": [0, 32, 43, 60, 62, 69, 73], "completion_to_prompt": 0, "completionrespons": 0, "completiontoprompttyp": 0, "complex": [40, 46, 123], "complic": 46, "compon": 124, "comprehens": 75, "compress": [21, 55, 78, 79, 82, 123], "compress_raga": [8, 9, 46], "compressor": [21, 55, 75, 78, 79, 80, 81, 121], "comput": [0, 9, 10, 11, 12, 15, 17, 18, 23, 64, 79, 97], "computedfieldinfo": [0, 9, 10, 11, 12, 15, 23], "concept": 53, "concept_completion_query_gen": [8, 12, 49], "concis": [11, 48, 49, 50], "conclud": 103, "conclus": 106, "condit": [36, 38], "conditional_evolve_raga": [8, 9, 46], "config": [0, 9, 10, 11, 12, 15, 23, 57, 60, 67, 69, 70, 122, 123, 126], "config_dict": 15, "configdict": [0, 9, 10, 11, 12, 15, 23], "configur": [0, 9, 10, 11, 12, 15, 23, 29, 56, 57, 58, 59, 61, 71, 72, 79, 80, 81, 98, 103, 107, 112, 116, 120, 124, 127], "conflict": 53, "conform": [0, 9, 10, 11, 12, 15, 23], "confus": 82, "connect": [0, 53, 63, 64, 67, 68, 117], "connection_str": 64, "consid": [6, 54, 57, 67, 74, 112], "consist": [0, 17, 71, 121], "constraint": [45, 57], "consum": [56, 67], "contain": [2, 6, 7, 8, 17, 19, 21, 22, 23, 25, 27, 28, 29, 36, 39, 43, 44, 45, 46, 51, 54, 105, 106, 108, 111, 119, 120, 124, 126, 127], "content": [31, 32, 39, 41, 46, 49, 51, 68, 79, 83, 84, 85, 86, 87, 98, 107, 116, 117, 125], "content_embed": [23, 27], "content_s": [6, 39], "contents_list": 29, "context": [0, 23, 45, 47, 49, 53, 54, 75, 78, 103, 104, 107, 124], "context_s": 0, "contextu": 53, "contradict": 53, "contributor": 57, "control": [17, 60, 65, 69, 74], "conveni": [39, 52], "convert": [0, 15, 28, 29, 39, 40, 42, 118], "convert_datetime_str": [0, 29], "convert_env_in_dict": [0, 29], "convert_inputs_to_list": [0, 29], "convert_string_to_tuple_in_dict": [0, 29], "convex": [27, 114], "cool": 123, "copi": 61, "core": [0, 34, 39, 46, 49, 53, 60, 69], "coroutin": 29, "corpu": [0, 1, 4, 6, 8, 27, 35, 47, 48, 49, 53, 57, 58, 59, 61, 62, 67, 70, 76, 84, 102, 108, 116, 119, 127], "corpus_data": [6, 27, 29], "corpus_data_path": [0, 57, 58, 59, 61, 62, 67, 126, 127], "corpus_data_row": 6, "corpus_df": [6, 8, 14, 20, 29, 38, 39, 50], "corpus_df_to_langchain_docu": [1, 14], "corpus_inst": 50, "corpus_path": 27, "corpus_save_path": 8, "corpus_test": 127, "correct": [0, 54, 125], "correl": 53, "correspond": [0, 9, 10, 11, 12, 15, 23, 28, 64, 65, 66, 68], "cosin": [17, 27, 30, 53, 63, 65, 66, 68, 76, 125], "cost": [17, 44, 64, 79, 127], "cot": 53, "couchbas": 67, "couchbase_connection_str": 64, "couchbase_db": 64, "couchbase_password": 64, "couchbase_usernam": 64, "could": [19, 21, 22, 23, 25, 27], "couldn": 52, "count": [17, 78, 113], "cours": 56, "cover": [32, 35, 39, 43, 46, 48, 49, 50], "cpp": 92, "cpu": [17, 97, 121], "cr": 68, "creat": [0, 5, 6, 7, 8, 12, 15, 28, 29, 32, 35, 36, 37, 40, 43, 48, 49, 50, 51, 52, 56, 62, 63, 65, 66, 68, 105, 108, 114, 119, 123], "creation": [6, 8, 49, 56, 127], "criterion": 124, "critic": 6, "critic_llm": [6, 38], "cross": [23, 92, 100], "crucial": [32, 35, 36, 43, 48, 67, 79, 98, 106, 124], "csv": [32, 43, 120, 127], "cucumb": 111, "cuda": [57, 89, 90, 91, 92, 97, 100], "cudnn": 57, "cue": 103, "cumul": 74, "curiou": 62, "current": [15, 29, 32, 43, 51, 55, 92, 124, 127], "curs": 46, "custom": [0, 42, 52, 64, 65, 66, 68, 72, 80, 81, 85, 86, 99, 103, 109, 110, 111, 117, 122, 124, 125, 126], "custom_gener": 125, "custom_query_gen": [8, 12, 49], "custom_retriev": 125, "cutoff": [75, 82], "cycl": 123, "czech": 32, "d": [6, 26, 29, 36, 51], "dag": 123, "dai": 123, "danish": 32, "dashboard": 31, "data": [0, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 40, 41, 43, 45, 46, 47, 49, 51, 53, 56, 57, 62, 64, 65, 66, 67, 68, 71, 79, 98, 106, 112, 117, 124, 127], "data_list": 51, "data_path": 7, "data_path_glob": [0, 7, 50], "data_path_list": 7, "databas": [30, 63, 64, 65, 66, 68, 117], "dataformat": 32, "datafram": [0, 2, 5, 6, 8, 11, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 46, 125], "dataset": [6, 8, 10, 29, 32, 35, 39, 47, 49, 50, 54, 56, 57, 58, 59, 61, 62, 67, 114, 119, 125, 126], "date": [49, 75, 84], "datetim": [36, 43, 84, 102], "db": [0, 6, 30, 63, 123], "db_name": [30, 65], "db_type": [63, 64, 65, 66, 67, 68, 69, 70], "dbsf": [27, 114, 116], "dcg": 54, "dd": 84, "de": 49, "deal": 79, "debug": 36, "decid": [62, 74, 123, 124], "decis": 124, "decod": 29, "decode_multiple_json_from_byt": [0, 29, 51], "decompos": [26, 75, 112], "decomposit": 111, "decor": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 125], "decreas": [47, 73, 89, 90, 91, 92, 97, 100], "dedic": 75, "deep": 97, "deepev": 17, "deepeval_faith": [16, 17], "deepeval_prompt": [0, 16], "def": [32, 46, 51, 125], "default": [0, 2, 5, 6, 7, 11, 15, 17, 21, 23, 25, 26, 27, 29, 30, 32, 36, 39, 42, 45, 49, 51, 57, 63, 64, 65, 66, 68, 69, 72, 73, 75, 77, 78, 80, 81, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 117, 118, 122, 124, 126], "default_config": [67, 126, 127], "default_databas": [30, 63], "default_factori": [0, 23], "default_ten": [30, 63], "defaulttoken": 17, "defin": [0, 9, 10, 11, 12, 15, 23, 57, 76, 96, 98, 116, 117, 122, 125], "delet": [0, 29, 30, 64, 65, 66, 68, 82, 126], "delete_collect": [0, 30, 65, 66, 68], "delete_index": [0, 30], "deletion_protect": [30, 66], "deliv": 123, "demo": 56, "demoj": [0, 29], "dens": [27, 109, 113, 117], "depend": [10, 32, 57, 113, 119, 127], "deploi": [0, 31, 51, 52, 56, 97], "deploy": [56, 59, 65, 68, 69, 114], "deportiva": 49, "deprec": [27, 37], "deriv": 45, "describ": [50, 51], "descript": [0, 23, 48, 51, 60, 69, 71, 76, 98, 116], "design": [6, 39, 53, 62, 65, 66, 68, 71, 101, 106, 114, 115], "detail": [40, 46, 49, 50, 53, 58, 67, 71, 74, 94, 99, 107, 108, 112, 124, 127], "detect": 114, "determin": [64, 65, 66, 71, 119, 122], "develop": [17, 51, 74, 120, 124], "devic": [23, 97], "device_map": [59, 69], "df": [15, 29, 47, 48, 50, 126], "diagram": [120, 123], "dict": [0, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 44, 46, 63], "dict_": 29, "dict_column": 29, "dict_to_markdown": [0, 29], "dict_to_markdown_t": [0, 29], "dictionari": [0, 6, 9, 10, 11, 12, 15, 16, 23, 27, 29, 32, 36, 38, 39, 71, 96, 125], "did": [0, 125], "didn": 38, "differ": [6, 10, 29, 32, 36, 39, 45, 46, 48, 50, 53, 60, 63, 69, 71, 96, 110, 112, 113, 115, 119, 124], "difficulti": [46, 126], "dimens": [26, 29, 30, 64, 66], "dir": [51, 127], "direct": [46, 49, 59, 69, 102, 112], "directli": [8, 38, 42, 49, 53, 54, 79, 88, 93, 95, 104, 118, 120, 126], "directori": [0, 5, 6, 15, 19, 21, 22, 23, 25, 26, 27, 32, 41, 43, 50, 51, 52, 62, 67, 126, 127], "directoryload": 39, "disabl": [30, 66, 67, 126, 127], "discord": [56, 123, 126, 127], "discrimin": 47, "displai": 36, "distanc": [30, 65, 66, 68, 125], "distance_to_scor": [0, 30], "distinct": 79, "distinguish": [44, 114], "distribut": [6, 38, 39, 64], "distribute_list_by_ratio": [4, 6], "divid": [40, 54, 113, 121], "dl": 96, "do": [5, 6, 8, 26, 36, 44, 46, 54, 55, 56, 57, 118, 119, 123, 127], "doc": [6, 15, 36, 37, 54, 57, 69, 74, 122], "doc123": 51, "doc456": 51, "doc_id": [0, 2, 15, 27, 29, 32, 51, 126], "docker": 30, "dockerfil": 57, "document": [2, 5, 6, 7, 8, 14, 15, 23, 27, 32, 35, 36, 40, 41, 42, 43, 44, 49, 50, 51, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 98, 104, 107, 108, 112, 113, 116, 118, 120, 122, 123, 124, 127], "document_load": [7, 39, 41], "doe": [15, 27, 45, 53, 57, 71, 72, 73, 74, 79, 82, 98, 107, 118, 120], "doesn": [6, 54, 64, 65, 66, 68, 111, 123, 126], "domain": 113, "don": [0, 10, 25, 29, 36, 39, 43, 45, 48, 50, 54, 56, 107, 114, 121, 123, 126, 127], "done": 127, "dontknow": [1, 8, 47, 48, 50], "dontknow_filter_llama_index": [8, 10, 47], "dontknow_filter_openai": [8, 10, 47], "dontknow_filter_rule_bas": [8, 10, 47, 48, 50], "dotenv": [57, 126], "doubl": 36, "down": [54, 63], "download": [36, 57, 127], "dozen": 62, "drive": 111, "drop": [10, 47, 48, 50, 106, 126], "due": [57, 92], "dummi": 125, "duplic": [28, 36, 118], "durat": 65, "dure": [112, 126], "dutch": 32, "dynam": [57, 124], "dynamically_find_funct": [0, 31], "e": [57, 60, 69, 72, 80, 81, 125], "e1c0": 126, "each": [0, 6, 8, 26, 27, 28, 29, 36, 38, 39, 50, 51, 53, 63, 67, 85, 86, 111, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126], "earli": 36, "easi": 61, "easier": 118, "easili": [32, 43, 49, 117, 123, 125, 127], "east": [30, 66], "echo": 126, "edg": 64, "edit": [57, 62, 126], "edit_summary_df_param": [18, 27], "editor": 118, "effect": [12, 44, 46, 64, 71, 98, 115, 116, 124, 125, 127], "effective_ord": 17, "effici": [65, 66, 68, 79], "effort": 124, "either": 54, "elem": 29, "element": [27, 28, 29], "els": 51, "emb": [117, 123], "embed": [0, 6, 17, 27, 30, 39, 53, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 71, 75, 76, 85, 86, 98, 113, 117, 119, 121, 125, 127], "embed_batch_s": 0, "embed_dim": 0, "embedding model": [60, 69], "embedding_batch": [30, 63, 64, 65, 66, 67, 68, 70], "embedding_kei": 64, "embedding_model": [6, 17, 20, 26, 27, 29, 30, 38, 39, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 85, 86, 112, 116, 125], "embedding_query_cont": [0, 29], "emploi": 111, "empti": [0, 27, 36, 62, 65, 118], "empty_cuda_cach": [0, 29], "en": [9, 10, 11, 12, 17, 23, 32, 42, 45, 47, 48, 49, 50, 69, 71, 93, 96], "en_qa": 47, "en_qa_df": 47, "enabl": 66, "encod": [19, 23, 92, 100], "encount": 126, "encourag": 49, "end": [29, 36, 51, 103], "end_idx": [0, 2, 15, 51], "endpoint": [0, 15, 59, 60, 69, 127], "engin": 125, "enginearg": 74, "english": [2, 32, 34, 88, 113, 121], "enhanc": [98, 103, 122, 124], "enough": [36, 82], "ensur": [49, 51, 57, 67, 71, 79, 98, 107, 112, 116, 125], "enter": 62, "entir": 64, "entri": 79, "entrypoint": 57, "enumer": 51, "env": [57, 73], "environ": [7, 29, 41, 52, 57, 67, 74, 88, 93, 95, 104, 121, 126, 127], "ephemer": 63, "equal": [6, 54], "equival": 51, "error": [0, 11, 73, 88, 93, 99, 111], "essenc": 49, "essenti": [62, 70, 83, 84, 85, 86, 87, 107, 114, 115, 120, 124, 126], "estonian": 32, "etc": [36, 39, 118], "euclidean": [65, 66, 68], "eval": 17, "evalu": [10, 15, 19, 21, 22, 23, 25, 26, 27, 29, 31, 32, 35, 36, 37, 47, 53, 56, 57, 58, 59, 61, 62, 67, 71, 79, 98, 107, 112, 114, 116, 118, 119, 122, 124, 126], "evaluate_gener": [0, 16], "evaluate_generator_nod": [18, 19], "evaluate_generator_result": [18, 25], "evaluate_one_prompt_maker_nod": [18, 25], "evaluate_one_query_expansion_nod": [18, 26], "evaluate_passage_compressor_nod": [18, 21], "evaluate_retriev": [0, 16], "evaluate_retrieval_cont": [0, 16], "evaluate_retrieval_nod": [18, 27], "even": [0, 47, 106, 114, 121], "evenly_distribute_passag": [18, 27], "event": [29, 49, 51, 126], "event loop autorag": 126, "ever": 123, "everi": [19, 70, 73, 124], "evolut": [6, 38], "evolv": [1, 8, 48, 49], "evolve_to_rud": 46, "evolved_queri": [8, 9], "exact": [47, 53], "exactli": 54, "exampl": [0, 6, 10, 36, 39, 43, 46, 48, 53, 60, 63, 65, 67, 69, 70, 118, 120, 123, 126, 127], "example_node_line_1": 122, "example_node_line_2": 122, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [71, 73, 79, 98, 107, 111], "exceed": [107, 112, 116], "except": [55, 64, 121], "exclud": [0, 23, 49, 121], "exclus": 117, "execut": [0, 27, 29, 57, 60, 69, 112, 127], "exist": [0, 5, 6, 27, 28, 30, 36, 64, 65, 66, 67, 68, 92, 119], "exist_gen_gt": [6, 39], "existing_qa": 39, "existing_qa_df": 39, "existing_query_df": 6, "exp": 17, "exp_norm": [18, 23], "expand": [112, 120, 125], "expanded_queri": 26, "expanded_query_list": 26, "expans": [25, 26, 27, 36, 75, 79, 109, 111, 121, 123], "expect": [36, 103], "expens": [17, 44, 47, 67], "experi": [0, 56, 58, 59, 61, 62, 119, 123, 126, 127], "experiment": [67, 71], "expert": [45, 49], "expir": 52, "explain": [63, 119, 121, 122, 123], "explan": 49, "explicit": 53, "explicitli": 67, "explod": [0, 29], "explode_valu": 29, "explor": [57, 114, 115], "export": [57, 88, 93, 95, 104, 121, 126], "expos": 15, "express": 58, "extend": 63, "extens": [5, 6, 43, 67, 118], "extent": 53, "extern": 49, "extra": [7, 17, 29, 45, 113], "extract": [15, 28, 41, 84, 102, 113, 114], "extract_best_config": [0, 15, 127], "extract_evid": [0, 1], "extract_node_line_nam": [0, 15], "extract_node_strategi": [0, 15], "extract_retrieve_passag": [0, 15], "extract_valu": [0, 28], "extract_values_from_nod": [0, 28], "extract_values_from_nodes_strategi": [0, 28], "extract_vectordb_config": [0, 15], "f": [46, 51, 75, 107], "f1": [17, 79], "face": [56, 57, 97], "facebook": [70, 74], "facilit": 71, "fact": 123, "factoid": 48, "factoid_query_gen": [8, 12, 48, 49, 50, 70], "factori": 0, "factual": 49, "fail": 51, "faith": 17, "faithfulnesstempl": [16, 17], "fall": 17, "fallback": 17, "fals": [0, 5, 6, 7, 10, 15, 17, 23, 29, 30, 42, 63, 64, 67, 83, 87, 90, 91, 99, 103], "familiar": 123, "fashion": 81, "fast": [47, 74, 88, 92, 93, 104], "faster": [64, 65, 66, 68, 74, 79], "fate": 123, "favorit": 118, "featur": [2, 36, 40, 53, 57, 71, 123, 127], "fee": 117, "feedback": [120, 123], "feel": [46, 56, 123, 127], "fetch": [0, 30, 64, 65, 66, 68, 76, 77, 116], "fetch_cont": [0, 29], "fetch_one_cont": [0, 29], "few": [50, 111, 123, 127], "field": [0, 9, 10, 11, 12, 15, 17, 23, 54, 84, 102, 125], "fieldinfo": [0, 9, 10, 11, 12, 15, 23], "fields_to_check": [17, 28], "file": [0, 5, 6, 7, 8, 14, 15, 17, 29, 36, 39, 42, 51, 52, 53, 56, 57, 60, 63, 65, 67, 69, 70, 74, 88, 93, 95, 99, 104, 114, 119, 120, 122, 123, 124, 125, 126], "file_dir": [5, 6], "file_nam": [2, 32], "file_name_languag": 2, "file_pag": [0, 15, 51], "file_path": 14, "filenam": [5, 6, 27], "filepath": [0, 5, 6, 15, 29, 51], "filesystem": [14, 57], "fill": [29, 36, 53], "filter": [0, 1, 8, 22, 50, 73, 75, 76, 83, 85, 86, 87], "filter_by_threshold": [0, 31], "filter_dict_kei": [0, 29], "filter_exist_id": [18, 27], "filter_exist_ids_from_retrieval_gt": [18, 27], "filtered_qa": 47, "final": [0, 32, 43, 44, 78, 115, 120, 123], "find": [0, 10, 29, 33, 34, 39, 40, 41, 42, 47, 49, 53, 54, 56, 58, 60, 69, 78, 101, 107, 114, 115, 116, 119, 120, 124], "find_key_valu": [0, 29], "find_node_dir": [0, 31], "find_node_summary_fil": [0, 29], "find_trial_dir": [0, 29], "find_unique_elem": [18, 27], "fine": 108, "finnish": 32, "first": [8, 15, 17, 27, 29, 39, 46, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 64, 67, 74, 88, 93, 95, 98, 104, 117, 118, 119, 120, 121, 123], "fit": [53, 64, 124], "five": 36, "fix": 53, "fixed_min_valu": 27, "flag": [75, 98], "flag_embed": [0, 18], "flag_embedding_llm": [0, 18], "flag_embedding_llm_rerank": [75, 90], "flag_embedding_rerank": [75, 91], "flag_embedding_run_model": [18, 23], "flagembed": [57, 90, 91], "flagembeddingllm": 91, "flagembeddingllmrerank": [18, 23], "flagembeddingrerank": [18, 23], "flash": 42, "flashrank": [0, 18, 98], "flashrank rerank": 92, "flashrank_rerank": 92, "flashrank_run_model": [18, 23], "flashrankrerank": [18, 23], "flask": [15, 51, 56], "flat_list": 29, "flatmap": [1, 8], "flatten": 29, "flatten_appli": [0, 29], "flexibl": [64, 96, 114, 124], "float": [0, 15, 17, 23, 27, 28, 30, 51, 65, 74], "float16": [59, 69], "floor": 17, "flow": 53, "fluenci": [17, 71], "fn": 8, "focu": [79, 127], "focus": [45, 124], "folder": [15, 57, 58, 61, 67, 121, 123], "follow": [6, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 67, 69, 84, 103, 114, 119, 123, 125, 126], "forget": 127, "form": [2, 6, 32, 35, 39, 40, 50, 53], "format": [0, 29, 32, 39, 40, 43, 54, 84, 103, 119], "forward": 77, "found": [39, 49, 53, 72, 80, 81, 85, 86, 94, 99, 117, 127], "four": [55, 63, 121], "fp16": [90, 91], "fragment": 17, "frame": 0, "framework": [38, 53, 123], "franc": 49, "free": [51, 56, 123, 127], "french": 32, "frequent": [60, 69], "friendli": 52, "from": [0, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 79, 84, 88, 92, 93, 95, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127], "from_datafram": [0, 28], "from_dict": [0, 28], "from_parquet": [0, 31, 32, 50], "from_trial_fold": [0, 15, 51, 52, 127], "from_yaml": [0, 15, 51, 52, 127], "fstring": [0, 18, 62, 75, 105, 107, 108, 123], "full": [36, 45, 57, 58, 61, 64, 66, 68, 74, 119, 124], "full_ingest": [0, 67], "fulli": 57, "func": [0, 2, 6, 7, 19, 29], "function": [0, 5, 6, 8, 10, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 39, 40, 43, 48, 49, 63, 64, 65, 66, 68, 70, 101, 124, 125, 127], "fundament": 116, "further": [27, 54, 58, 59, 61, 72, 80, 81, 109, 110, 111], "fuse": [27, 114], "fuse_per_queri": [18, 27], "fusion": [27, 115], "futur": [36, 51, 73, 120, 123, 124], "g": [17, 60, 69, 72, 80, 81, 125], "g_eval": [16, 17, 53, 71], "gamma": 17, "gcc": 126, "gcp": 66, "gemini": 42, "gemini_api_kei": 42, "gemma": [23, 90], "gener": [0, 6, 8, 11, 15, 18, 25, 29, 31, 35, 36, 37, 39, 46, 47, 50, 51, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 79, 103, 107, 109, 110, 111, 112, 120, 121, 123, 124, 126], "generate_answ": [4, 6, 39], "generate_basic_answ": [4, 6], "generate_claim": [16, 17], "generate_qa_llama_index": [4, 6, 39, 70], "generate_qa_llama_index_by_ratio": [4, 6, 39], "generate_qa_raga": [4, 6, 38], "generate_qa_row": [4, 6], "generate_row_funct": 6, "generate_simple_qa_dataset": [4, 6], "generate_truth": [16, 17], "generate_verdict": [16, 17], "generate_with_langchain_doc": 6, "generated_log_prob": [0, 28, 125], "generated_text": [0, 15, 17, 28, 51, 125], "generated_token": 125, "generation_gt": [0, 1, 6, 8, 10, 17, 28, 45, 47, 48, 50, 125], "generation_result_df": 125, "generator_class": 25, "generator_dict": 18, "generator_llm": [6, 38], "generator_model": [60, 69], "generator_modul": [25, 107], "generator_module_typ": [17, 109, 110, 111], "generator_nod": [18, 19], "generator_param": 25, "german": 32, "get": [0, 7, 14, 20, 29, 38, 39, 42, 46, 47, 49, 53, 57, 66, 72, 73, 82, 88, 92, 93, 95, 104, 118, 120, 123, 126, 127], "get_best_row": [0, 29], "get_bm25_pkl_nam": [18, 27], "get_bm25_scor": [18, 27], "get_colbert_embedding_batch": [18, 23], "get_colbert_scor": [18, 23], "get_default_llm": 23, "get_event_loop": [0, 29], "get_file_metadata": [1, 14], "get_hybrid_execution_tim": [18, 27], "get_id_scor": [18, 27], "get_ids_and_scor": [18, 27], "get_metric_valu": [0, 31], "get_multi_query_expans": [18, 26], "get_nodes_from_docu": 39, "get_or_create_collect": 39, "get_param_combin": [0, 1, 14, 28], "get_query_decompos": [18, 26], "get_result": [18, 19], "get_result_o1": [18, 19], "get_runn": [0, 31], "get_scores_by_id": [18, 27], "get_start_end_idx": [1, 14], "get_structured_result": [18, 19], "get_support_modul": [0, 31], "get_support_nod": [0, 31], "get_support_vectordb": [0, 30], "get_vers": 51, "gg": [56, 123], "girl": [36, 111], "gist": 53, "git": 57, "github": [17, 36, 56, 57, 123, 126, 127], "give": [0, 46, 54], "given": [0, 5, 6, 15, 17, 27, 29, 39, 45, 47, 49, 62, 64, 65, 66, 68, 78, 95, 96, 99, 101, 109, 110, 120], "glob": [39, 43], "go": [36, 54, 56, 61, 113, 122, 127], "goal": [112, 120], "goe": [70, 123], "gone": 73, "good": [10, 36, 39, 47, 48, 50, 53, 123, 127], "got": 73, "gpt": [9, 10, 11, 12, 17, 25, 38, 39, 42, 47, 49, 53, 60, 69, 71, 72, 73, 79, 80, 81, 99, 107, 110, 111, 120, 126], "gpt-3.5": 73, "gpt-4": 73, "gpt2": [71, 73, 107, 113], "gpt4o": [7, 42], "gpu": [97, 127], "gr": 15, "gradio": [0, 31, 127], "gradiorunn": [0, 15, 127], "grain": 108, "gram": [17, 53], "gratitud": 92, "great": [35, 39, 47, 56, 113, 120], "greatest": 47, "greek": 32, "ground": [6, 17, 36, 45, 47, 53, 54, 71, 120, 125], "ground_truth": 17, "group": [36, 49], "grpc_port": [30, 68], "gt": [0, 17, 36, 45, 53, 54, 55, 120], "guarante": [82, 120], "guess": 46, "guid": [35, 39, 50, 56, 64, 68, 71, 79, 98, 107, 112, 113, 116, 123, 124, 127], "guidanc": 6, "h": 51, "ha": [6, 8, 11, 12, 36, 39, 47, 49, 50, 53, 55, 79, 122, 123, 127], "had": 127, "halftim": 49, "hallucin": [2, 32, 123], "ham": 68, "hamlet": 111, "hand": [36, 82], "handi": 14, "handle_except": [0, 31], "happen": 123, "hard": [39, 46, 56, 120, 123], "hardwar": 97, "harmon": [53, 54, 55], "have": [0, 6, 8, 10, 27, 29, 32, 35, 36, 40, 42, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 97, 100, 102, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127], "haven": 51, "head": 29, "header": [30, 63], "help": [36, 79, 97, 108, 114], "here": [6, 15, 32, 33, 34, 35, 36, 38, 41, 42, 43, 46, 49, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 85, 86, 90, 91, 94, 104, 113, 117, 118, 119, 120, 121, 123, 125, 126, 127], "hf": [21, 78], "hf_config": 59, "hh": 84, "high": [17, 98], "higher": [53, 54, 74, 79, 93, 124], "highest": [10, 27], "highli": [46, 50, 53, 64, 113, 127], "hit": 54, "home": 49, "homepag": 56, "hood": 120, "hop": [6, 8, 12, 39, 48, 111], "hope": 119, "hopefulli": 54, "host": [15, 30, 51, 57, 59, 60, 63, 66, 68, 69, 127], "hour": 52, "how": [6, 32, 35, 39, 43, 45, 48, 49, 50, 54, 58, 59, 61, 62, 63, 64, 65, 66, 67, 72, 80, 81, 85, 86, 103, 111, 113, 117, 118, 119, 121, 122, 123, 125, 127], "howev": [39, 50, 54, 67, 114, 120, 123], "html": [6, 15, 34], "htmlnodepars": 34, "http": [6, 7, 15, 17, 30, 51, 56, 57, 61, 63, 65, 69, 123], "hug": [57, 97], "huge": 0, "huggingfac": [17, 26, 36, 56, 57, 60, 74, 107, 127], "huggingface_all_mpnet_base_v2": [62, 69], "huggingface_baai_bge_smal": 69, "huggingface_bge_m3": 69, "huggingface_cointegrated_rubert_tiny2": 69, "huggingface_evalu": [16, 17], "huggingfaceembed": 69, "huggingfacellm": [72, 80, 81], "human": 53, "hybrid": [27, 43, 75, 116, 118], "hybrid cc": 114, "hybrid rrf": 115, "hybrid_cc": [0, 18, 62, 75, 112, 114, 116], "hybrid_dbsf": 62, "hybrid_module_func": 27, "hybrid_module_param": 27, "hybrid_rrf": [0, 18, 62, 70, 75, 112, 115, 116, 118], "hybrid_rsf": 62, "hybridcc": [18, 27], "hybridretriev": [18, 27], "hybridrrf": [18, 27], "hyde": [0, 18, 60, 69, 75, 112], "hydrogen": 111, "hyperparamet": [27, 118], "hypothet": 109, "i": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 119, 121, 124, 125, 127], "id": [0, 20, 23, 27, 29, 30, 32, 36, 48, 51, 58, 64, 65, 66, 67, 68, 87, 92, 97, 116, 125], "id_": 29, "id_column_nam": 29, "idcg": 54, "ideal": [54, 63, 64], "ident": 49, "identifi": [36, 51, 60, 63, 64, 65, 66, 68, 69, 98, 116], "idf": [53, 113], "idx_rang": 8, "ignor": [27, 51], "imag": [36, 119, 127], "imagin": 36, "imdb": 111, "immedi": 112, "impact": [54, 79, 107, 112, 117], "implement": [63, 65, 123, 125], "import": [32, 33, 34, 36, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 63, 67, 69, 70, 82, 111, 113, 115, 123, 127], "importerror": 126, "imposs": [47, 123], "improv": [17, 79, 98, 103, 112, 125], "inc": [56, 57, 123], "includ": [6, 12, 17, 19, 36, 49, 51, 53, 54, 60, 63, 69, 72, 80, 81, 97, 107, 112, 114, 122, 124, 125], "incorrect": [54, 84], "increas": [46, 54, 93, 112, 124, 126], "increment": [12, 51], "index": [0, 2, 5, 6, 10, 27, 29, 32, 36, 47, 49, 51, 58, 59, 61, 66, 72, 73, 75, 108, 126], "index_nam": [30, 64, 66], "index_valu": 29, "indic": [17, 29, 36, 54], "individu": 124, "industri": 51, "infer": [92, 97], "influenc": 54, "info": [51, 57], "inform": [27, 32, 33, 34, 36, 41, 42, 43, 45, 46, 49, 53, 54, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 80, 81, 84, 85, 86, 98, 102, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 127], "ingest": [0, 6, 27, 64, 66], "ingest_batch": [30, 64, 66], "ini": 57, "initi": [0, 15, 17, 26, 48, 50, 60, 69, 74, 98, 103, 126], "initial_corpu": 48, "initial_corpus_df": 50, "initial_qa": [48, 50], "initial_qa_df": 50, "initial_raw": 48, "initial_raw_df": 50, "inner": [65, 66, 68, 125], "input": [0, 6, 11, 12, 20, 23, 26, 27, 29, 30, 36, 38, 39, 52, 72, 73, 79, 100, 104, 105, 106, 108, 110, 114, 115, 120, 123], "input_list": 6, "input_metr": 27, "input_str": 23, "input_tensor": 23, "input_text": 23, "inquir": 49, "insert": [29, 36, 64, 65, 66, 68], "insid": [0, 57, 127], "inspect": 57, "inspir": [77, 83, 84, 85, 86, 87, 109], "instal": [51, 56, 60, 68, 69, 113, 127], "instanc": [2, 7, 8, 10, 17, 21, 27, 28, 29, 36, 46, 49, 50, 60, 67, 69, 72], "instead": [0, 49, 70, 127], "instruct": [21, 36, 57, 58, 59, 60, 61, 62, 69, 74, 78, 101, 103, 113], "int": [0, 2, 6, 7, 8, 14, 15, 17, 19, 20, 21, 23, 27, 29, 30, 36, 63, 64, 65, 66, 68], "integ": 51, "integr": [59, 61, 69, 96, 124], "intel": 97, "intellig": 51, "intend": 124, "interact": [15, 52], "interchang": 124, "interest": 123, "interfac": [15, 59, 60, 69], "intermedi": 23, "internet": [15, 117], "interv": 0, "introduc": [46, 53, 70, 122], "introductori": [45, 49], "invent": 49, "invokemodel": 0, "involv": [98, 116], "io": 68, "ip": [27, 30, 63, 65, 66, 68], "ir": [23, 89], "irrelev": 82, "is_async": 6, "is_best": 29, "is_dont_know": [8, 10], "is_exist": [0, 30, 64, 65, 66, 68], "is_fields_notnon": [0, 28], "is_passage_depend": [8, 10], "issu": [56, 71, 92, 123, 126, 127], "italian": 32, "item": [17, 29, 54, 86, 87], "iter": [0, 8], "iter_cont": 51, "iterrow": 125, "its": [6, 11, 15, 21, 25, 27, 28, 29, 36, 39, 50, 52, 63, 64, 101, 107, 112, 117, 120, 122, 123], "itself": [45, 60, 69, 114, 120], "ja": [10, 17, 32, 45, 47, 49, 57, 113], "japanes": 32, "java_hom": 57, "jdk": 57, "jean": [36, 49], "jeffrei": 56, "jina": [0, 18, 75, 93, 121], "jina_rerank": [75, 98], "jina_reranker_pur": [18, 23], "jinaai": 93, "jinaai_api_kei": [93, 121], "jinarerank": [18, 23], "job": 120, "jq_schema": 41, "json": [29, 40, 42, 51, 127], "json_schema": 0, "json_to_html_t": 40, "judgment": 53, "just": [8, 11, 15, 27, 36, 39, 45, 47, 50, 73, 113, 123, 127], "k": [17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 36, 69, 76, 98, 116, 118], "keep": [0, 29, 50, 73, 84, 86, 87, 118, 127], "kei": [0, 7, 15, 16, 17, 28, 29, 32, 33, 34, 36, 39, 41, 42, 60, 61, 62, 64, 66, 68, 69, 73, 88, 93, 95, 104, 117, 118, 126, 127], "key_column_nam": 29, "keyword": [0, 6, 7, 21, 53, 69, 72, 80, 81, 109, 110, 111], "kf1_polici": 123, "kim": 56, "kind": [36, 123, 126], "kiwi": [32, 113], "kiwi_result": 32, "kiwipiepi": 32, "kkma": 113, "know": [10, 36, 45, 46, 48, 50, 56, 58, 59, 61, 107, 118, 119, 120, 124, 127], "knowledg": [36, 45], "known": [39, 54, 64], "ko": [10, 17, 32, 45, 47, 49, 57, 75, 98], "ko-rerank": 94, "ko_rerank": 75, "konlpi": [33, 57, 113], "korea": [56, 57, 123], "korean": [2, 17, 32, 33, 69, 94, 121], "korerank": [0, 18, 94], "koreranker_run_model": [18, 23], "kosimcs": 69, "kwarg": [0, 6, 7, 8, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 72, 80, 81, 109, 110, 111], "l": [23, 92, 100], "l2": [27, 30, 63, 65, 66, 68, 125], "label": [54, 109], "lama_index": 39, "lambda": [0, 32, 47, 48, 50, 125], "lang": [9, 10, 11, 12, 17, 47, 48, 49, 50, 71], "langchain": [1, 2, 4, 6, 7, 32, 38, 39, 43, 110, 123], "langchain_chunk": [0, 1, 33], "langchain_chunk_pur": [1, 2], "langchain_commun": [39, 41], "langchain_docu": 5, "langchain_document_to_parquet": 39, "langchain_documents_to_parquet": [4, 5, 39, 70], "langchain_openai": 38, "langchain_pars": [0, 1, 41, 43, 44, 50], "langchain_parse_pur": [1, 7], "langchain_text_splitt": 39, "languag": [2, 6, 10, 11, 17, 32, 45, 47, 49, 53, 57, 71, 72, 79, 80, 81, 88, 97, 103, 113, 124], "laredo": 49, "larg": [23, 53, 67, 69, 71, 72, 79, 80, 81, 88, 91, 93, 95, 96, 97, 108, 124], "larger": [64, 65, 66, 68], "last": 43, "last_modified_datetim": [32, 36, 43, 84, 102], "lastli": [117, 118], "later": [54, 84, 127], "latest": [51, 74, 84, 102], "launch": [15, 52, 127], "lazyinit": [0, 31, 32, 69], "le": 0, "lead": [79, 121], "learn": [38, 51, 56, 85, 86, 97, 117, 118, 120, 123, 125, 127], "least": [6, 54, 86, 87, 120, 126], "legaci": [0, 1, 35, 38, 39, 70], "legal": 111, "len": 125, "length": [0, 21, 23, 27, 29, 54, 55, 71, 73, 83, 85, 100, 104, 107, 125], "lengthen": 106, "less": [39, 54, 76, 79], "let": [54, 55, 63, 120, 123, 127], "level": [17, 29, 53, 64, 76, 79, 98, 116, 124], "lexcial": 114, "lexic": [27, 114], "lexical_id": 27, "lexical_scor": 27, "lexical_summari": 27, "lexical_summary_df": 27, "lexical_theoretical_min_valu": [27, 114], "li": 101, "libmag": 57, "librari": [51, 57, 70, 74, 92, 127], "licens": 111, "life": 36, "light": 49, "like": [6, 17, 26, 27, 29, 32, 36, 43, 45, 48, 51, 54, 57, 67, 72, 73, 79, 80, 81, 103, 107, 113, 114, 115, 118, 120, 123, 125, 126, 127], "likelihood": 103, "limit": [23, 66, 73, 89, 90, 91, 92, 93, 97, 99, 100, 104, 123, 124, 126], "line": [0, 15, 19, 21, 22, 23, 25, 26, 27, 50, 51, 57, 71, 76, 79, 82, 98, 107, 112], "linear": 123, "lingua": [79, 121], "link": [8, 15, 52, 53, 58, 62, 67], "linked_corpu": [1, 8], "linked_raw": [1, 8], "linkedin": 56, "linux": 126, "list": [0, 1, 2, 5, 6, 7, 9, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 36, 38, 39, 42, 49, 51, 54, 64, 65, 66, 68, 69, 72, 80, 81, 90, 91, 92, 101, 111, 114, 118, 125], "list1": 27, "list2": 27, "lite": [92, 104], "liter": [15, 54], "literal_ev": 118, "littl": [26, 39, 46, 50, 123], "live": 63, "ll": [50, 51, 52, 54, 63, 68, 112, 121], "llama": [2, 5, 6, 10, 21, 32, 39, 43, 47, 49, 58, 59, 61, 72, 73, 75, 78, 92], "llama3": [47, 62, 126], "llama_cloud_api_kei": [7, 42], "llama_docu": 5, "llama_document_to_parquet": 39, "llama_documents_to_parquet": [4, 5], "llama_gen_queri": [1, 8, 48, 49, 50, 70], "llama_index": [1, 4, 34, 39, 45, 46, 47, 48, 49, 50, 60, 69, 71, 80, 81, 108, 126], "llama_index_chunk": [0, 1, 32, 34, 48, 50], "llama_index_chunk_pur": [1, 2], "llama_index_gen_gt": [1, 8, 45, 48, 50], "llama_index_generate_bas": [8, 9, 12], "llama_index_llm": [0, 17, 18, 25, 58, 59, 60, 61, 62, 69, 71, 72, 73, 74, 75, 99, 107, 109, 110, 111, 120, 123, 126], "llama_index_query_evolv": [1, 8, 46], "llama_pars": [1, 7, 42, 43, 44], "llama_parse_pur": [1, 7], "llama_text_node_to_parquet": [4, 5, 39], "llamaindex": [7, 39, 46, 47, 49, 60, 69, 72, 74, 77, 84, 85, 86, 99, 123], "llamaindexcompressor": [18, 21], "llamaindexllm": [18, 19], "llamapars": [0, 1, 42], "llm": [0, 6, 9, 10, 11, 12, 17, 18, 19, 21, 23, 35, 36, 39, 40, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 71, 74, 75, 79, 80, 81, 82, 92, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 123, 127], "llm evalu": 71, "llm infer": 74, "llm metric": [53, 122, 126], "llm_lingua": [21, 78], "llm_name": 21, "llmlingua": 78, "llmlingua_pur": [18, 21], "load": [0, 5, 15, 29, 36, 39, 57, 64, 65, 66, 68, 125], "load_all_vectordb_from_yaml": [0, 30], "load_bm25_corpu": [18, 27], "load_data": 39, "load_dotenv": 57, "load_summary_fil": [0, 29], "load_vectordb": [0, 30], "load_vectordb_from_yaml": [0, 30], "load_yaml": [1, 14], "load_yaml_config": [0, 29], "loader": [39, 41, 43], "local": [39, 51, 56, 59, 60, 63, 67, 69, 99, 117, 127], "local model": [60, 69], "local_model": 6, "localhost": [30, 63, 65, 68], "locat": [57, 66, 123], "log": [51, 57, 72, 125], "log2": 54, "log_cli": 57, "log_cli_level": 57, "logarithm": 54, "logarithmic": 54, "logic": [53, 125], "logprob": 73, "long": [65, 75, 79, 107, 119, 121, 123], "long context reord": 106, "long_context_reord": [0, 18, 75, 106], "longcontextreord": [18, 25], "longer": [6, 70], "longest": 17, "longllm": 121, "longllmlingua": [0, 18, 78], "look": [26, 27, 32, 36, 43, 48, 54, 55, 113, 114, 115, 118, 123], "loop": [29, 124, 126], "loss": 66, "lost in the middl": 106, "lot": [36, 47, 120, 127], "low": 10, "lower": [29, 47, 54, 67, 79, 83, 87, 126], "lowercas": [33, 34, 41], "m": [23, 57, 92, 100], "m3": 69, "mac": [57, 126], "machin": [51, 63], "made": [46, 47, 55, 123, 127], "magic": 123, "mai": [54, 64, 65, 66, 68, 124, 126], "main": [35, 59, 64, 65, 66, 68, 69, 121, 123], "major": [60, 69], "make": [0, 6, 8, 27, 29, 35, 36, 38, 49, 56, 57, 58, 59, 61, 62, 64, 72, 74, 79, 80, 81, 105, 106, 107, 108, 120, 123, 125, 127], "make_basic_gen_gt": [8, 11, 45, 48, 50], "make_batch": [0, 29], "make_combin": [0, 29], "make_concise_gen_gt": [8, 11, 45, 48, 50], "make_custom_gen_gt": [8, 11, 45], "make_gen_gt_llama_index": [8, 11], "make_gen_gt_openai": [8, 11], "make_generator_callable_param": [0, 18, 25], "make_generator_inst": [16, 17], "make_llm": [18, 21], "make_metadata_list": [1, 2], "make_node_lin": [0, 31], "make_qa_with_existing_qa": [4, 6, 39], "make_retrieval_callable_param": [18, 26], "make_retrieval_gt_cont": [1, 8, 48, 50], "make_single_content_qa": [4, 6, 39, 70], "make_trial_summary_md": [0, 31], "maker": [19, 25, 51, 62, 75, 105, 108, 120, 121, 123], "malayalam": 32, "malfunct": 127, "manag": [57, 63, 64, 65, 66, 68, 118], "mandatori": 125, "manhattan": 68, "mani": [46, 54, 72, 74, 80, 81, 111, 120], "manual": 127, "map": [0, 1, 8, 9, 10, 11, 12, 15, 17, 23, 32, 47, 48, 125], "marco": [23, 92, 100], "margin": 53, "markdown": [29, 42, 44], "marker": [56, 57, 123], "markov": 120, "master": 17, "match": [17, 36, 53, 125], "matter": 123, "max": [10, 27, 73, 114], "max_length": 100, "max_ngram_ord": 17, "max_retri": [0, 6], "max_token": [0, 60, 69, 72, 73, 74, 80, 81, 109, 110, 111, 112], "max_token_s": 19, "maximum": [0, 6, 17, 60, 69, 74, 100], "md": 39, "me": [105, 106, 107, 108, 120, 123], "mean": [0, 6, 10, 17, 21, 22, 23, 27, 29, 36, 39, 45, 46, 53, 55, 74, 82, 113, 114, 119, 120, 124, 126], "measur": [0, 53, 55, 107, 112, 116, 125], "measure_spe": [0, 31], "mechan": 124, "med": 96, "meet": 53, "meger": 123, "member": [36, 49], "memori": [63, 64, 65, 66, 68, 89, 90, 91, 92, 97, 100, 126], "mention": [51, 52], "merced": 111, "merg": [44, 81, 123, 124], "messag": [0, 9, 12, 23, 41, 46, 49], "messagerol": [46, 49], "messages_to_prompt": 0, "messagestoprompttyp": 0, "metad": 14, "metadata": [0, 2, 9, 10, 11, 12, 14, 15, 23, 32, 84, 102], "metadata_list": 2, "meteor": [16, 17, 62, 71, 107, 118, 122, 123, 125, 126], "method": [0, 2, 5, 6, 7, 15, 17, 27, 28, 32, 38, 43, 44, 45, 46, 47, 48, 49, 50, 53, 57, 64, 65, 66, 67, 68, 71, 107, 108, 112, 113, 114, 116, 118, 120, 122, 126], "metric": [0, 16, 19, 21, 25, 26, 27, 28, 36, 62, 63, 65, 66, 68, 70, 71, 76, 79, 82, 98, 107, 112, 116, 118, 119, 122, 123, 124, 125, 126], "metric_input": [16, 17, 19, 21, 25, 26, 27, 125], "metric_nam": [53, 71, 125], "metricinput": [0, 16, 17, 19, 21, 25, 26, 27, 31], "mexican": 49, "might": [17, 38, 57, 73, 120, 125, 126, 127], "milvu": [0, 31, 67], "milvus_db": 65, "milvus_token": [65, 67], "milvus_uri": [65, 67], "min": [27, 114], "mind": [118, 127], "mini": [10, 11, 42, 47, 49], "minilm": [23, 92, 100], "minimum": [27, 111, 114, 127], "mip": [67, 117], "miss": 126, "mistak": [47, 126, 127], "mistral": [59, 60, 69, 74, 113], "mistralai": [59, 60, 69, 74, 113], "mix": 124, "mixbread": 121, "mixedbread": [23, 98], "mixedbread rerank": 95, "mixedbreadai": [0, 18, 95], "mixedbreadai_rerank": 95, "mixedbreadai_rerank_pur": [18, 23], "mixedbreadairerank": [18, 23], "mjpost": 17, "mm": [27, 84, 114, 116], "mmarco": 96, "mobil": 64, "mock": [0, 60, 63, 69], "mockembed": 0, "mockembeddingrandom": [0, 31], "mockllm": [60, 69], "modal": 36, "mode": [0, 20, 76, 77], "model": [0, 6, 7, 9, 10, 11, 12, 15, 17, 23, 25, 27, 36, 39, 44, 47, 48, 49, 52, 53, 54, 56, 58, 59, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 106, 107, 109, 110, 111, 113, 117, 119, 120, 121, 123, 124, 125, 126, 127], "model_computed_field": [0, 8, 9, 10, 11, 12, 15, 18, 23, 31], "model_config": [0, 8, 9, 10, 11, 12, 15, 18, 23, 31], "model_field": [0, 8, 9, 10, 11, 12, 15, 18, 23, 31], "model_kwarg": [59, 69], "model_nam": [0, 9, 10, 11, 12, 21, 23, 29, 59, 69, 78, 89, 90, 91, 95, 96, 100], "model_post_init": [0, 31], "modelid": 0, "modeling_enc_t5": [18, 23], "modest": 54, "modifi": [36, 43, 58, 59, 61, 127], "modul": [31, 33, 34, 40, 41, 42, 50, 56, 58, 59, 61, 62, 67, 70, 75, 76, 82, 119, 121, 122, 123, 126, 127], "modular": [119, 124], "modular rag": 123, "module_dict": 28, "module_nam": [0, 8], "module_param": [0, 2, 7, 8, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "module_summary_df": 27, "module_typ": [0, 26, 28, 32, 33, 34, 40, 41, 42, 43, 44, 50, 58, 59, 60, 61, 62, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 126], "module_type_exist": [0, 28], "monot5": [0, 18, 57, 75, 98], "monot5_run_model": [18, 23], "more": [6, 12, 27, 29, 33, 34, 36, 38, 41, 42, 46, 48, 49, 50, 53, 54, 64, 65, 66, 67, 68, 70, 71, 74, 79, 94, 98, 99, 107, 108, 111, 112, 113, 118, 119, 122, 124, 127], "most": [6, 39, 50, 54, 60, 65, 69, 71, 98, 108, 113, 116, 117, 118, 120, 127], "mount": 57, "mpnet": [17, 69], "mrr": [17, 125], "msmarco": [23, 96], "mt5": 96, "much": [46, 47, 67, 123, 125, 126], "multi": [8, 12, 36, 49, 75, 111, 112], "multi query expans": 110, "multi_context": [6, 38], "multi_query_expans": [0, 18, 60, 69, 75, 110], "multilingu": [88, 113], "multimod": 7, "multipl": [8, 25, 26, 27, 29, 43, 50, 58, 65, 67, 110, 111, 114, 115, 118, 119, 120, 123, 124], "multiqueryexpans": [18, 26], "multiqueryretriev": 110, "multitask": 69, "must": [0, 5, 6, 8, 15, 20, 21, 22, 23, 25, 27, 29, 33, 34, 36, 39, 49, 50, 51, 54, 57, 60, 62, 64, 69, 74, 76, 84, 96, 102, 105, 106, 108, 111, 114, 118, 123, 124, 125, 126, 127], "mxbai": [23, 95], "mxbai_api_kei": [95, 121], "my_bucket": 64, "my_collect": 64, "my_scop": 64, "my_vector_collect": [65, 68], "my_vector_index": [64, 66], "n": [8, 17, 23, 32, 40, 48, 50, 53, 57, 62, 73, 102, 105, 106, 107, 108, 112, 123], "n_thread": 17, "naiv": [46, 121, 123], "name": [0, 7, 8, 9, 10, 11, 12, 15, 16, 17, 23, 26, 27, 29, 42, 49, 51, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 82, 85, 86, 98, 99, 107, 112, 113, 114, 115, 119, 125, 127], "namespac": [30, 66], "natur": [48, 53, 97], "naver": 40, "ndarrai": 29, "ndcg": 125, "necessari": [39, 57, 112], "need": [0, 2, 6, 32, 35, 36, 38, 39, 42, 44, 46, 50, 52, 54, 57, 58, 61, 62, 64, 65, 66, 67, 68, 79, 88, 93, 95, 104, 107, 111, 113, 117, 118, 119, 123, 125, 126, 127], "nemotron": 61, "nest": 29, "nest_asyncio": [51, 126, 127], "nested_list": 29, "never": 56, "new": [0, 8, 9, 35, 36, 46, 49, 50, 52, 57, 60, 64, 65, 66, 68, 69, 74, 118, 122, 123, 126, 127], "new_corpu": 8, "new_corpus_df": 50, "new_gen_gt": 11, "new_qa": 50, "newjeans1": 36, "newjeans2": 36, "newlin": 17, "next": [55, 75, 76, 88, 93, 95, 104, 107, 123], "next_id": 36, "ngrok": 15, "nim": 60, "nim_config": 61, "nlg": 53, "nltk": 57, "node": [0, 5, 15, 31, 36, 39, 55, 58, 59, 60, 61, 62, 69, 70, 72, 75, 109, 110, 111, 114, 121, 122], "node_dict": 28, "node_dir": [0, 27], "node_lin": [31, 62, 70, 76, 79, 82, 98, 107, 112, 118, 119, 122, 123], "node_line_1": [58, 59, 60, 61, 69, 118, 123], "node_line_2": [118, 123], "node_line_3": 118, "node_line_dict": 0, "node_line_dir": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "node_line_nam": [58, 59, 60, 61, 62, 69, 70, 71, 76, 79, 82, 98, 107, 112, 116, 118, 119, 122, 123], "node_nam": 0, "node_param": [0, 28], "node_pars": [34, 39], "node_summary_df": 0, "node_typ": [0, 15, 28, 58, 59, 60, 61, 62, 69, 70, 71, 76, 79, 82, 98, 107, 112, 116, 118, 122, 123, 126], "node_view": [0, 31], "nodepars": 2, "nodewithscor": 23, "non": 44, "none": [0, 2, 5, 6, 7, 8, 15, 17, 18, 23, 28, 29, 30, 51, 63, 65, 67, 71, 79, 107], "nonetyp": [0, 15], "normal": [27, 91, 114], "normalize_dbsf": [18, 27], "normalize_mean": 122, "normalize_method": [27, 114, 116], "normalize_mm": [18, 27], "normalize_str": [0, 29], "normalize_tmm": [18, 27], "normalize_unicod": [0, 29], "normalize_z": [18, 27], "norwegian": 32, "nosql": 64, "notabl": 106, "note": [64, 65, 66, 68, 76], "notion": 75, "nousresearch": [21, 78], "now": [36, 38, 39, 48, 50, 62, 74, 117, 118, 120, 122, 123, 125, 126, 127], "np": 29, "ntabl": 40, "nuevo": 49, "nullabl": 51, "num_passag": [20, 77], "num_quest": [6, 39], "num_work": 0, "number": [0, 6, 23, 27, 29, 39, 43, 51, 54, 55, 60, 64, 65, 66, 68, 69, 74, 76, 77, 79, 82, 111, 112, 119, 124, 127], "numer": 56, "nvidia": 60, "o": 57, "object": [0, 8, 9, 10, 11, 12, 15, 17, 23, 28, 29, 30, 39, 51, 72, 80, 81, 84, 102, 109, 110, 111], "observ": [52, 106], "obtain": 98, "occur": [36, 73, 118, 123, 126], "ocr": [40, 44], "offer": 114, "offici": [17, 29], "often": [39, 49, 113, 126], "ok": 51, "okai": [36, 46], "okt": 113, "ollama": [47, 60, 69], "ollama_config": 62, "onc": [36, 46, 50, 62, 72, 74, 80, 81, 88, 93, 114, 119, 123, 127], "one": [0, 2, 6, 8, 12, 21, 22, 23, 25, 29, 32, 36, 39, 48, 49, 50, 54, 67, 84, 86, 87, 107, 118, 119, 120, 124, 126], "one_hop_quest": [8, 12], "ones": 49, "onli": [6, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 36, 42, 43, 45, 48, 49, 50, 51, 55, 57, 62, 65, 67, 68, 72, 80, 81, 84, 107, 108, 119, 120, 121, 123, 125, 127], "oom": [99, 126], "open": [66, 68, 97, 117, 120, 126], "openai": [6, 7, 9, 10, 11, 12, 17, 20, 25, 26, 39, 42, 46, 47, 48, 49, 50, 60, 63, 67, 69, 71, 72, 76, 79, 80, 81, 85, 86, 99, 107, 109, 110, 111, 112, 116, 120, 123], "openai_api_kei": [42, 57, 73, 126], "openai_chroma": 117, "openai_embed_3_larg": [6, 39, 64, 65, 66, 67, 68, 69, 70], "openai_embed_3_smal": [67, 69, 70, 125], "openai_gen_gt": [1, 8, 45], "openai_gen_queri": [1, 8, 49], "openai_llm": [0, 17, 18, 75, 107], "openai_milvu": 117, "openai_query_evolv": [1, 8, 46], "openai_truncate_by_token": [0, 29], "openaiembed": [27, 38], "openailik": [59, 60, 61, 69, 126], "openaillm": [18, 19], "openapi": 51, "openvino": [0, 18, 98], "openvino rerank": 97, "openvino_rerank": 97, "openvino_run_model": [18, 23], "openvinorerank": [18, 23, 97], "oper": [36, 63, 65, 79, 116, 124], "oppos": 76, "opt": [70, 74], "optim": [0, 15, 32, 35, 36, 38, 43, 47, 48, 50, 56, 58, 59, 61, 62, 73, 74, 79, 85, 86, 97, 113, 114, 115, 118, 119, 122, 123, 124, 125], "optimize_hybrid": [18, 27], "option": [0, 5, 6, 17, 32, 43, 51, 52, 57, 62, 63, 65, 66, 68, 71, 76, 78, 79, 82, 94, 95, 96, 98, 101, 103, 107, 112, 114, 115, 118, 120, 122, 124, 125, 127], "order": [15, 17, 53, 54], "org": 56, "organ": [66, 119, 121], "orient": 53, "origin": [0, 9, 27, 29, 36, 46, 84, 103, 125], "original_queri": 46, "original_str": 32, "original_text": 14, "other": [15, 17, 27, 29, 35, 36, 45, 46, 49, 53, 54, 57, 72, 79, 80, 81, 82, 97, 99, 109, 110, 111, 114, 118, 119, 120, 123, 125, 127], "otherwis": [43, 64], "our": [27, 32, 36, 39, 40, 43, 56, 57, 75, 83, 87, 109, 110, 111, 120, 123, 126, 127], "out": [36, 50, 54, 56, 57, 62, 65, 69, 71, 74, 82, 83, 84, 85, 86, 87, 118, 119, 123, 126, 127], "outcom": [107, 112], "outlin": 67, "outperform": 53, "output": [0, 6, 9, 11, 15, 38, 49, 53, 60, 69, 71, 78, 103, 107, 112, 126], "output_cl": 19, "output_filepath": [5, 6, 39], "output_pars": 0, "output_path": [15, 127], "over": [63, 74, 124], "overal": [53, 98, 120], "overfit": 127, "overlap": 55, "overrid": 17, "overview": [63, 64, 65, 66, 68], "overwrit": [5, 6], "own": [6, 7, 36, 37, 40, 42, 46, 50, 56, 63, 82, 109, 110, 111, 120, 124, 125, 127], "owner": 92, "p": 68, "p4dyxfmsa": [56, 123], "packag": [31, 57, 60, 69, 70, 126], "page": [7, 32, 36, 40, 43, 44, 48, 51, 57, 75, 99], "paid": 44, "pair": [6, 29, 35, 39, 53], "panda": [0, 28, 29, 38, 39, 50, 125], "paper": [17, 49, 53, 103, 109, 111, 123], "paradigm": [53, 123], "parallel": [74, 92], "param": [0, 2, 10, 17, 25, 26, 70, 74, 119], "param_list": [18, 21], "paramet": [0, 5, 6, 7, 8, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 39, 42, 46, 52, 53, 62, 67, 118, 119, 120, 124, 125, 126, 127], "parent": 15, "parquet": [0, 5, 6, 8, 32, 36, 38, 39, 43, 48, 50, 57, 58, 59, 61, 62, 67, 119, 125, 126, 127], "pars": [0, 1, 2, 8, 32, 33, 34, 35, 36, 40, 118], "parse_all_fil": [1, 7], "parse_config": [32, 43, 50], "parse_inst": 7, "parse_method": [7, 33, 41, 43, 44, 50], "parse_modul": 41, "parse_output": [4, 6], "parse_project_dir": 50, "parsed_data_path": [0, 32, 50], "parsed_result": 2, "parser": [31, 50], "parser_nod": [1, 7], "part": [35, 54, 64, 121, 124], "particularli": 67, "pass": [0, 6, 25, 38, 72, 75, 80, 81, 109, 110, 111, 123], "pass_compressor": [0, 18, 75], "pass_passage_augment": [0, 18, 75], "pass_passage_filt": [0, 18, 75], "pass_query_expans": [0, 18, 75], "pass_rerank": [0, 18, 75], "pass_valu": 123, "passag": [0, 8, 10, 12, 15, 20, 21, 22, 23, 27, 32, 36, 46, 51, 54, 55, 57, 62, 75, 77, 79, 88, 89, 90, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 109, 113, 114, 115, 117, 121, 123, 125, 126, 127], "passage augment": [76, 77], "passage compressor": [79, 80, 81], "passage compressor metr": 55, "passage filt": [82, 83, 84, 85, 86, 87], "passage_augment": 76, "passage_depend": [1, 8, 47], "passage_dependency_filter_llama_index": [8, 10, 47], "passage_dependency_filter_openai": [8, 10, 47], "passage_filt": 82, "passage_id": 27, "passage_index": [0, 15, 51], "passage_rerank": 123, "passage_str": 6, "passageaugment": [0, 18], "passagecompressor": [0, 18], "passagefilt": [0, 18], "passagererank": [0, 18], "passcompressor": [18, 21], "passpassageaugment": [18, 20], "passpassagefilt": [18, 22], "passqueryexpans": [18, 26], "passrerank": [18, 23], "password": [30, 64, 65], "path": [0, 2, 6, 7, 8, 14, 15, 22, 23, 25, 26, 27, 28, 29, 30, 32, 38, 39, 43, 50, 51, 57, 58, 59, 61, 62, 63, 67, 70, 92, 97, 113, 126, 127], "pattern": 43, "payload": 51, "pd": [0, 5, 6, 23, 28, 29, 38, 39, 50, 125], "pdf": 43, "pdfminer": [41, 43, 50], "pdfplumber": [41, 43, 44], "penalti": 17, "peopl": 46, "per": [39, 43, 55, 66, 86, 87, 122, 126], "percentag": 54, "percentil": [75, 82], "percentile cutoff": 83, "percentile_cutoff": [0, 18, 83], "percentilecutoff": [18, 22], "perfect": [47, 123], "perform": [8, 17, 26, 32, 36, 43, 44, 47, 49, 50, 52, 54, 55, 56, 64, 65, 66, 68, 71, 73, 76, 79, 82, 97, 98, 106, 107, 112, 120, 123, 125], "persist": [30, 63, 67, 69, 70], "persistentcli": 39, "perspect": 110, "pertin": 98, "phase": [67, 98, 112], "phrase": [11, 45, 49], "piec": 26, "pinecon": [0, 31, 67], "pinecone_api_kei": 66, "pinecone_db": 66, "pip": [51, 56, 57, 61, 113, 126], "pipelin": [0, 15, 35, 48, 50, 51, 52, 56, 57, 92, 114, 119, 120, 123, 125], "pipeline_dict": 127, "pkl": 119, "place": 49, "placehold": [6, 39], "plan": [36, 42, 71, 123], "pleas": [0, 6, 17, 23, 27, 36, 50, 54, 57, 58, 60, 61, 67, 69, 71, 74, 75, 78, 103, 107, 112, 113, 118, 123, 124, 126, 127], "plu": [6, 27, 36, 38, 57, 60, 69, 74, 84, 85, 86, 102, 107, 111, 113, 117, 118], "plz": 58, "point": [57, 62], "polish": 32, "pop": [29, 36], "pop_param": [0, 29], "poppler": 57, "popular": [53, 113], "port": [0, 15, 30, 51, 63, 68, 127], "porter": 17, "porter_stemm": [27, 70], "portugues": 32, "posit": [54, 106], "possibl": [120, 123, 126], "post": 123, "post_retrieve_node_lin": [62, 71, 107], "potenti": [17, 79], "power": [47, 88, 93, 104, 123], "ppv": 54, "pre": [45, 46, 47, 57, 123, 127], "pre_retrieve_node_lin": 112, "precis": [17, 53, 79, 109, 116], "pred": [17, 54], "predefin": [71, 79, 98], "predict": [17, 54], "prefix": 103, "prefix_prompt": [23, 103], "prepar": [62, 64], "preprocess": [0, 31], "preprocess_text": [0, 29], "present": [53, 57], "pretti": 123, "prev": [75, 76], "prev next augment": 77, "prev_id": 36, "prev_next_augment": [0, 18, 36, 75, 76, 77], "prev_next_augmenter_pur": [18, 20], "prevent": [2, 11, 32, 66, 73, 99, 123], "preview": 17, "previou": [0, 19, 20, 21, 22, 23, 25, 26, 27, 53, 70, 87, 120, 123], "previous_result": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "prevnextpassageaugment": [18, 20], "primari": [76, 82, 98, 101], "primarili": 44, "primit": 39, "print": [0, 23, 51], "prior": [39, 79], "priorit": 98, "privat": 0, "pro": 42, "prob": 72, "probabl": [73, 74, 120, 125], "problem": [0, 39, 50, 53, 123, 126], "process": [6, 17, 23, 29, 35, 39, 50, 51, 52, 56, 63, 64, 65, 66, 68, 71, 74, 79, 97, 98, 101, 107, 110, 112, 116, 119, 120, 124, 125, 126, 127], "process_batch": [0, 29], "processed_data": [5, 6], "prod": 57, "produc": 53, "product": [57, 65, 66, 67, 68, 125, 127], "profil": 0, "profile_nam": [0, 58], "programmat": 0, "progress": 0, "project": [15, 51, 56, 57, 62, 67, 126], "project_dir": [0, 2, 7, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 43, 50, 51, 52, 57, 58, 59, 61, 62, 63, 67, 70, 126, 127], "project_directori": [67, 126, 127], "prompt": [0, 1, 6, 8, 17, 19, 21, 23, 25, 28, 45, 46, 49, 51, 62, 72, 74, 75, 99, 103, 105, 106, 108, 109, 110, 120, 121, 123, 125], "prompt1": [6, 39], "prompt2": [6, 39], "prompt3": 39, "prompt_mak": [62, 107, 120, 123], "promptmak": [0, 18], "prompts_ratio": [6, 39], "promt": 46, "proper": [6, 73], "properli": [29, 57, 67, 113], "properti": [0, 8, 68], "propos": 123, "protect": 66, "protected_namespac": 0, "provid": [39, 40, 42, 45, 49, 51, 52, 53, 63, 65, 66, 67, 72, 80, 81, 96, 103, 127], "pseudo": 73, "pt": 96, "ptt5": 96, "public": 15, "publicli": 15, "pull": 62, "punctuat": 29, "punkt_tab": 57, "punktsentencetoken": 32, "pure": [0, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], "purpos": [64, 65, 66, 68, 76, 82, 98, 112, 124], "push": 126, "put": [36, 39, 42, 78, 121, 126], "pwd": 57, "py": [17, 51], "pyarrow": 125, "pydant": [0, 9, 10, 11, 12, 15, 23], "pydantic_model_": 0, "pydantic_program_mod": 0, "pydanticprogrammod": 0, "pymupdf": 41, "pyopenssl": 57, "pypdf": 41, "pypdfdirectori": 41, "pypdfdirectoryload": 41, "pypdfium2": 41, "pypi": 56, "pytest": 57, "python": [0, 29, 33, 36, 39, 57, 92, 105, 118, 126], "python3": 57, "pythoncodetextsplitt": 33, "pytorch": 57, "q": 39, "qa": [0, 1, 6, 25, 26, 27, 32, 35, 45, 46, 47, 49, 57, 58, 59, 61, 62, 67, 70, 119, 125, 126, 127], "qa_cnt": 0, "qa_creation_func": [6, 39], "qa_data": [27, 28], "qa_data_path": [0, 57, 58, 59, 61, 62, 67, 126, 127], "qa_dataset": 6, "qa_df": [8, 29, 38, 39, 45, 47, 49, 125], "qa_save_path": 8, "qa_test": 127, "qa_valid": 57, "qacreat": [1, 4, 38, 39, 70], "qid": [8, 49], "qualiti": [53, 98, 127], "quantit": 124, "quantiz": 126, "queri": [0, 1, 6, 8, 9, 15, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 41, 45, 50, 51, 52, 62, 63, 65, 66, 68, 70, 75, 76, 79, 80, 82, 85, 86, 87, 94, 95, 96, 98, 99, 101, 104, 105, 106, 107, 108, 109, 116, 117, 120, 121, 123, 125], "query decompos": 111, "query expans": [109, 110, 111, 112], "query_bundl": 23, "query_decompos": [0, 18, 60, 69, 75, 111, 112], "query_embed": [23, 27], "query_evolve_openai_bas": [8, 9], "query_expans": [15, 26, 107, 112, 120], "query_gen_openai_bas": [8, 12], "query_wrapper_prompt": 0, "querybundl": 23, "querydecompos": [18, 26], "queryexpans": [0, 18], "queryrequest": [0, 15], "question": [6, 8, 10, 12, 23, 26, 35, 36, 39, 45, 46, 53, 56, 62, 78, 101, 103, 105, 106, 107, 108, 111, 123, 127], "question_num": 6, "question_num_per_cont": [6, 39], "quick": 67, "quickli": 79, "quit": [53, 71], "r": 57, "rag": [0, 6, 10, 15, 32, 35, 36, 38, 39, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126], "rag api": 51, "rag dataset": [36, 38, 39], "rag deploi": [51, 52], "rag evalu": [36, 38, 39, 53, 54, 55, 71, 122, 126], "rag llm": [60, 69], "rag metr": [53, 54, 55, 122, 126], "rag model": [60, 69], "rag optim": [56, 118, 120, 121, 124], "rag perform": 120, "rag structur": 124, "rag tutori": 127, "rag web": 52, "raga": [1, 4, 37, 46, 54], "rais": 17, "raise_except": 6, "raise_for_statu": 51, "ran": 119, "random": [0, 6, 31, 60, 69, 74], "random_single_hop": [1, 8, 48, 50, 70], "random_st": [0, 6, 8], "randomli": [6, 39, 48], "rang": [48, 114, 115], "range_single_hop": [1, 8, 48], "rank": [17, 27, 92, 113, 115, 125], "rank_zephyr_7b_v1_ful": 92, "rankgpt": [0, 18, 75, 98], "rankgpt_rerank_prompt": [18, 23, 99], "rankgptrerank": 23, "rate": [54, 126], "ratio": [6, 39], "ratio_dict": 39, "raw": [1, 8, 35, 36, 40, 41, 42, 43, 44, 48, 50, 56, 70], "raw_df": [0, 8, 50], "raw_end_idx": 8, "raw_id": 8, "raw_inst": 50, "raw_start_idx": 8, "re": [65, 68, 85, 86, 92, 123, 125, 126], "read": [0, 56, 62, 64, 105, 106, 107, 108, 118, 123], "read_parquet": [38, 39, 50, 125], "readi": [39, 57, 58, 59, 61, 62, 120, 127], "real": [36, 39, 52, 73, 123], "realist": 46, "realli": [27, 36, 46, 74, 120, 123], "reason": [6, 38, 126], "reasoning_evolve_raga": [8, 9, 46], "reassess": 98, "recal": [17, 53, 79, 116], "receiv": [29, 52], "recenc": [0, 18, 75, 82], "recency_filt": [75, 84], "recencyfilt": [18, 22], "reciproc": [17, 27, 115, 122], "recogn": 126, "recognit": 97, "recommend": [17, 25, 46, 49, 50, 57, 59, 67, 69, 73, 107, 113, 119, 121, 123, 126, 127], "reconstruct": 29, "reconstruct_list": [0, 29], "record": 119, "recurs": [29, 81], "recursivecharact": 33, "recursivecharactertextsplitt": 39, "reduc": [54, 79], "reduct": 79, "refer": [6, 50, 53, 54, 60, 62, 67, 69, 70, 71, 75, 107, 112, 124, 127], "refin": [0, 18, 60, 69, 75, 79, 98], "reflect": 113, "region": [0, 30, 66], "region_nam": 0, "regist": 61, "rel": 17, "relat": [36, 53, 54, 72, 80, 81, 82, 103, 109, 110, 111], "relationship": 14, "releas": [37, 49], "relev": [17, 23, 36, 39, 49, 51, 54, 71, 79, 95, 96, 98, 99, 109, 112, 116], "remain": [50, 124], "remap": 50, "remeb": 39, "rememb": [54, 57, 120], "remind": 127, "remot": [15, 63, 67], "remov": [27, 28, 29, 39, 47], "reorder": [75, 98, 107], "repeat": 6, "replac": [0, 8, 9, 10, 11, 12, 15, 21, 23, 29, 46, 51, 52, 58, 64, 75, 107], "replace_valu": 29, "replace_value_in_dict": [0, 29], "repo": [36, 56, 58, 61, 113, 127], "repositori": [57, 62], "repres": [70, 117, 120], "request": [0, 123], "request_timeout": 126, "requir": [0, 6, 9, 10, 11, 12, 15, 17, 23, 42, 43, 49, 51, 53, 57, 60, 63, 64, 65, 66, 67, 68, 69, 72, 79, 80, 81, 95, 96, 109, 110, 111, 114, 115, 121, 124, 125], "rerank": [21, 22, 23, 36, 57, 75, 79, 84, 88, 93, 96, 98, 99, 101, 103, 104, 121, 123], "reranker_recal": 123, "reset": [36, 47, 126], "reset_index": [47, 48, 50, 126], "resid": 124, "resolv": 126, "resourc": [63, 67, 70, 120], "respect": [55, 67], "respond": [45, 112], "respons": [0, 8, 9, 10, 11, 12, 45, 46, 52, 60, 65, 69, 79, 80, 112], "rest": [50, 99], "restart_evalu": 127, "restart_tri": [0, 31, 127], "result": [0, 2, 6, 8, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 39, 42, 44, 47, 49, 50, 51, 53, 54, 55, 56, 62, 73, 76, 87, 98, 107, 112, 114, 116, 119, 122, 123, 125, 126], "result_column": [0, 15, 51], "result_df": [19, 21, 25, 27], "result_en_qa": 47, "result_qa": [45, 49], "result_to_datafram": [0, 29], "result_typ": [42, 44], "retreived_cont": [105, 106, 108], "retri": [0, 6, 120], "retriev": [0, 2, 6, 10, 15, 18, 21, 22, 23, 26, 31, 32, 36, 45, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 81, 88, 92, 93, 98, 103, 104, 107, 108, 109, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124], "retrieval metr": 54, "retrieval_cont": [0, 31], "retrieval_context": 17, "retrieval_f1": [16, 17, 22, 23, 26, 62, 70, 76, 82, 98, 112, 116, 125], "retrieval_func": 26, "retrieval_gt": [0, 8, 12, 28, 32, 39, 49, 50, 67, 125], "retrieval_gt_cont": [0, 8, 28, 125], "retrieval_map": [16, 17, 125], "retrieval_modul": [26, 112], "retrieval_mrr": [16, 17, 125], "retrieval_ndcg": [16, 17, 125], "retrieval_param": 26, "retrieval_precis": [16, 17, 22, 23, 62, 76, 82, 98, 112, 116, 122, 125], "retrieval_recal": [16, 17, 22, 23, 26, 62, 70, 76, 82, 98, 112, 116, 122, 123, 125], "retrieval_result": 54, "retrieval_result_df": 125, "retrieval_token_f1": [16, 17, 79], "retrieval_token_precis": [16, 17, 79], "retrieval_token_recal": [16, 17, 79], "retrievalrespons": [0, 15], "retrieve metr": 54, "retrieve_node_lin": [62, 70, 76, 79, 82, 98, 116], "retrieve_scor": [20, 21, 22, 23, 27, 125], "retrieved_cont": [0, 20, 21, 22, 23, 27, 28, 62, 105, 106, 107, 108, 123, 125], "retrieved_id": [0, 20, 21, 22, 23, 27, 28, 125], "retrieved_passag": [0, 15, 51], "retrievedpassag": [0, 15], "return": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 44, 46, 50, 51, 64, 65, 66, 68, 72, 73, 82, 84, 111, 117, 118, 125], "return_index": 0, "revers": [20, 29, 83, 87], "rich": 0, "right": [10, 39, 60, 61, 69, 123, 127], "rl_polici": 123, "rm": 57, "roadmap": [56, 119], "roberta": 69, "robust": 49, "role": [46, 49], "root": 57, "roug": [16, 17, 62, 71, 107, 118, 122, 123, 125, 126], "rouge1": 17, "rouge2": 17, "rouge_typ": 17, "rougel": 17, "rougelsum": 17, "row": [9, 10, 11, 12, 27, 28, 29, 36, 46, 119, 125], "rpm": 93, "rr": [17, 54], "rrf": [27, 114, 116, 118], "rrf_calcul": [18, 27], "rrf_k": [27, 62, 112, 115, 118], "rrf_pure": [18, 27], "rubert": 69, "rude": 46, "run": [0, 1, 8, 15, 18, 28, 31, 48, 56, 60, 68, 69, 79, 83, 84, 85, 86, 87, 118, 119, 120, 121], "run_api": [51, 127], "run_api_serv": [0, 15, 51, 127], "run_chunk": [1, 2], "run_config": 6, "run_evalu": [0, 18, 27, 28], "run_generator_nod": [18, 19], "run_nod": [0, 28, 70], "run_node_lin": [0, 31], "run_pars": [1, 7], "run_passage_augmenter_nod": [18, 20], "run_passage_compressor_nod": [18, 21], "run_passage_filter_nod": [18, 22], "run_passage_reranker_nod": [18, 23], "run_prompt_maker_nod": [18, 25], "run_queri": 51, "run_query_embedding_batch": [18, 27], "run_query_expansion_nod": [18, 26], "run_retrieval_nod": [18, 27], "run_web": [0, 15, 52, 127], "runner": [0, 15, 51, 127], "runrespons": [0, 15], "runtim": 97, "russian": 32, "sacrebleu": 17, "safe": 29, "said": 53, "same": [0, 26, 27, 29, 45, 46, 49, 52, 54, 58, 76, 99, 111, 119, 120, 124, 127], "sampl": [0, 1, 6, 32, 39, 43, 49, 50, 54, 70, 74, 126, 127], "sample yaml fil": 121, "sample_config": [57, 58, 61, 127], "samplingparam": 74, "satisfactori": [39, 50], "satisfi": [23, 104], "save": [5, 6, 8, 10, 15, 19, 32, 36, 40, 42, 43, 118, 127], "save_parquet_saf": [0, 29], "save_path": 8, "scalabl": [39, 64], "scale": [27, 79, 114, 122], "schema": [0, 1, 17, 27, 31, 35, 41, 45, 47, 49, 50, 51, 68, 70, 125], "scope_nam": 64, "scoped_index": 64, "score": [0, 10, 15, 17, 23, 27, 29, 51, 55, 64, 66, 79, 83, 86, 87, 113, 114, 115, 116], "script": [29, 36], "search": [29, 51, 64, 65, 66, 68, 92, 112, 113, 117], "search_str": 14, "second": [0, 49, 55, 65, 66, 67, 119, 123], "secret": [0, 118], "section": [32, 43, 48, 117, 118, 122, 124, 127], "secur": 126, "see": [32, 35, 42, 43, 51, 54, 55, 58, 60, 61, 64, 65, 66, 68, 69, 104, 118, 119, 120, 123, 125, 126], "seed": 6, "seek": [49, 53], "segment": 53, "select": [0, 6, 8, 19, 21, 22, 23, 25, 26, 27, 39, 47, 49, 61, 113, 119, 120, 122, 123, 124], "select_best": [0, 31], "select_best_averag": [0, 31], "select_best_rr": [0, 31], "select_bm25_token": [18, 27], "select_normalize_mean": [0, 31], "select_top_k": [0, 29], "self": [29, 64, 111], "sem": 17, "sem_scor": [16, 17, 107, 118, 125], "semant": [27, 53, 71, 113, 114, 125], "semantic_id": 27, "semantic_llama_index": [32, 34], "semantic_scor": 27, "semantic_summari": 27, "semantic_summary_df": 27, "semantic_theoretical_min_valu": [27, 114], "semanticdoubl": 32, "semanticdoublemerg": 34, "semitechnologi": 68, "semscor": 53, "send": [0, 88, 93], "sensit": 54, "sent": 51, "sentenc": [17, 23, 45, 47, 49, 53, 69, 75, 85, 86, 98, 108, 113], "sentence transform": 100, "sentence_splitt": 32, "sentence_splitter_modul": 32, "sentence_transform": [0, 18], "sentence_transformer_rerank": [75, 100], "sentence_transformer_run_model": [18, 23], "sentencetransformerrerank": [18, 23], "sentencetransformerstoken": 33, "sentencewindow": [32, 34], "separ": [121, 126], "sequenc": [0, 23, 124], "seri": 29, "serializeasani": 23, "seriou": [126, 127], "serv": [62, 71, 79, 98, 103, 107, 112, 116, 124], "server": [15, 29, 56, 63, 64, 65, 66, 68, 73, 117], "server_nam": [15, 52], "server_port": [15, 52], "servic": [51, 63, 64, 66, 68], "session": [0, 23, 51], "set": [0, 2, 6, 7, 8, 10, 15, 25, 27, 29, 39, 40, 41, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 95, 98, 99, 103, 104, 107, 109, 110, 111, 112, 114, 118, 119, 120, 123, 124, 126], "set_initial_st": [0, 31], "set_page_config": [0, 31], "set_page_head": [0, 31], "setup": [62, 67, 120], "sever": [53, 57, 73, 125, 126, 127], "shape": [17, 29], "share": [15, 52, 127], "shareabl": 15, "shell": 57, "short": [45, 63, 123], "shot": [103, 109, 111], "should": [0, 6, 7, 9, 10, 11, 12, 15, 17, 23, 32, 41, 45, 49, 50, 53, 60, 64, 65, 66, 68, 69, 73, 84, 125, 126], "show": [49, 119, 120, 123], "shown": 67, "side": 73, "sigma": [27, 114], "signal": 103, "significantli": [79, 112, 124], "similar": [17, 27, 53, 63, 64, 65, 66, 68, 71, 75, 76, 82, 83, 87, 113, 114, 115, 117, 120, 125], "similarity percentile cutoff": 85, "similarity_metr": [27, 30, 63, 65, 66, 68], "similarity_percentile_cutoff": [0, 18, 75, 85], "similarity_threshold_cutoff": [0, 18, 75, 82, 86], "similaritypercentilecutoff": [18, 22], "similaritythresholdcutoff": [18, 22], "simpl": [1, 4, 11, 38, 47, 53, 57, 62, 67, 71, 113, 123], "simple_openai": 57, "simpledirectoryread": 39, "simpler": 46, "simpli": [60, 69, 102, 127], "simul": 124, "sinc": [17, 37, 39, 47, 50, 52, 54, 71, 73, 99, 105, 107, 108], "singl": [0, 6, 7, 8, 15, 29, 36, 39, 45, 48, 56, 63, 64, 65, 66, 68, 111, 118, 119, 123, 124], "single_token_f1": [16, 17], "site": 63, "situat": 114, "six": 55, "size": [0, 2, 6, 7, 17, 73, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 114, 126], "sk": 57, "skip": [0, 21, 22, 23, 25, 107], "skip_valid": [0, 126], "slice_tensor": [18, 23], "slice_tokenizer_result": [18, 23], "slovenian": 32, "slow": 74, "slower": [47, 79], "small": [6, 69], "smaller": [54, 67], "smooth": 17, "smooth_method": 17, "smooth_valu": 17, "so": [0, 11, 15, 21, 27, 32, 36, 39, 40, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 60, 69, 74, 76, 79, 82, 83, 84, 85, 86, 87, 98, 107, 111, 112, 115, 118, 119, 120, 123, 126, 127], "softwar": 117, "solut": [39, 50, 123], "some": [14, 27, 36, 46, 47, 48, 49, 53, 55, 57, 69, 73, 88, 93, 114, 120, 126], "someon": [10, 111], "someth": [39, 105, 106, 107, 108], "sometim": [46, 47, 73, 126], "sonnet": [42, 58], "soon": 123, "sort": [29, 102], "sort_by_scor": [0, 18, 20, 29], "sota": 92, "sound": 54, "sourc": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 36, 66, 68, 97, 114, 115, 117], "spanish": 32, "spars": [27, 113], "spearman": 53, "special": [29, 79], "specif": [17, 29, 43, 45, 46, 49, 51, 67, 71, 79, 95, 96, 101, 113, 124, 127], "specifi": [7, 36, 51, 57, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81, 94, 96, 101, 102, 107, 112, 114, 115, 120, 122, 124, 125], "speech": 97, "speed": [0, 71, 74, 79, 98, 107, 112, 116, 118, 124], "speed_threshold": [71, 76, 79, 82, 98, 107, 112, 116, 118, 122, 124], "spice": 111, "split": [17, 32, 44, 119, 124, 127], "split_by_sentence_kiwi": [0, 1, 32], "split_datafram": [0, 29], "split_docu": 39, "split_into_s": 32, "split_summari": 17, "splitter": [33, 34], "squad": 29, "squar": 111, "src": 57, "ss": 84, "sse": 29, "ssl": [30, 63], "stabl": 49, "stage": [57, 103], "standalon": 74, "standard": [0, 53], "start": [0, 15, 29, 36, 37, 51, 57, 106, 125, 126, 127], "start_chunk": [0, 31, 32, 50], "start_end_idx": 32, "start_idx": [0, 2, 15, 51], "start_pars": [0, 31, 43, 50], "start_trial": [0, 31, 67, 126, 127], "starter": [56, 127], "state": [6, 49, 120], "static": [17, 20], "statist": 54, "statu": 51, "status_cod": 51, "stem": [53, 113], "stemmer": [17, 113], "step": [0, 8, 23, 32, 43, 44, 48, 57, 63, 98, 123, 125], "still": [120, 123, 126], "stop": 17, "storag": [40, 63], "store": [8, 27, 32, 51, 62, 63, 64, 65, 66, 67, 68, 117], "str": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 39, 44, 45, 63, 64, 65, 66, 68], "straight": 123, "strateg": 124, "strategi": [15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 36, 62, 70, 76, 82, 118, 123, 126], "strategy_dict": [25, 26], "strategy_nam": [0, 25, 26], "strategyqa": 111, "stream": [18, 19, 73], "stream_queri": 51, "streamlit": 127, "streamrespons": [0, 15], "strictli": 45, "string": [0, 6, 16, 27, 28, 29, 32, 36, 39, 51, 64, 65, 75, 103, 107, 118], "strip": 17, "structur": [6, 9, 11, 27, 49, 51, 63, 118, 123, 125, 127], "structured_output": [18, 19], "studi": [106, 113], "sub": 111, "submodul": [1, 4, 31], "subpackag": 31, "subsequ": 17, "subset": 8, "success": 67, "successfulli": [32, 43, 127], "sudo": 126, "suffix": [17, 103], "suffix_prompt": [23, 103], "suggest": [36, 120, 123, 126], "suit": [65, 66, 68], "sum": [6, 54], "summar": [53, 75, 79], "summari": [15, 19, 29, 32, 43, 45, 51, 54, 120, 127], "summary_df": [15, 27, 29], "summary_df_to_yaml": [0, 15], "summary_path": 29, "super": [46, 49, 92], "support": [10, 11, 17, 27, 31, 36, 38, 39, 47, 48, 49, 54, 56, 57, 63, 68, 72, 73, 75, 80, 81, 85, 86, 88, 92, 93, 97, 114, 118, 121, 123, 124, 126, 127], "support_similarity_metr": [0, 30], "sure": [57, 58, 59, 61, 62, 127], "survei": 123, "swap": 124, "swedish": 32, "synonym": 53, "syntax": 67, "synthet": [39, 50], "system": [0, 10, 36, 46, 47, 49, 51, 57, 64, 65, 66, 67, 68, 71, 72, 79, 80, 81, 98, 107, 116, 124, 125], "system_prompt": [0, 11, 45, 46], "t": [0, 6, 10, 25, 29, 36, 38, 39, 43, 45, 46, 48, 50, 51, 52, 54, 56, 57, 64, 65, 66, 68, 107, 111, 114, 121, 123, 126], "tabl": [10, 43], "table_detect": [40, 44], "table_hybrid_pars": [0, 1, 43, 44], "table_param": 44, "table_parse_modul": 44, "tailor": [79, 115, 124], "take": [60, 64, 65, 66, 68, 69, 121, 123], "taken": 29, "target": [6, 21, 29, 57, 78, 123], "target_dict": [0, 29], "target_kei": 29, "target_modul": [27, 62, 112, 114, 118], "target_module_param": [27, 114], "target_node_lin": 123, "target_token": [21, 78], "tart": [18, 23, 57, 75, 96, 98], "task": [0, 29, 53, 71, 97], "task_ev": 0, "tcultmq5": 56, "team": 40, "techniqu": 124, "tecolot": 49, "tell": [105, 106, 107, 108], "temperatur": [0, 38, 39, 47, 60, 62, 69, 71, 72, 73, 74, 80, 81, 99, 109, 110, 111, 112, 120, 126], "temporari": [6, 63, 124], "temporarili": 124, "tenant": [30, 63], "tensor_parallel_s": 74, "term": [54, 112], "termin": 62, "tesseract": 57, "test": [52, 54, 57, 60, 63, 69, 71, 76, 79, 82, 98, 112, 114, 118, 119, 120], "test01": 57, "test_siz": [6, 38], "test_weight_s": [114, 116], "testset": 38, "text": [0, 2, 5, 6, 7, 17, 21, 27, 29, 30, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 49, 51, 58, 64, 65, 66, 67, 68, 69, 71, 72, 74, 78, 80, 81, 100, 103], "text_kei": [30, 64, 68], "text_nod": 5, "text_param": 44, "text_parse_modul": 44, "text_splitt": 33, "textnod": [5, 39], "textsplitt": 2, "textur": 111, "tf": 113, "than": [6, 12, 27, 36, 45, 47, 49, 53, 67, 74, 76, 84, 111, 113, 119, 120, 123, 126], "thei": [39, 49, 53, 64, 79, 118, 123, 124], "them": [25, 26, 27, 29, 36, 42, 54, 64, 65, 66, 67, 68, 81, 120, 121], "theoret": [27, 114], "therefor": [39, 44, 50, 54, 55, 107, 112], "thi": [0, 2, 5, 6, 9, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "thing": [118, 127], "think": [36, 118, 120, 123], "third": [27, 54, 55], "those": [47, 49, 114], "thought": 53, "three": [32, 35, 43, 55, 84, 119, 121, 123], "threshold": [0, 71, 75, 79, 82, 84, 98, 107, 112, 116, 118, 124], "threshold cutoff": 87, "threshold_cutoff": [0, 18, 87], "threshold_datetim": 84, "thresholdcutoff": [18, 22], "through": [56, 59, 69, 97, 107, 112], "thu": 54, "tier": [66, 126], "time": [6, 36, 46, 52, 56, 65, 67, 71, 75, 79, 82, 83, 84, 85, 98, 107, 112, 116, 119, 120, 121, 124, 127], "time_rerank": [0, 18, 75, 102], "timeout": [0, 30, 65, 126], "timererank": [18, 23, 102], "tiny2": 69, "tinybert": [23, 92], "tip": 57, "titan": 58, "tmm": [27, 114, 116], "to_list": [0, 29], "to_parquet": [1, 8, 48, 50], "token": [0, 10, 17, 18, 19, 21, 23, 27, 30, 32, 48, 50, 53, 60, 65, 67, 69, 71, 74, 78, 79, 99, 107, 125], "token_false_id": 23, "token_limit": 29, "token_threshold": [71, 107], "token_true_id": 23, "tokenization_enc_t5": [18, 23], "tokenize_ja_sudachipi": [18, 27], "tokenize_ko_kiwi": [18, 27], "tokenize_ko_kkma": [18, 27], "tokenize_ko_okt": [18, 27], "tokenize_porter_stemm": [18, 27], "tokenize_spac": [18, 27], "tokenizer_output": 23, "tokentextsplitt": 39, "tolist": 125, "too": [6, 46, 88, 93, 119, 120], "took": 119, "tool": 56, "toolkit": 97, "top": [20, 23, 74, 76, 98, 112, 116, 118, 119], "top_k": [6, 20, 23, 26, 27, 29, 30, 39, 62, 64, 65, 66, 68, 70, 76, 82, 98, 112, 114, 115, 116, 118, 122, 123], "top_logprob": 73, "top_n": [18, 23], "top_p": 74, "topic": 53, "topn": 54, "torch_dtyp": [59, 69], "total": 55, "tpm": 93, "track": 36, "trail": [67, 119, 127], "trail_fold": 15, "train": [45, 119, 127], "transform": [0, 23, 51, 69, 74, 75, 98], "translat": [17, 53], "treat": [36, 118], "tree": [75, 79], "tree summar": 81, "tree_summar": [0, 18, 60, 69, 75, 79, 81], "treesummar": [18, 21], "trend": 51, "trg_lang": 17, "trial": [0, 15, 51, 126], "trial_dir": [0, 29, 51, 127], "trial_fold": [52, 127], "trial_path": [0, 15, 52], "troubl": [56, 67, 126], "troubleshoot": [56, 57], "true": [0, 5, 6, 9, 10, 11, 12, 15, 17, 20, 23, 28, 29, 39, 40, 42, 44, 47, 48, 50, 51, 52, 54, 57, 64, 67, 73, 83, 87, 104, 126], "truncat": [23, 27, 104], "truncate_by_token": [18, 19], "truncated_input": [0, 30], "truth": [6, 17, 36, 45, 47, 53, 54, 71, 120, 125], "try": [57, 123, 126], "tune": 110, "tupl": [0, 2, 7, 14, 16, 23, 27, 28, 29, 30, 36, 114, 115], "turbo": [25, 38, 39, 71, 72, 73, 79, 80, 81, 99, 107, 110, 111, 120, 126], "turkish": 32, "turn": 16, "tutori": [35, 38, 51, 52, 56, 123], "twitter": 56, "two": [8, 12, 27, 36, 39, 42, 53, 54, 59, 67, 69, 74, 93, 122, 123, 127], "two_hop_increment": [8, 12, 49], "two_hop_quest": [8, 12], "twohopincrementalrespons": [8, 12], "txt": [6, 39, 57], "type": [0, 6, 15, 17, 27, 28, 29, 32, 36, 39, 42, 43, 45, 46, 51, 54, 60, 68, 69, 71, 73, 74, 88, 89, 90, 91, 92, 93, 97, 100, 104, 109, 110, 111, 112, 113, 116, 123, 127], "typic": [49, 67, 106], "tyre": 123, "u": [30, 66, 111], "ui": 64, "ultim": 56, "ultra": 92, "unanswer": 10, "unavail": 45, "uncertain": 125, "under": [120, 126], "underscor": 79, "understand": [119, 120], "understudi": 53, "unexpect": [36, 127], "unicamp": 96, "uniform": 38, "unigram": [17, 53], "unintend": [47, 118], "union": [0, 15], "uniqu": [27, 36, 51, 79, 124], "unit": 39, "unknown": 0, "unless": 29, "unstructur": 41, "unstructured_api_kei": 41, "unstructuredmarkdown": 41, "unstructuredpdf": 41, "unstructuredxml": 41, "until": 124, "up": [36, 42, 55, 57, 75, 79, 81, 124, 127], "updat": [8, 36, 50, 60, 69], "update_corpu": [1, 8, 50], "upgrad": [57, 74, 126], "upon": 57, "upr": [0, 18, 57, 75, 98, 123], "uprscor": [18, 23], "upsert": [5, 6, 29], "upstage_api_kei": 41, "upstagedocumentpars": 41, "upstagedocumentparseload": 41, "upstagelayoutanalysi": 44, "uri": [30, 65, 67], "url": [30, 51, 60, 68, 69], "us": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 19, 21, 22, 23, 25, 26, 27, 29, 35, 36, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 78, 79, 80, 81, 82, 84, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 121, 123], "usag": [27, 79, 99, 117], "use_bf16": [23, 103], "use_fp16": [90, 91], "use_own_kei": [7, 42], "use_stemm": 17, "use_vendor_multimodal_model": [7, 42], "user": [0, 15, 30, 36, 39, 46, 52, 65, 76, 77, 103, 107, 110, 116, 119, 122, 123, 127], "user_prompt": 46, "usernam": [64, 65], "usr": 57, "usual": [45, 46], "util": [0, 1, 31, 51, 62, 98], "v": 57, "v0": [37, 39, 57, 59, 60, 69, 71, 74, 113], "v1": [0, 9, 10, 11, 12, 15, 23, 29, 58, 61, 69, 88, 93, 95, 96], "v2": [17, 23, 69, 88, 90, 92, 96, 100], "vagu": 47, "valid": [6, 8, 31, 64, 65, 66, 68, 120, 126], "validate_corpus_dataset": [0, 29], "validate_llama_index_prompt": [4, 6], "validate_qa_dataset": [0, 29], "validate_qa_from_corpus_dataset": [0, 29], "validate_strategy_input": [0, 31], "valu": [0, 6, 15, 16, 17, 20, 27, 28, 29, 33, 34, 36, 39, 41, 46, 53, 54, 60, 68, 69, 83, 84, 85, 86, 87, 102, 114, 115, 118, 120, 122, 125, 126], "valuabl": 39, "value_column_nam": 29, "valueerror": 126, "vari": [47, 112, 114, 124], "variabl": [7, 29, 41, 57, 67, 73, 88, 93, 95, 104, 126], "variant": 96, "variat": [36, 112], "variou": [32, 43, 56, 62, 63, 65, 71, 79, 97, 98, 107, 116], "ve": 67, "vector": [0, 6, 27, 30, 63, 64, 65, 66, 68, 117, 123], "vector db": [67, 117], "vector_db": 27, "vectordb": [0, 18, 26, 31, 39, 62, 63, 64, 67, 69, 70, 75, 112, 113, 116, 118, 119], "vectordb_ingest": [18, 27], "vectordb_nam": 30, "vectordb_pur": [18, 27], "vendor": [7, 42], "vendor_multimodal_api_kei": [7, 42], "vendor_multimodal_model_nam": [7, 42], "verbos": [18, 23, 99], "veri": 56, "verifi": [49, 67], "version": [0, 15, 27, 36, 49, 70, 74, 113, 120, 122, 125, 126, 127], "versionrespons": [0, 15], "video": 36, "view": 56, "viscond": 111, "vision": 97, "visit": [27, 58, 59, 61, 63], "vllm": [0, 17, 18, 71, 75, 107, 126], "voil\u00e0": 123, "voyag": 23, "voyage_api_kei": [104, 121], "voyage_cli": 23, "voyageai": [0, 18, 104, 121], "voyageai_rerank": 98, "voyageai_rerank_pur": [18, 23], "voyageairerank": [18, 23], "vram": 126, "wa": [27, 32, 40, 43, 49, 51, 53, 54, 60, 69, 120, 121, 126], "wai": [26, 42, 45, 46, 47, 49, 52, 58, 59, 65, 69, 118, 120, 123, 126], "wait": [57, 65, 74], "want": [0, 6, 8, 15, 17, 25, 27, 28, 29, 33, 34, 36, 39, 41, 42, 44, 47, 49, 50, 55, 56, 57, 58, 59, 60, 61, 69, 70, 84, 88, 89, 90, 91, 92, 93, 97, 100, 102, 104, 113, 114, 115, 118, 120, 124, 125], "warn": 17, "water": 55, "we": [0, 17, 21, 22, 23, 32, 35, 36, 39, 43, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 60, 62, 67, 69, 71, 74, 107, 112, 113, 117, 118, 119, 120, 121, 123, 126, 127], "weaviat": [0, 31, 67], "weaviate_api_kei": 68, "weaviate_db": 68, "weaviate_url": 68, "web": [15, 31], "websit": 61, "weight": [17, 27, 53, 62, 112, 114, 115], "weight_rang": [70, 114, 115, 116], "welcom": 123, "well": [0, 32, 39, 43, 48, 53, 54, 56], "were": 52, "what": [10, 32, 36, 43, 49, 54, 56, 60, 61, 62, 69, 70, 103, 105, 106, 107, 108, 111, 119, 124], "when": [0, 6, 10, 15, 17, 21, 22, 23, 25, 27, 36, 40, 46, 49, 55, 57, 60, 66, 67, 69, 71, 73, 74, 82, 84, 93, 102, 106, 107, 111, 117, 118, 119, 124, 127], "where": [47, 56, 62, 64, 65, 66, 68, 79, 116, 119], "whether": [0, 5, 7, 15, 17, 23, 42, 45, 53, 64, 66, 73, 90, 91, 103, 104], "which": [6, 15, 17, 19, 25, 27, 29, 36, 39, 46, 49, 52, 53, 54, 55, 56, 60, 62, 68, 69, 70, 72, 79, 80, 81, 82, 93, 107, 113, 114, 115, 118, 120, 121, 123, 126, 127], "whichev": 54, "while": [39, 47, 57, 124], "whitespac": [27, 29], "who": [49, 127], "whole": [0, 8, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 120, 127], "why": [36, 120, 123], "wikipedia": 49, "wildcard": 43, "window": [75, 107], "window_replac": [0, 18, 75, 108], "window_s": 32, "windowreplac": [18, 25], "wise": 99, "with_debugging_log": 6, "within": [45, 49, 66, 71, 79, 98, 107, 116, 124], "withjsonschema": 0, "without": [44, 45, 56, 58, 59, 61, 67, 70, 72, 73, 76, 79, 80, 81, 82, 98, 109, 112, 114, 123, 127], "wonder": 120, "word": [11, 17, 35, 45, 53, 113, 125], "work": [39, 57, 65, 114, 118, 126, 127], "worker": 0, "would": [26, 54, 119], "wrapper": 0, "write": [23, 35, 46, 57, 64, 99, 103, 111, 114, 118, 120, 123], "written": [33, 34, 41], "wrong": [2, 32, 39, 123], "www": 56, "x": [0, 23, 32, 51, 56, 60, 125], "x86": 97, "xsmall": 95, "yaml": [0, 15, 29, 51, 53, 56, 57, 60, 65, 67, 69, 70, 75, 120, 122, 123, 124, 126], "yaml_filepath": 0, "yaml_path": [0, 14, 15, 29, 30, 52, 127], "yaml_to_markdown": [0, 31], "ye": 49, "yet": [38, 57, 123], "yml": [15, 118], "you": [0, 2, 5, 6, 7, 8, 10, 15, 17, 20, 21, 22, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127], "your": [0, 6, 15, 17, 32, 35, 36, 37, 40, 42, 43, 45, 46, 50, 51, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 73, 74, 82, 88, 92, 93, 95, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 120, 122, 123, 126], "your_api_bas": [59, 60, 69], "your_api_kei": [59, 60, 61, 63, 69, 126], "your_cohere_api_kei": [88, 121], "your_dir_path": 39, "your_jina_api_kei": [93, 121], "your_mixedbread_api_kei": [95, 121], "your_openai_api_kei": 42, "your_profile_nam": 58, "your_voyageai_api_kei": [104, 121], "yourself": [27, 113, 114], "yyyi": 84, "z": [27, 114, 116], "zcal": 56, "zero": [103, 109]}, "titles": ["autorag package", "autorag.data package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.legacy package", "autorag.data.legacy.corpus package", "autorag.data.legacy.qacreation package", "autorag.data.parse package", "autorag.data.qa package", "autorag.data.qa.evolve package", "autorag.data.qa.filter package", "autorag.data.qa.generation_gt package", "autorag.data.qa.query package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.deploy package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag.vectordb package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Dataset Format", "Legacy", "RAGAS evaluation data generation", "Start creating your own evaluation data", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Query Evolving", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG documentation", "Installation and Setup", "AWS Bedrock x AutoRAG", "HuggingFace LLM x AutoRAG", "Configure LLM", "Nvidia Nim x AutoRAG", "OLLAMA x AutoRAG", "Chroma", "Couchbase", "Milvus", "Pinecone", "Configure Vector DB", "Weaviate", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "FlashRank Reranker", "jina_reranker", "Ko-reranker", "Mixedbread AI Reranker", "MonoT5", "OpenVINO Reranker", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "voyageai_reranker", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Sample YAML file guide", "Strategy", "Road to Modular RAG", "Structure", "Evaluate your RAG", "TroubleShooting", "Tutorial"], "titleterms": {"": 54, "0": [54, 55], "1": [32, 33, 34, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 68, 73, 112, 126, 127], "2": [32, 33, 34, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 68, 73, 116, 126, 127], "3": [32, 33, 34, 41, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 70, 73, 76, 126, 127], "4": [32, 34, 41, 43, 48, 49, 50, 51, 53, 54, 98, 126], "5": [34, 41, 48, 53, 54, 57, 82, 126], "6": [41, 48, 53, 54, 57, 79], "7": [41, 70, 107], "8": 71, "For": 113, "If": 39, "The": [40, 126], "about": 123, "access": [51, 57, 64], "accur": 73, "add": [32, 60, 69], "addit": [57, 67, 114, 115], "address": 64, "advanc": 125, "ai": 95, "align": 125, "all": [41, 120], "allow": 64, "also": 127, "an": 127, "ani": 113, "answer": [45, 48], "api": [15, 41, 51, 57, 121, 126, 127], "appli": [54, 55], "ask": 126, "augment": [76, 77], "auto": [39, 73], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 52, 54, 55, 56, 57, 58, 59, 61, 62, 123, 126, 127], "autotoken": 113, "avail": [32, 33, 34, 41, 44, 75], "averag": 54, "aw": 58, "backend": 117, "base": [2, 6, 7, 11, 13, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 47], "basic": [35, 45, 54, 55], "bedrock": 58, "befor": [50, 88, 93, 95, 104], "benefit": [76, 79, 82, 98, 112], "bert": 53, "best": 120, "between": 82, "bleu": 53, "bm25": [27, 113], "bodi": 51, "both": 39, "bucket": 64, "build": [57, 126], "cach": 57, "can": [56, 120], "cc": 114, "charact": 33, "check": [32, 43], "chroma": [30, 63], "chunk": [2, 32, 33, 34, 50], "chunker": [0, 32], "cli": [0, 52], "client": [51, 63], "cloud": 68, "clova": [7, 40], "cluster": 64, "code": [51, 67, 125, 127], "coher": [23, 53], "cohere_rerank": 88, "colab": 127, "colbert": [23, 89], "collect": 64, "column": [32, 43], "come": 40, "command": [51, 67, 127], "common": [60, 69], "compact": 121, "complet": 49, "compress": 46, "concept": [35, 49, 124], "concis": 45, "condit": 46, "config": [58, 59, 61, 62, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127], "configur": [60, 63, 64, 65, 66, 67, 68, 69, 122, 125], "consider": 67, "consist": 53, "contact": 123, "contain": 57, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 48], "context": 106, "corpu": [3, 5, 36, 38, 39, 50, 126], "corpus_data": 126, "couchbas": 64, "could": 126, "creat": [39, 64, 127], "creation": [35, 48, 50, 70], "csv": [41, 119], "cumul": 54, "curl": 51, "custom": [38, 39, 45, 46, 49, 57, 118, 127], "cutoff": [83, 85, 86, 87], "dashboard": [0, 127], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 35, 38, 39, 48, 50, 70, 119, 126], "data_path_glob": 43, "databas": 67, "dataclass": 125, "dataset": [36, 127], "db": 67, "debug": 57, "decompos": 111, "deepeval_prompt": 17, "default": [67, 111], "definit": [53, 54, 55, 71, 76, 79, 82, 98, 107, 112, 116], "depend": 47, "deploi": [15, 127], "detect": [40, 44], "determin": 68, "didn": 127, "differ": [82, 126], "directori": 57, "discount": 54, "do": 120, "doc_id": 36, "docker": [57, 68], "document": [39, 56], "don": 47, "dontknow": 10, "download": 62, "dure": 127, "earli": 123, "ecosystem": 56, "edit": 64, "embed": [69, 90, 91], "endpoint": 51, "environ": [42, 61, 62, 118], "error": [126, 127], "eval": 53, "evalu": [0, 16, 17, 38, 39, 50, 120, 125, 127], "evaluate_gener": 125, "evaluate_retriev": 125, "evolv": [9, 46], "exampl": [32, 33, 34, 40, 41, 42, 44, 49, 51, 52, 54, 55, 64, 66, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125], "exist": 39, "expans": [110, 112], "explan": [57, 114, 115, 124], "extract": [42, 127], "extract_evid": 8, "f": 105, "f1": [54, 55], "face": 126, "factoid": 49, "featur": [32, 39], "file": [32, 41, 43, 50, 58, 59, 61, 62, 64, 66, 68, 71, 76, 79, 82, 98, 107, 112, 116, 118, 121, 127], "filter": [10, 47, 48, 82, 84], "find": 127, "first": 127, "flag": [90, 91], "flag_embed": 23, "flag_embedding_llm": 23, "flashrank": [23, 92], "fluenci": 53, "folder": [32, 43, 52, 119, 127], "format": [36, 127], "found": 126, "founder": 56, "frequent": 126, "from": [38, 39, 40, 57, 126], "fstring": 25, "full": [67, 121], "function": 46, "g": 53, "gain": 54, "gener": [16, 17, 19, 38, 45, 48, 49, 53, 71, 125], "generation_gt": [11, 36, 39], "get": [48, 51, 56, 121], "gpu": [57, 74, 121, 126], "gradio": [15, 52], "gt": 48, "guid": [70, 121], "half": 121, "have": [39, 41], "help": 56, "hf_home": 57, "hop": 49, "how": [33, 34, 41, 53, 56, 68, 120], "html": [40, 41], "huggingfac": [59, 69, 113], "hybrid": [44, 114, 115], "hybrid_cc": 27, "hybrid_rrf": 27, "hyde": [26, 109], "i": [32, 33, 34, 39, 41, 68, 76, 79, 82, 98, 112, 118, 120, 123, 126], "id": 126, "imag": 57, "import": [125, 126], "increment": 49, "index": [34, 39, 60, 64, 69, 119], "inform": 40, "ingest": 67, "initi": 63, "instal": [57, 61, 62, 126], "instanc": [32, 43], "instead": 52, "integr": 60, "interfac": [52, 127], "ip": 64, "japanes": [57, 113], "jina": 23, "jina_rerank": 93, "json": [41, 119], "jupyt": 126, "kei": [57, 63, 121], "know": [47, 123], "ko": 94, "ko_kiwi": 113, "ko_kkma": 113, "ko_okt": 113, "korean": [57, 113], "korerank": 23, "langchain": [3, 5, 33, 41], "langchain_chunk": 2, "langchain_pars": 7, "languag": 42, "legaci": [4, 5, 6, 37], "length": 126, "line": [67, 118, 119, 123, 124, 127], "lingua": 78, "list": [60, 75], "llama": [34, 42], "llama_gen_queri": 12, "llama_index": [3, 5, 6, 13, 72], "llama_index_chunk": 2, "llama_index_gen_gt": 11, "llama_index_llm": 19, "llama_index_query_evolv": 9, "llamaindex": [45, 126], "llamapars": 7, "llm": [47, 59, 60, 62, 69, 72, 73, 78, 90, 126], "local": 57, "log": 73, "long": [36, 78, 106], "long_context_reord": 25, "longllmlingua": 21, "make": [39, 46, 118], "maker": 107, "manual": 57, "map": [50, 54], "markdown": 41, "mean": [54, 122], "merger": 123, "metadata": 36, "meteor": 53, "method": [33, 34, 41], "metric": [17, 53, 54, 55], "metricinput": [28, 125], "migrat": 70, "milvu": [30, 65], "mixedbread": 95, "mixedbreadai": 23, "model": [38, 42, 57, 60, 62, 69, 95, 96, 104], "modeling_enc_t5": 24, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 44, 60, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 124], "modular": 123, "monot5": [23, 96], "more": [60, 69, 120, 123], "mrr": 54, "multi": [74, 110], "multi_query_expans": 26, "multimod": 42, "multipl": 39, "must": 41, "name": [32, 95, 96, 104], "ndcg": 54, "need": [41, 120], "next": [77, 120, 127], "ngrok": 51, "nim": 61, "node": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 71, 76, 79, 82, 98, 107, 112, 115, 116, 118, 119, 120, 123, 124, 127], "node_lin": 0, "non": 121, "normal": [54, 122], "note": [57, 92, 127], "notebook": 126, "nvidia": 61, "occur": 127, "ollama": [62, 126], "onli": 39, "openai": [45, 57, 73, 126], "openai_gen_gt": 11, "openai_gen_queri": 12, "openai_llm": [19, 73], "openai_query_evolv": 9, "openvino": [23, 97], "optim": [120, 126, 127], "option": [36, 67], "origin": 126, "output": [32, 43, 73], "overview": [32, 39, 43, 48, 49, 50, 67, 71, 79, 98, 107, 112, 116, 122], "own": 39, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "paramet": [41, 43, 44, 51, 60, 63, 64, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122], "pars": [7, 41, 42, 43, 44, 50, 57], "parser": [0, 40, 43], "pass": 120, "pass_compressor": [21, 79], "pass_passage_augment": [20, 76], "pass_passage_filt": [22, 82], "pass_query_expans": [26, 112], "pass_rerank": [23, 98], "passag": [39, 47, 76, 82], "passage_compressor": 79, "passage_depend": 10, "passage_rerank": 98, "passageaugment": 20, "passagecompressor": 21, "passagefilt": 22, "passagererank": [23, 24], "path": [36, 52], "pdf": 41, "percentil": [83, 85], "percentile_cutoff": 22, "pinecon": [30, 66], "pipelin": [32, 43, 127], "point": 40, "polici": 123, "porter_stemm": 113, "post": 51, "pre_retrieve_node_lin": 119, "precis": [54, 55], "prepar": [125, 127], "preprocess": 29, "prev": 77, "prev_next_augment": 20, "prob": 73, "profil": 58, "project": [32, 43, 52, 119, 127], "prompt": [9, 10, 11, 12, 39, 73, 107, 111], "promptmak": 25, "properti": 51, "provid": 46, "public": 51, "purpos": [71, 79, 116], "python": [51, 67, 127], "qa": [8, 9, 10, 11, 12, 36, 38, 39, 48, 50], "qacreat": [6, 13], "qid": 36, "queri": [12, 36, 39, 46, 48, 49, 64, 110, 111, 112], "query_decompos": 26, "query_expans": 119, "queryexpans": 26, "question": [38, 47, 48, 49, 126], "rag": [123, 125, 127], "raga": [6, 13, 38], "rank": [54, 122], "rankgpt": [23, 99], "raw": 39, "reason": 46, "recal": [54, 55], "recenc": [22, 84], "reciproc": 54, "recommend": 36, "refin": [21, 80], "relat": 126, "relev": 53, "reorder": 106, "replac": 108, "request": 51, "requesttimeout": 126, "rerank": [82, 89, 90, 91, 92, 94, 95, 97, 100, 102], "resourc": 119, "respons": 51, "restart": 127, "result": [32, 43, 120, 127], "retriev": [16, 17, 27, 48, 51, 54, 55, 116, 125], "retrieval_cont": [16, 17], "retrieval_gt": [36, 54], "retrieve_node_lin": 119, "road": 123, "roug": 53, "row": 126, "rrf": 115, "rule": 47, "run": [2, 7, 19, 20, 21, 22, 23, 25, 26, 27, 32, 43, 51, 52, 57, 58, 59, 61, 62, 126, 127], "runner": 52, "sampl": [8, 36, 48, 51, 119, 121], "save": [39, 48], "schema": [8, 28], "scope": 64, "score": [53, 54, 68, 125], "see": 127, "sem": 53, "sem_scor": 71, "semant": 34, "sentenc": [32, 33, 34, 100], "sentence_transform": 23, "separ": 40, "server": [51, 62, 126, 127], "set": [32, 38, 42, 43, 50, 58, 61, 62], "setup": 57, "short": 36, "similar": [85, 86], "similarity_percentile_cutoff": 22, "similarity_threshold_cutoff": 22, "simpl": [6, 13, 34, 121], "sourc": 57, "space": 113, "specif": 53, "specifi": [32, 43, 52, 118, 127], "splitter": 32, "start": [32, 39, 43, 50, 56], "start_end_idx": 36, "step": 127, "stori": 36, "strategi": [0, 71, 79, 98, 107, 112, 116, 120, 122, 124], "stream": 51, "streamlit": 52, "string": 105, "structur": [119, 124], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "subpackag": [0, 1, 4, 8, 16, 18, 23], "success": 51, "sudachipi": 113, "summar": [81, 124], "summari": 119, "support": [0, 32, 42, 43, 60, 67, 69, 71, 79, 95, 96, 98, 104, 107, 112, 116, 117], "swap": 120, "system": 127, "t": [47, 120, 127], "tabl": [40, 42, 44], "table_hybrid_pars": 7, "talk": 56, "tart": [24, 101], "test": 127, "text": 40, "threshold": [86, 87], "threshold_cutoff": 22, "time": 102, "time_rerank": 23, "token": [33, 34, 55, 73, 113], "tokenization_enc_t5": 24, "transform": 100, "tree": 81, "tree_summar": 21, "trial": [52, 119, 127], "trial_path": 127, "troubl": [57, 113], "troubleshoot": 126, "truncat": 73, "tunnel": 51, "tupl": 118, "tutori": [50, 127], "two": 49, "type": [38, 41, 49, 63], "u": 123, "unanswer": 47, "understand": 54, "up": [58, 61, 62], "upr": [23, 103], "us": [32, 33, 34, 38, 39, 41, 42, 51, 52, 53, 57, 58, 59, 60, 61, 69, 73, 74, 113, 118, 120, 122, 125, 126, 127], "usag": [49, 51, 64, 65, 66, 67, 68, 88, 93, 95, 104], "user": 57, "util": [14, 16, 17, 18, 29], "v0": 70, "v1": 51, "valid": [0, 127], "variabl": [42, 118], "vector": 67, "vectordb": [27, 30, 117], "version": [51, 57, 123], "vllm": [19, 69, 74], "voyageai": 23, "voyageai_rerank": 104, "want": [32, 43, 52, 123, 127], "weaviat": [30, 68], "web": [0, 52, 127], "what": [39, 76, 79, 82, 98, 112, 118, 123, 127], "wheel": 126, "when": [39, 126], "while": 126, "why": [52, 56, 73, 74, 127], "window": [34, 57, 108], "window_replac": 25, "work": 120, "write": [58, 59, 61, 62, 127], "x": [58, 59, 61, 62], "xml": 41, "yaml": [32, 33, 34, 40, 41, 42, 43, 44, 50, 52, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 127], "you": [39, 50], "your": [39, 69, 125, 127]}})